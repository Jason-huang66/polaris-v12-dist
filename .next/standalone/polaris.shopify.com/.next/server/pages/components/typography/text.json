{"pageProps":{"mdx":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    h2: \"h2\",\n    a: \"a\",\n    code: \"code\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\",\n    hr: \"hr\",\n    h3: \"h3\",\n    h4: \"h4\",\n    pre: \"pre\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components), {Lede, Examples, Props} = _components;\n  if (!Examples) _missingMdxReference(\"Examples\", true);\n  if (!Lede) _missingMdxReference(\"Lede\", true);\n  if (!Props) _missingMdxReference(\"Props\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      id: \"frontmattertitle\",\n      children: frontmatter.title\n    }), \"\\n\", _jsx(Lede, {\n      children: _jsx(_components.p, {\n        children: \"Typography helps establish hierarchy and communicate important content by creating clear visual patterns.\"\n      })\n    }), \"\\n\", _jsx(Examples, {}), \"\\n\", _jsx(Props, {\n      componentName: frontmatter.title\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"variant-tokens\",\n      children: \"Variant tokens\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Each variant uses a predetermined combination of the \", _jsx(_components.a, {\n        href: \"/tokens/font\",\n        children: \"font tokens\"\n      }), \" to set the font size and line height. Heading variants have a set font weight but can be overridden by using the \", _jsx(_components.code, {\n        children: \"fontWeight\"\n      }), \" prop. Nested Text components will inherit properties from its parent Text container.\"]\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Variant\"\n          }), _jsx(_components.th, {\n            children: \"Font size token\"\n          }), _jsx(_components.th, {\n            children: \"px value\"\n          }), _jsx(_components.th, {\n            children: \"rem value\"\n          }), _jsx(_components.th, {\n            children: \"Font line height token\"\n          }), _jsx(_components.th, {\n            children: \"Font weight token\"\n          }), _jsx(_components.th, {\n            children: \"Reponsive\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"heading3xl\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"--p-font-size-900\"\n            })\n          }), _jsx(_components.td, {\n            children: \"36\"\n          }), _jsx(_components.td, {\n            children: \"2.25\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"--p-line-height-1200\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"--p-font-weight-bold\"\n            })\n          }), _jsx(_components.td, {\n            children: \"Yes\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"heading2xl\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"--p-font-size-750\"\n            })\n          }), _jsx(_components.td, {\n            children: \"30\"\n          }), _jsx(_components.td, {\n            children: \"1.875\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"--p-line-height-1000\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"--p-font-weight-bold\"\n            })\n          }), _jsx(_components.td, {\n            children: \"Yes\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"headingXl\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"--p-font-size-600\"\n            })\n          }), _jsx(_components.td, {\n            children: \"24\"\n          }), _jsx(_components.td, {\n            children: \"1.5\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"--p-line-height-800\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"--p-font-weight-bold\"\n            })\n          }), _jsx(_components.td, {\n            children: \"Yes\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"headingLg\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"--p-font-size-500\"\n            })\n          }), _jsx(_components.td, {\n            children: \"20\"\n          }), _jsx(_components.td, {\n            children: \"1.25\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"--p-line-height-600\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"--p-font-weight-semibold\"\n            })\n          }), _jsx(_components.td, {\n            children: \"Yes\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"headingMd\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"--p-font-size-350\"\n            })\n          }), _jsx(_components.td, {\n            children: \"14\"\n          }), _jsx(_components.td, {\n            children: \"0.875\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"--p-line-height-500\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"--p-font-weight-semibold\"\n            })\n          }), _jsx(_components.td, {\n            children: \"No\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"headingSm\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"--p-font-size-325\"\n            })\n          }), _jsx(_components.td, {\n            children: \"13\"\n          }), _jsx(_components.td, {\n            children: \"0.8125\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"--p-line-height-500\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"--p-font-weight-semibold\"\n            })\n          }), _jsx(_components.td, {\n            children: \"No\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"bodyLg\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"--p-font-size-350\"\n            })\n          }), _jsx(_components.td, {\n            children: \"14\"\n          }), _jsx(_components.td, {\n            children: \"0.875\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"--p-line-height-500\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"--p-font-weight-regular\"\n            })\n          }), _jsx(_components.td, {\n            children: \"No\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"bodyMd\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"--p-font-size-325\"\n            })\n          }), _jsx(_components.td, {\n            children: \"13\"\n          }), _jsx(_components.td, {\n            children: \"0.8125\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"--p-line-height-500\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"--p-font-weight-regular\"\n            })\n          }), _jsx(_components.td, {\n            children: \"No\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"bodySm\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"--p-font-size-300\"\n            })\n          }), _jsx(_components.td, {\n            children: \"12\"\n          }), _jsx(_components.td, {\n            children: \"0.75\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"--p-line-height-400\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"--p-font-weight-regular\"\n            })\n          }), _jsx(_components.td, {\n            children: \"No\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"bodyXs\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"--p-font-size-275\"\n            })\n          }), _jsx(_components.td, {\n            children: \"11\"\n          }), _jsx(_components.td, {\n            children: \"0.6875\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"--p-line-height-300\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"--p-font-weight-regular\"\n            })\n          }), _jsx(_components.td, {\n            children: \"No\"\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h2, {\n      id: \"mapping-from-previous-type-components\",\n      children: \"Mapping from previous type components\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"These are suggested replacements for existing text style components, but ultimately the best replacement should be evaluated based on the context of the usage. The \", _jsx(_components.code, {\n        children: \"Text\"\n      }), \" component also requires setting the semantically appropriate html element through the \", _jsx(_components.code, {\n        children: \"as\"\n      }), \" prop.\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"displaytext\",\n      children: \"DisplayText\"\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"small\",\n      children: \"Small\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-diff\",\n        children: \"- <DisplayText size=\\\"small\\\">Sales this year</DisplayText>\\n+ <Text variant=\\\"headingLg\\\" as=\\\"p\\\">Sales this year</Text>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"medium\",\n      children: \"Medium\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-diff\",\n        children: \"- <DisplayText size=\\\"medium\\\">Sales this year</DisplayText>\\n+ <Text variant=\\\"headingXl\\\" as=\\\"p\\\">Sales this year</Text>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"large\",\n      children: \"Large\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-diff\",\n        children: \"- <DisplayText size=\\\"large\\\">Sales this year</DisplayText>\\n+ <Text variant=\\\"heading2xl\\\" as=\\\"p\\\">Sales this year</Text>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"extra-large\",\n      children: \"Extra large\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-diff\",\n        children: \"- <DisplayText size=\\\"extraLarge\\\">Sales this year</DisplayText>\\n+ <Text variant=\\\"heading3xl\\\" as=\\\"p\\\">Sales this year</Text>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"heading\",\n      children: \"Heading\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-diff\",\n        children: \"- <Heading>Online store dashboard</Heading>\\n+ <Text variant=\\\"headingMd\\\" as=\\\"h2\\\">Online store dashboard</Text>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"subheading\",\n      children: \"Subheading\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-diff\",\n        children: \"- <Subheading>Accounts</Subheading>\\n+ <Text variant=\\\"headingSm\\\" as=\\\"h3\\\">Accounts</Text>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"caption\",\n      children: \"Caption\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-diff\",\n        children: \"- <Caption>Received April 21, 2017</Caption>\\n+ <Text variant=\\\"bodySm\\\" as=\\\"p\\\">Received April 21, 2017</Text>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"textstyle\",\n      children: \"TextStyle\"\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"subdued\",\n      children: \"Subdued\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-diff\",\n        children: \"- <TextStyle variation=\\\"subdued\\\">No supplier listed</TextStyle>\\n+ <Text as=\\\"span\\\" tone=\\\"subdued\\\">No supplier listed</Text>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"strong\",\n      children: \"Strong\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-diff\",\n        children: \"- <TextStyle variation=\\\"strong\\\">No supplier listed</TextStyle>\\n+ <Text as=\\\"span\\\" fontWeight=\\\"semibold\\\" >No supplier listed</Text>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"positive\",\n      children: \"Positive\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-diff\",\n        children: \"- <TextStyle variation=\\\"positive\\\">No supplier listed</TextStyle>\\n+ <Text as=\\\"span\\\" tone=\\\"success\\\">No supplier listed</Text>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"negative\",\n      children: \"Negative\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-diff\",\n        children: \"- <TextStyle variation=\\\"negative\\\">No supplier listed</TextStyle>\\n+ <Text as=\\\"span\\\" tone=\\\"critical\\\">No supplier listed</Text>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"warning\",\n      children: \"Warning\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-diff\",\n        children: \"- <TextStyle variation=\\\"warning\\\">No supplier listed</TextStyle>\\n+ <Text as=\\\"span\\\" tone=\\\"warning\\\">No supplier listed</Text>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"code\",\n      children: \"Code\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-diff\",\n        children: \"- <TextStyle variation=\\\"code\\\">No supplier listed</TextStyle>\\n+ <Text as=\\\"span\\\"><InlineCode>No supplier listed</InlineCode></Text>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"visuallyhidden\",\n      children: \"VisuallyHidden\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-diff\",\n        children: \"- <VisuallyHidden>\\n-   <Heading>Title and description</Heading>\\n- </VisuallyHidden>\\n+ <Text visuallyHidden as=\\\"h2\\\">Title and description</Text>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h2, {\n      id: \"best-practices\",\n      children: \"Best practices\"\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"headings\",\n      children: \"Headings\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Headings use all the variants with \", _jsx(_components.code, {\n        children: \"heading\"\n      }), \" in the name, such as \", _jsx(_components.code, {\n        children: \"headingMd\"\n      }), \". Headings should:\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Clearly describe the section of interface they refer to\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Highlight the most important concept or piece of information merchants need to know\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Sit at the top of the section of interface they’re referring to\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"captions\",\n      children: \"Captions\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Captions use the \", _jsx(_components.code, {\n        children: \"bodySm\"\n      }), \" Text variant.\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Use for secondary labels in graphs and charts\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"May be used for timestamps in lists of content\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Don’t use this variant for other cases\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Don’t use this variant for text longer than a few words\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Don’t use this variant for aesthetic effect or to break from the standard text size\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"text-styles\",\n      children: \"Text styles\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Text styles should be:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Used when enhancing the text to help merchants understand its meaning\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Subdued if the text is less important than its surrounding text\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Warning if the text denotes something that needs attention, or that merchants need to take action on.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Semibold for input fields, or for a row total in a price table\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Paired with symbols, like an arrow or dollar sign, when using success or critical styles\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"visually-hidden\",\n      children: \"Visually hidden\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Visually hidden text should:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Not be used if semantic markup can make content understandable to people using assistive technology\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Be used to provide extra context when semantic markup isn’t enough\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Be used on any content that is normally present but is being omitted\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Make sense in context when used with a screen reader\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.hr, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"title":"Text","category":"Typography","keywords":["titles","text","typographic","spacing","display","heading","body","success","critical","warning","subdued","regular","medium","semibold","bold","list"],"examples":[{"fileName":"text-heading.tsx","title":"Heading","description":"Use to create various levels of hierarchy on the page."},{"fileName":"text-body.tsx","title":"Body","description":"Use to create a range of body text. These styles are primarily used within components and blocks of text."},{"fileName":"text-align.tsx","title":"Align","description":"Use to set text alignment."},{"fileName":"text-weight.tsx","title":"Weight","description":"Use to give text a range of font weights."},{"fileName":"text-tone.tsx","title":"Tone","description":"Use to set text tone (color)."},{"fileName":"text-inheritance.tsx","title":"Inheritance","description":"Inherits props from a parent Text container"},{"fileName":"text-decoration.tsx","title":"Decoration","description":"Use to define text decoration"}],"previewImg":"/images/components/typography/text.png"},"scope":{"__remarkNextMdxImporter":{}}},"examples":[{"fileName":"text-heading.tsx","title":"Heading","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Use to create various levels of hierarchy on the page.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {Text, LegacyStack} from '@shopify/polaris';\nimport React from 'react';\n\nfunction TextExample() {\n  return (\n    <LegacyStack vertical>\n      <Text variant=\"heading3xl\" as=\"h2\">\n        Online store dashboard\n      </Text>\n      <Text variant=\"heading2xl\" as=\"h3\">\n        Online store dashboard\n      </Text>\n      <Text variant=\"headingXl\" as=\"h4\">\n        Online store dashboard\n      </Text>\n      <Text variant=\"headingLg\" as=\"h5\">\n        Online store dashboard\n      </Text>\n      <Text variant=\"headingMd\" as=\"h6\">\n        Online store dashboard\n      </Text>\n      <Text variant=\"headingSm\" as=\"h6\">\n        Online store dashboard\n      </Text>\n    </LegacyStack>\n  );\n}\n\n"},{"fileName":"text-body.tsx","title":"Body","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Use to create a range of body text. These styles are primarily used within components and blocks of text.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {Text, LegacyStack} from '@shopify/polaris';\nimport React from 'react';\n\nfunction TextExample() {\n  return (\n    <LegacyStack vertical>\n      <Text variant=\"bodyLg\" as=\"p\">\n        Shopify POS is the easiest way to sell your products in person.\n        Available for iPad, iPhone, and Android.\n      </Text>\n      <Text variant=\"bodyMd\" as=\"p\">\n        Shopify POS is the easiest way to sell your products in person.\n        Available for iPad, iPhone, and Android.\n      </Text>\n      <Text variant=\"bodySm\" as=\"p\">\n        Shopify POS is the easiest way to sell your products in person.\n        Available for iPad, iPhone, and Android.\n      </Text>\n      <Text variant=\"bodyXs\" as=\"p\">\n        Shopify POS is the easiest way to sell your products in person.\n        Available for iPad, iPhone, and Android.\n      </Text>\n    </LegacyStack>\n  );\n}\n\n"},{"fileName":"text-align.tsx","title":"Align","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Use to set text alignment.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {Text, LegacyStack} from '@shopify/polaris';\nimport React from 'react';\n\nfunction TextExample() {\n  return (\n    <LegacyStack vertical>\n      <Text variant=\"bodyLg\" as=\"p\" alignment=\"start\">\n        Manage your Shopify store on-the-go with real-time notifications, access\n        to your dashboard, and order management, all from your smartphone.\n      </Text>\n      <Text variant=\"bodyLg\" as=\"p\" alignment=\"center\">\n        Manage your Shopify store on-the-go with real-time notifications, access\n        to your dashboard, and order management, all from your smartphone.\n      </Text>\n      <Text variant=\"bodyLg\" as=\"p\" alignment=\"end\">\n        Manage your Shopify store on-the-go with real-time notifications, access\n        to your dashboard, and order management, all from your smartphone.\n      </Text>\n      <Text variant=\"bodyLg\" as=\"p\" alignment=\"justify\">\n        Manage your Shopify store on-the-go with real-time notifications, access\n        to your dashboard, and order management, all from your smartphone.\n      </Text>\n    </LegacyStack>\n  );\n}\n\n"},{"fileName":"text-weight.tsx","title":"Weight","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Use to give text a range of font weights.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {Text, LegacyStack} from '@shopify/polaris';\nimport React from 'react';\n\nfunction TextExample() {\n  return (\n    <LegacyStack vertical>\n      <Text as=\"p\" fontWeight=\"bold\">\n        Sales this year\n      </Text>\n      <Text as=\"p\" fontWeight=\"semibold\">\n        Sales this year\n      </Text>\n      <Text as=\"p\" fontWeight=\"medium\">\n        Sales this year\n      </Text>\n      <Text as=\"p\" fontWeight=\"regular\">\n        Sales this year\n      </Text>\n    </LegacyStack>\n  );\n}\n\n"},{"fileName":"text-tone.tsx","title":"Tone","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Use to set text tone (color).\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {Text, LegacyStack} from '@shopify/polaris';\nimport React from 'react';\n\nfunction TextExample() {\n  return (\n    <LegacyStack vertical>\n      <Text as=\"p\" tone=\"subdued\">\n        Use to de-emphasize a piece of text that is less important to merchants\n        than other nearby text. May also be used to indicate when normal content\n        is absent, for example, “No supplier listed”. Don’t use only for\n        aesthetic effect.\n      </Text>\n      <Text as=\"p\" tone=\"success\">\n        Use in combination with a symbol showing an increasing value to indicate\n        an upward trend.\n      </Text>\n      <Text as=\"p\" tone=\"caution\">\n        Use to denote something that needs attention, or that merchants need to\n        take action on.\n      </Text>\n      <Text as=\"p\" tone=\"critical\">\n        Use in combination with a symbol showing a decreasing value to indicate\n        a downward trend.\n      </Text>\n    </LegacyStack>\n  );\n}\n\n"},{"fileName":"text-inheritance.tsx","title":"Inheritance","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Inherits props from a parent Text container\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {Text} from '@shopify/polaris';\nimport React from 'react';\n\nfunction TextExample() {\n  return (\n    <Text as=\"p\" variant=\"heading2xl\" tone=\"caution\">\n      <Text as=\"span\">This is a 2xl heading</Text>\n      <br />\n      <Text as=\"span\">This is also a 2xl heading</Text>\n    </Text>\n  );\n}\n\n"},{"fileName":"text-decoration.tsx","title":"Decoration","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Use to define text decoration\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {Text, LegacyStack} from '@shopify/polaris';\nimport React from 'react';\n\nfunction TextExample() {\n  return (\n    <LegacyStack vertical>\n      <Text as=\"p\" textDecorationLine=\"line-through\">\n        $100.00\n      </Text>\n    </LegacyStack>\n  );\n}\n\n"}],"seoDescription":"Typography helps establish hierarchy and communicate important content by creating clear visual patterns.","type":{"TextProps":{"filePath":"polaris-react/src/components/Text/Text.tsx","name":"TextProps","description":"","members":[{"filePath":"polaris-react/src/components/Text/Text.tsx","syntaxKind":"PropertySignature","name":"alignment","value":"Alignment","description":"Adjust horizontal alignment of text","isOptional":true},{"filePath":"polaris-react/src/components/Text/Text.tsx","syntaxKind":"PropertySignature","name":"as","value":"Element","description":"The element type"},{"filePath":"polaris-react/src/components/Text/Text.tsx","syntaxKind":"PropertySignature","name":"breakWord","value":"boolean","description":"Prevent text from overflowing","isOptional":true},{"filePath":"polaris-react/src/components/Text/Text.tsx","syntaxKind":"PropertySignature","name":"children","value":"ReactNode","description":"Text to display"},{"filePath":"polaris-react/src/components/Text/Text.tsx","syntaxKind":"PropertySignature","name":"tone","value":"Tone","description":"Adjust tone of text","isOptional":true},{"filePath":"polaris-react/src/components/Text/Text.tsx","syntaxKind":"PropertySignature","name":"fontWeight","value":"FontWeight","description":"Adjust weight of text","isOptional":true},{"filePath":"polaris-react/src/components/Text/Text.tsx","syntaxKind":"PropertySignature","name":"id","value":"string","description":"HTML id attribute","isOptional":true},{"filePath":"polaris-react/src/components/Text/Text.tsx","syntaxKind":"PropertySignature","name":"numeric","value":"boolean","description":"Use a numeric font variant with monospace appearance","isOptional":true},{"filePath":"polaris-react/src/components/Text/Text.tsx","syntaxKind":"PropertySignature","name":"truncate","value":"boolean","description":"Truncate text overflow with ellipsis","isOptional":true},{"filePath":"polaris-react/src/components/Text/Text.tsx","syntaxKind":"PropertySignature","name":"variant","value":"Variant","description":"Typographic style of text","isOptional":true},{"filePath":"polaris-react/src/components/Text/Text.tsx","syntaxKind":"PropertySignature","name":"visuallyHidden","value":"boolean","description":"Visually hide the text","isOptional":true},{"filePath":"polaris-react/src/components/Text/Text.tsx","syntaxKind":"PropertySignature","name":"textDecorationLine","value":"\"line-through\"","description":"Add a line-through to the text","isOptional":true}],"value":"export interface TextProps {\n  /** Adjust horizontal alignment of text */\n  alignment?: Alignment;\n  /** The element type */\n  as: Element;\n  /** Prevent text from overflowing */\n  breakWord?: boolean;\n  /** Text to display */\n  children: ReactNode;\n  /** Adjust tone of text */\n  tone?: Tone;\n  /** Adjust weight of text */\n  fontWeight?: FontWeight;\n  /** HTML id attribute */\n  id?: string;\n  /** Use a numeric font variant with monospace appearance */\n  numeric?: boolean;\n  /** Truncate text overflow with ellipsis */\n  truncate?: boolean;\n  /** Typographic style of text */\n  variant?: Variant;\n  /** Visually hide the text */\n  visuallyHidden?: boolean;\n  /** Add a line-through to the text */\n  textDecorationLine?: TextDecorationLine;\n}"},"Alignment":{"filePath":"polaris-react/src/components/Text/Text.tsx","syntaxKind":"TypeAliasDeclaration","name":"Alignment","value":"'start' | 'center' | 'end' | 'justify'","description":""},"Element":{"filePath":"polaris-react/src/components/Text/Text.tsx","syntaxKind":"TypeAliasDeclaration","name":"Element","value":"'dt' | 'dd' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'p' | 'span' | 'strong' | 'legend'","description":""},"Tone":{"filePath":"polaris-react/src/components/Text/Text.tsx","syntaxKind":"TypeAliasDeclaration","name":"Tone","value":"'success' | 'critical' | 'caution' | 'subdued' | 'text-inverse'","description":""},"FontWeight":{"filePath":"polaris-react/src/components/Text/Text.tsx","syntaxKind":"TypeAliasDeclaration","name":"FontWeight","value":"'regular' | 'medium' | 'semibold' | 'bold'","description":""},"Variant":{"filePath":"polaris-react/src/components/Text/Text.tsx","syntaxKind":"TypeAliasDeclaration","name":"Variant","value":"'headingSm' | 'headingMd' | 'headingLg' | 'headingXl' | 'heading2xl' | 'heading3xl' | 'bodyXs' | 'bodySm' | 'bodyMd' | 'bodyLg'","description":""}},"editPageLinkPath":"polaris.shopify.com/content/components/typography/text.mdx"},"__N_SSG":true}