{"pageProps":{"mdx":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    a: \"a\",\n    h2: \"h2\",\n    hr: \"hr\",\n    ul: \"ul\",\n    li: \"li\",\n    h4: \"h4\",\n    h3: \"h3\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\",\n    code: \"code\"\n  }, _provideComponents(), props.components), {Lede, Examples, Props, DoDont} = _components;\n  if (!DoDont) _missingMdxReference(\"DoDont\", true);\n  if (!Examples) _missingMdxReference(\"Examples\", true);\n  if (!Lede) _missingMdxReference(\"Lede\", true);\n  if (!Props) _missingMdxReference(\"Props\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      id: \"frontmattertitle\",\n      children: frontmatter.title\n    }), \"\\n\", _jsx(Lede, {\n      children: _jsxs(_components.p, {\n        children: [\"The navigation component is used to display the primary navigation in the sidebar of the \", _jsx(_components.a, {\n          href: \"https://polaris.shopify.com/components/frame\",\n          children: \"frame\"\n        }), \" of an application. Navigation includes a list of links that merchants use to move between sections of the application.\"]\n      })\n    }), \"\\n\", _jsx(Examples, {}), \"\\n\", _jsx(Props, {\n      componentName: frontmatter.title\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"required-components\",\n      children: \"Required components\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The navigation component must be passed to the \", _jsx(_components.a, {\n        href: \"https://polaris.shopify.com/components/frame\",\n        children: \"frame\"\n      }), \" component. The mobile version of the navigation component appears in the \", _jsx(_components.a, {\n        href: \"https://polaris.shopify.com/components/top-bar\",\n        children: \"top bar\"\n      }), \" component.\"]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h2, {\n      id: \"best-practices\",\n      children: \"Best practices\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The navigation component should:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Contain primary navigation items that perform an action when clicked. Each action should navigate to a URL or trigger another action like a modal overlay.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Only use secondary actions for supplementary actions to the primary actions.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Provide a non-primary link or action as a secondary action to a section or an item.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Group navigation items into sections based on related categories.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Use a section title to clarify the category of a section.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Use a major icon for item actions.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Use a minor icon for secondary actions.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Use the provided navigation section component to group navigation items.\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Not add additional components, like \", _jsx(_components.a, {\n          href: \"/components/feedback-indicators/badge\",\n          children: \"badge\"\n        }), \", in navigation items. Example: Don‘t add the \", _jsx(_components.a, {\n          href: \"/patterns-legacy/new-badge\",\n          children: \"New badge\"\n        }), \".\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h2, {\n      id: \"content-guidelines\",\n      children: \"Content guidelines\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Navigation should:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Use sentence case for primary and secondary navigation items\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(DoDont, {\n      children: [_jsx(_components.h4, {\n        id: \"do\",\n        children: \"Do\"\n      }), _jsxs(_components.ul, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: \"Online store\"\n        }), \"\\n\"]\n      }), _jsx(_components.h4, {\n        id: \"dont\",\n        children: \"Don’t\"\n      }), _jsxs(_components.ul, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: \"Online Store\"\n        }), \"\\n\"]\n      })]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Use as few words as possible to describe each item label\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(DoDont, {\n      children: [_jsx(_components.h4, {\n        id: \"do-1\",\n        children: \"Do\"\n      }), _jsxs(_components.ul, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: \"Products\"\n        }), \"\\n\"]\n      }), _jsx(_components.h4, {\n        id: \"dont-1\",\n        children: \"Don’t\"\n      }), _jsxs(_components.ul, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: \"Products in your store\"\n        }), \"\\n\"]\n      })]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Use all caps for section labels\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(DoDont, {\n      children: [_jsx(_components.h4, {\n        id: \"do-2\",\n        children: \"Do\"\n      }), _jsxs(_components.ul, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: \"SALES CHANNELS\"\n        }), \"\\n\"]\n      }), _jsx(_components.h4, {\n        id: \"dont-2\",\n        children: \"Don’t\"\n      }), _jsxs(_components.ul, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: \"Sales channels\"\n        }), \"\\n\"]\n      })]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h2, {\n      id: \"navigation-section\",\n      children: \"Navigation section\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"A navigation section groups together related navigation items. Navigation sections can be clarified by a heading. Merchants can use a section to easily find navigation items within a specific category.\"\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"section-properties\",\n      children: \"Section properties\"\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Prop\"\n          }), _jsx(_components.th, {\n            children: \"Type\"\n          }), _jsx(_components.th, {\n            children: \"Description\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"items\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.a, {\n              href: \"#type-item\",\n              children: \"Item[]\"\n            })\n          }), _jsx(_components.td, {\n            children: \"A collection of navigation items to be rendered inside the section\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"icon\"\n          }), _jsx(_components.td, {\n            children: \"IconProps['source']\"\n          }), _jsx(_components.td, {\n            children: \"An icon to be displayed next to the section title\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"title\"\n          }), _jsx(_components.td, {\n            children: \"string\"\n          }), _jsx(_components.td, {\n            children: \"A string property providing a title for the navigation section\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"fill\"\n          }), _jsx(_components.td, {\n            children: \"boolean\"\n          }), _jsx(_components.td, {\n            children: \"A boolean property indicating whether the section should take up all vertical space available\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"rollup\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.a, {\n              href: \"#type-rollup\",\n              children: \"Rollup\"\n            })\n          }), _jsx(_components.td, {\n            children: \"An object determining the collapsing behavior of the navigation section\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"action\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.a, {\n              href: \"#type-action\",\n              children: \"Action\"\n            })\n          }), _jsx(_components.td, {\n            children: \"Renders an icon-only action as a supplementary action next to the section title\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"separator\"\n          }), _jsx(_components.td, {\n            children: \"boolean\"\n          }), _jsx(_components.td, {\n            children: \"A boolean property indicating whether the section should have a visual separator\"\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"navigation-section-item\",\n      children: \"Navigation section item\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The content of the navigation component consists of navigation items. Each item is a link or action a merchant can take.\"\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"item-properties\",\n      children: \"Item properties\"\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Prop\"\n          }), _jsx(_components.th, {\n            children: \"Type\"\n          }), _jsx(_components.th, {\n            children: \"Description\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"url\"\n          }), _jsx(_components.td, {\n            children: \"string\"\n          }), _jsx(_components.td, {\n            children: \"A location for the navigation item to navigate to when clicked\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"matches\"\n          }), _jsx(_components.td, {\n            children: \"boolean\"\n          }), _jsx(_components.td, {\n            children: \"A boolean property indicating whether the navigation item should respond to a closely matching location property\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"exactMatch\"\n          }), _jsx(_components.td, {\n            children: \"boolean\"\n          }), _jsx(_components.td, {\n            children: \"A boolean property indicating whether the navigation item should respond to an exactly matching location property\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"matchPaths\"\n          }), _jsx(_components.td, {\n            children: \"string[]\"\n          }), _jsx(_components.td, {\n            children: \"A string property providing a collection of additional paths for the navigation item to respond to\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"excludePaths\"\n          }), _jsx(_components.td, {\n            children: \"string[]\"\n          }), _jsx(_components.td, {\n            children: \"A string property providing an explicit collection of paths the navigation item should not respond to\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"icon\"\n          }), _jsx(_components.td, {\n            children: \"IconProps['source']\"\n          }), _jsxs(_components.td, {\n            children: [\"An icon to be displayed next to the navigation. Please prefer minor icons here. If a major icon has to be used, set the \", _jsx(_components.code, {\n              children: \"shouldResizeIcon\"\n            }), \" prop to true\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"badge\"\n          }), _jsx(_components.td, {\n            children: \"string | null\"\n          }), _jsx(_components.td, {\n            children: \"A string property allowing content to be displayed in a badge next to the navigation item\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"label\"\n          }), _jsx(_components.td, {\n            children: \"string\"\n          }), _jsx(_components.td, {\n            children: \"A string property allowing content to be displayed as link text in the navigation item\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"disabled\"\n          }), _jsx(_components.td, {\n            children: \"boolean\"\n          }), _jsx(_components.td, {\n            children: \"A boolean property indicating whether the navigation item is disabled\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"new\"\n          }), _jsx(_components.td, {\n            children: \"boolean\"\n          }), _jsx(_components.td, {\n            children: \"Indicate whether the navigation item is new by adding an indicator dot to the parent and badge to the item (overwritten by the badge prop)\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"accessibilityLabel\"\n          }), _jsx(_components.td, {\n            children: \"string\"\n          }), _jsx(_components.td, {\n            children: \"A visually hidden label for screen readers to understand the content of a navigation item\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"selected\"\n          }), _jsx(_components.td, {\n            children: \"boolean\"\n          }), _jsx(_components.td, {\n            children: \"A boolean property indicating whether the navigation item is the currently-selected item\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"shouldResizeIcon\"\n          }), _jsx(_components.td, {\n            children: \"boolean\"\n          }), _jsx(_components.td, {\n            children: \"Will allow for major icons to be displayed at the same size as minor icons\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"subNavigationItems\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.a, {\n              href: \"#sub-navigation-item\",\n              children: \"SubNavigationItem[]\"\n            })\n          }), _jsx(_components.td, {\n            children: \"A collection of navigation items rendered as nested secondary navigation items\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"secondaryAction\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.a, {\n              href: \"#secondary-action\",\n              children: \"SecondaryAction\"\n            })\n          }), _jsx(_components.td, {\n            children: \"Renders an icon-only action as a supplementary action next to a navigation item\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"secondaryActions\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.a, {\n              href: \"#secondary-action\",\n              children: \"SecondaryAction[]\"\n            })\n          }), _jsx(_components.td, {\n            children: \"Renders one or two icon-only actions as supplementary actions next to a navigation item\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"onClick()\"\n          }), _jsx(_components.td, {\n            children: \"function\"\n          }), _jsx(_components.td, {\n            children: \"A callback function to handle clicking on a navigation item\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"truncateText\"\n          }), _jsx(_components.td, {\n            children: \"boolean\"\n          }), _jsx(_components.td, {\n            children: \"A boolean property to allow text that exceeds the width of the navigation item to be truncated with ellipsis\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"displayActionsOnHover\"\n          }), _jsx(_components.td, {\n            children: \"boolean\"\n          }), _jsx(_components.td, {\n            children: \"A boolean to only display secondary actions when being the nabigation item is hovered (Only on desktop)\"\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"subnavigationitem\",\n      children: \"SubNavigationItem\"\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"properties\",\n      children: \"Properties\"\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Prop\"\n          }), _jsx(_components.th, {\n            children: \"Type\"\n          }), _jsx(_components.th, {\n            children: \"Description\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"url\"\n          }), _jsx(_components.td, {\n            children: \"string\"\n          }), _jsx(_components.td, {\n            children: \"A location for the navigation item to navigate to when clicked\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"matches\"\n          }), _jsx(_components.td, {\n            children: \"boolean\"\n          }), _jsx(_components.td, {\n            children: \"A boolean property indicating whether the navigation item should respond to a closely matching location property\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"exactMatch\"\n          }), _jsx(_components.td, {\n            children: \"boolean\"\n          }), _jsx(_components.td, {\n            children: \"A boolean property indicating whether the navigation item should respond to an exactly matching location property\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"matchPaths\"\n          }), _jsx(_components.td, {\n            children: \"string[]\"\n          }), _jsx(_components.td, {\n            children: \"A string property providing a collection of additional paths for the navigation item to respond to\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"excludePaths\"\n          }), _jsx(_components.td, {\n            children: \"string[]\"\n          }), _jsx(_components.td, {\n            children: \"A string property providing an explicit collection of paths the navigation item should not respond to\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"external\"\n          }), _jsx(_components.td, {\n            children: \"boolean\"\n          }), _jsx(_components.td, {\n            children: \"Indicates whether this is an external link. If it is, an external link icon will be shown next to the label\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"label\"\n          }), _jsx(_components.td, {\n            children: \"string\"\n          }), _jsx(_components.td, {\n            children: \"A string property allowing content to be displayed as link text in the navigation item\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"disabled\"\n          }), _jsx(_components.td, {\n            children: \"boolean\"\n          }), _jsx(_components.td, {\n            children: \"A boolean property indicating whether the navigation item is disabled\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"new\"\n          }), _jsx(_components.td, {\n            children: \"boolean\"\n          }), _jsx(_components.td, {\n            children: \"Indicate whether the navigation item is new by adding an indicator dot to the parent and badge to the item (overwritten by the badge prop)\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"onClick()\"\n          }), _jsx(_components.td, {\n            children: \"function\"\n          }), _jsx(_components.td, {\n            children: \"A callback function to handle clicking on a navigation item\"\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"secondaryaction\",\n      children: \"SecondaryAction\"\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"properties-1\",\n      children: \"Properties\"\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Prop\"\n          }), _jsx(_components.th, {\n            children: \"Type\"\n          }), _jsx(_components.th, {\n            children: \"Description\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"url\"\n          }), _jsx(_components.td, {\n            children: \"string\"\n          }), _jsx(_components.td, {\n            children: \"A location for the navigation item to navigate to when clicked\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"accessibilityLabel\"\n          }), _jsx(_components.td, {\n            children: \"string\"\n          }), _jsx(_components.td, {\n            children: \"A visually hidden label for screen readers to understand the content of a navigation item\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"icon\"\n          }), _jsx(_components.td, {\n            children: \"IconProps['source']\"\n          }), _jsxs(_components.td, {\n            children: [\"An icon to be displayed next to the navigation. Please prefer minor icons here. If a major icon has to be used, set the \", _jsx(_components.code, {\n              children: \"shouldResizeIcon\"\n            }), \" prop to true\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"onClick()\"\n          }), _jsx(_components.td, {\n            children: \"function\"\n          }), _jsx(_components.td, {\n            children: \"A callback function to handle clicking on a navigation item\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"tooltip\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.a, {\n              href: \"https://polaris.shopify.com/components/tooltip#navigation\",\n              children: \"TooltipProps\"\n            })\n          }), _jsx(_components.td, {\n            children: \"Options for displaying a tooltip when you hover over the action button\"\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"navigation-section-rollup\",\n      children: \"Navigation section rollup\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Rollup allows items in a navigation section to roll up and be revealed when they are of use to the merchant.\"\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"rollup-properties\",\n      children: \"Rollup properties\"\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Prop\"\n          }), _jsx(_components.th, {\n            children: \"Type\"\n          }), _jsx(_components.th, {\n            children: \"Description\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"after\"\n          }), _jsx(_components.td, {\n            children: \"number\"\n          }), _jsx(_components.td, {\n            children: \"A number of items after which the navigation section should be collapsed\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"view\"\n          }), _jsx(_components.td, {\n            children: \"string\"\n          }), _jsx(_components.td, {\n            children: \"A string property providing content for the section view action\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"hide\"\n          }), _jsx(_components.td, {\n            children: \"string\"\n          }), _jsx(_components.td, {\n            children: \"A string property providing content for the section hide action\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"activePath\"\n          }), _jsx(_components.td, {\n            children: \"string\"\n          }), _jsx(_components.td, {\n            children: \"A string property representing the current URL of your application\"\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"navigation-section-action\",\n      children: \"Navigation section action\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Action allows a complementary icon-only action to render next to the section title.\"\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"action-properties\",\n      children: \"Action properties\"\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Prop\"\n          }), _jsx(_components.th, {\n            children: \"Type\"\n          }), _jsx(_components.th, {\n            children: \"Description\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"icon\"\n          }), _jsx(_components.td, {\n            children: \"IconProps['source']\"\n          }), _jsx(_components.td, {\n            children: \"An icon to be displayed as the content of the action\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"accessibilityLabel\"\n          }), _jsx(_components.td, {\n            children: \"string\"\n          }), _jsx(_components.td, {\n            children: \"A visually hidden label for screen readers to understand the content of the action\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"onClick()\"\n          }), _jsx(_components.td, {\n            children: \"function\"\n          }), _jsx(_components.td, {\n            children: \"A callback function to handle clicking on the action\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"tooltip\"\n          }), _jsx(_components.td, {\n            children: _jsx(_components.a, {\n              href: \"https://polaris.shopify.com/components/tooltip#navigation\",\n              children: \"TooltipProps\"\n            })\n          }), _jsx(_components.td, {\n            children: \"Options for displaying a tooltip when you hover over the action button\"\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h2, {\n      id: \"related-components\",\n      children: \"Related components\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"To provide the structure for the navigation component, including the left sidebar and the top bar use the \", _jsx(_components.a, {\n          href: \"https://polaris.shopify.com/components/frame\",\n          children: \"frame\"\n        }), \" component.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"To display the navigation component on small screens, to provide search and a user menu, or to theme the \", _jsx(_components.a, {\n          href: \"https://polaris.shopify.com/components/frame\",\n          children: \"frame\"\n        }), \" component to reflect an application’s brand, use the \", _jsx(_components.a, {\n          href: \"https://polaris.shopify.com/components/top-bar\",\n          children: \"top bar\"\n        }), \" component.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"To tell merchants their options once they have made changes to a form on the page use the \", _jsx(_components.a, {\n          href: \"https://polaris.shopify.com/components/contextual-save-bar\",\n          children: \"contextual save bar\"\n        }), \" component.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"To provide quick, at-a-glance feedback on the outcome of an action, use the \", _jsx(_components.a, {\n          href: \"https://polaris.shopify.com/components/feedback-indicators/toast\",\n          children: \"toast\"\n        }), \" component.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"To indicate to merchants that a page is loading or an upload is processing use the \", _jsx(_components.a, {\n          href: \"https://polaris.shopify.com/components/loading\",\n          children: \"loading\"\n        }), \" component.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"To alternate among related views within the same context, use the \", _jsx(_components.a, {\n          href: \"https://polaris.shopify.com/components/tabs\",\n          children: \"tabs\"\n        }), \" component.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"To embed a single action or link within a larger span of text, use the \", _jsx(_components.a, {\n          href: \"https://polaris.shopify.com/components/link\",\n          children: \"link\"\n        }), \" component.\"]\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"title":"Navigation","category":"Navigation","keywords":["navigation","nav","links","primary navigation","main navigation","frame","sidebar","side bar"],"examples":[{"fileName":"navigation-default.tsx","title":"Default","description":"Use to present a navigation menu in the [frame](https://polaris.shopify.com/components/frame)."},{"fileName":"navigation-with-multiple-secondary-navigations.tsx","title":"With multiple secondary navigations","description":"Use to present a secondary action, related to a section and to title the section."},{"fileName":"navigation-with-an-active-root-item-with-secondary-navigation-items.tsx","title":"With an active root item with secondary navigation items","description":"Use to present a secondary action, related to a section and to title the section."},{"fileName":"navigation-with-a-secondary-action-for-a-section-and-a-section-title.tsx","title":"With a secondary action for a section and a section title","description":"Use to present a secondary action, related to a section and to title the section."},{"fileName":"navigation-with-a-secondary-action-for-an-item.tsx","title":"With a secondary action for an item","description":"Use to add a different action for an item than the main action, like to view or add something."},{"fileName":"navigation-with-multiple-secondary-actions.tsx","title":"With multiple secondary actions","description":"Used to add one or two secondary actions to the navigation item."},{"fileName":"navigation-with-section-rollup.tsx","title":"With section rollup","description":"Use to show a limited number of items in a section with an option to expand the remaining items."},{"fileName":"navigation-with-section-separator.tsx","title":"With section separator","description":"Use to add a horizontal line below the section."},{"fileName":"navigation-with-various-states-and-secondary-elements.tsx","title":"With various states and secondary elements","description":"This example showcases the many elements that can compose a navigation, especially useful for testing purposes."},{"fileName":"navigation-with-truncation-for-various-states.tsx","title":"With truncation active for various states","description":"This example showcases how elements are displayed with the truncateText prop as true for various states."},{"fileName":"navigation-with-aria-labelledby.tsx","title":"With aria-labelledby","description":"This example shows how to add an aria-labelledby to add a hidden label to the `nav` element."},{"fileName":"navigation-using-major-icons.tsx","title":"Using Major icons","description":"This example shows how to use the shouldResizeIcon prop when using Major icons"}],"previewImg":"/images/components/navigation/navigation.png"},"scope":{"__remarkNextMdxImporter":{}}},"examples":[{"fileName":"navigation-default.tsx","title":"Default","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_components.p, {\n    children: [\"Use to present a navigation menu in the \", _jsx(_components.a, {\n      href: \"https://polaris.shopify.com/components/frame\",\n      children: \"frame\"\n    }), \".\"]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {Frame, Navigation} from '@shopify/polaris';\nimport {HomeMinor, OrdersMinor, ProductsMinor} from '@shopify/polaris-icons';\nimport React from 'react';\n\nfunction NavigationExample() {\n  return (\n    <Frame>\n      <Navigation location=\"/\">\n        <Navigation.Section\n          items={[\n            {\n              url: '#',\n              label: 'Home',\n              icon: HomeMinor,\n            },\n            {\n              url: '#',\n              excludePaths: ['#'],\n              label: 'Orders',\n              icon: OrdersMinor,\n              badge: '15',\n            },\n            {\n              url: '#',\n              excludePaths: ['#'],\n              label: 'Products',\n              icon: ProductsMinor,\n            },\n          ]}\n        />\n      </Navigation>\n    </Frame>\n  );\n}\n\n"},{"fileName":"navigation-with-multiple-secondary-navigations.tsx","title":"With multiple secondary navigations","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Use to present a secondary action, related to a section and to title the section.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {Frame, Navigation} from '@shopify/polaris';\nimport {\n  HomeMinor,\n  OrdersMinor,\n  MarketingMinor,\n  ProductsMinor,\n} from '@shopify/polaris-icons';\nimport React from 'react';\n\nfunction NavigationExample() {\n  return (\n    <Frame>\n      <Navigation location=\"/\">\n        <Navigation.Section\n          items={[\n            {\n              url: '#',\n              excludePaths: ['#'],\n              label: 'Home',\n              icon: HomeMinor,\n            },\n            {\n              url: '#',\n              excludePaths: ['#'],\n              label: 'Orders',\n              icon: OrdersMinor,\n              badge: '15',\n              subNavigationItems: [\n                {\n                  url: '#',\n                  excludePaths: ['#'],\n                  disabled: false,\n                  label: 'Collections',\n                },\n                {\n                  url: '#',\n                  excludePaths: ['#'],\n                  disabled: false,\n                  label: 'Inventory',\n                },\n              ],\n            },\n            {\n              url: '#',\n              excludePaths: ['#'],\n              label: 'Marketing',\n              icon: MarketingMinor,\n              badge: '15',\n              subNavigationItems: [\n                {\n                  url: '#',\n                  excludePaths: ['#'],\n                  disabled: false,\n                  label: 'Reports',\n                },\n                {\n                  url: '#',\n                  excludePaths: ['#'],\n                  disabled: false,\n                  label: 'Live view',\n                },\n              ],\n            },\n            {\n              url: '#',\n              label: 'Products',\n              icon: ProductsMinor,\n              selected: true,\n              subNavigationItems: [\n                {\n                  url: '#',\n                  excludePaths: ['#'],\n                  disabled: false,\n                  label: 'Collections',\n                },\n                {\n                  url: '#',\n                  disabled: false,\n                  label: 'Inventory',\n                },\n              ],\n            },\n          ]}\n        />\n      </Navigation>\n    </Frame>\n  );\n}\n\n"},{"fileName":"navigation-with-an-active-root-item-with-secondary-navigation-items.tsx","title":"With an active root item with secondary navigation items","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Use to present a secondary action, related to a section and to title the section.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {Frame, Navigation} from '@shopify/polaris';\nimport {HomeMinor, OrdersMinor, ProductsMinor} from '@shopify/polaris-icons';\nimport React from 'react';\n\nfunction NavigationExample() {\n  return (\n    <Frame>\n      <Navigation location=\"/\">\n        <Navigation.Section\n          items={[\n            {\n              url: '#',\n              excludePaths: ['#'],\n              label: 'Home',\n              icon: HomeMinor,\n            },\n            {\n              url: '#',\n              excludePaths: ['#'],\n              label: 'Orders',\n              icon: OrdersMinor,\n              badge: '15',\n            },\n            {\n              url: '#',\n              label: 'Products',\n              icon: ProductsMinor,\n              selected: true,\n              subNavigationItems: [\n                {\n                  url: '#',\n                  excludePaths: ['#'],\n                  disabled: false,\n                  label: 'Collections',\n                },\n                {\n                  url: '#',\n                  excludePaths: ['#'],\n                  disabled: false,\n                  label: 'Inventory',\n                },\n              ],\n            },\n          ]}\n        />\n      </Navigation>\n    </Frame>\n  );\n}\n\n"},{"fileName":"navigation-with-a-secondary-action-for-a-section-and-a-section-title.tsx","title":"With a secondary action for a section and a section title","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Use to present a secondary action, related to a section and to title the section.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {Frame, Navigation} from '@shopify/polaris';\nimport {\n  HomeMinor,\n  OrdersMinor,\n  ProductsMinor,\n  OnlineStoreMinor,\n  CirclePlusOutlineMinor,\n} from '@shopify/polaris-icons';\nimport React from 'react';\n\nfunction NavigationExample() {\n  return (\n    <Frame>\n      <Navigation location=\"/\">\n        <Navigation.Section\n          items={[\n            {\n              url: '#',\n              excludePaths: ['#'],\n              label: 'Home',\n              icon: HomeMinor,\n            },\n            {\n              url: '#',\n              excludePaths: ['#'],\n              label: 'Orders',\n              icon: OrdersMinor,\n            },\n            {\n              url: '#',\n              excludePaths: ['#'],\n              label: 'Products',\n              icon: ProductsMinor,\n            },\n          ]}\n        />\n        <Navigation.Section\n          title=\"Sales channels\"\n          items={[\n            {\n              url: '#',\n              excludePaths: ['#'],\n              label: 'Online Store',\n              icon: OnlineStoreMinor,\n            },\n          ]}\n          action={{\n            accessibilityLabel: 'Add sales channel',\n            icon: CirclePlusOutlineMinor,\n            onClick: () => {},\n          }}\n        />\n      </Navigation>\n    </Frame>\n  );\n}\n\n"},{"fileName":"navigation-with-a-secondary-action-for-an-item.tsx","title":"With a secondary action for an item","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Use to add a different action for an item than the main action, like to view or add something.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {Frame, Navigation} from '@shopify/polaris';\nimport {\n  HomeMinor,\n  OrdersMinor,\n  CirclePlusOutlineMinor,\n  ProductsMinor,\n} from '@shopify/polaris-icons';\nimport React from 'react';\n\nfunction NavigationExample() {\n  return (\n    <Frame>\n      <Navigation location=\"/\">\n        <Navigation.Section\n          items={[\n            {\n              url: '#',\n              excludePaths: ['#'],\n              label: 'Home',\n              icon: HomeMinor,\n            },\n            {\n              url: '#',\n              excludePaths: ['#'],\n              label: 'Orders',\n              icon: OrdersMinor,\n              secondaryAction: {\n                url: '#',\n                accessibilityLabel: 'Add an order',\n                icon: CirclePlusOutlineMinor,\n                tooltip: {\n                  content: 'Add an order',\n                },\n              },\n            },\n            {\n              url: '#',\n              excludePaths: ['#'],\n              label: 'Products',\n              icon: ProductsMinor,\n            },\n          ]}\n        />\n      </Navigation>\n    </Frame>\n  );\n}\n\n"},{"fileName":"navigation-with-multiple-secondary-actions.tsx","title":"With multiple secondary actions","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Used to add one or two secondary actions to the navigation item.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {Frame, Navigation} from '@shopify/polaris';\nimport {\n  HomeMinor,\n  CirclePlusOutlineMinor,\n  ProductsMinor,\n  CircleMinusOutlineMinor,\n  OrdersMinor,\n} from '@shopify/polaris-icons';\nimport React from 'react';\n\nfunction NavigationExample() {\n  return (\n    <Frame>\n      <Navigation location=\"/\">\n        <Navigation.Section\n          items={[\n            {\n              url: '#',\n              excludePaths: ['#'],\n              label: 'Home',\n              icon: HomeMinor,\n              selected: false,\n            },\n            {\n              url: '#',\n              excludePaths: ['#'],\n              label: 'Orders',\n              icon: OrdersMinor,\n              badge: '2',\n              secondaryActions: [\n                {\n                  url: '#',\n                  accessibilityLabel: 'Add a product',\n                  icon: CirclePlusOutlineMinor,\n                  tooltip: {\n                    content: 'Create new order',\n                  },\n                },\n              ],\n            },\n            {\n              url: '#',\n              excludePaths: ['#'],\n              label: 'Products',\n              icon: ProductsMinor,\n              secondaryActions: [\n                {\n                  url: '#',\n                  accessibilityLabel: 'Add a product',\n                  icon: CirclePlusOutlineMinor,\n                  tooltip: {\n                    content: 'Add a product',\n                  },\n                },\n                {\n                  accessibilityLabel: 'Remove a product',\n                  icon: CircleMinusOutlineMinor,\n                  onClick: () => {},\n                  tooltip: {\n                    content: 'Remove a product',\n                  },\n                },\n              ],\n            },\n          ]}\n        />\n      </Navigation>\n    </Frame>\n  );\n}\n\n"},{"fileName":"navigation-with-section-rollup.tsx","title":"With section rollup","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Use to show a limited number of items in a section with an option to expand the remaining items.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {Frame, Navigation} from '@shopify/polaris';\nimport {HomeMinor, OrdersMinor, ProductsMinor} from '@shopify/polaris-icons';\nimport React from 'react';\n\nfunction NavigationExample() {\n  return (\n    <Frame>\n      <Navigation location=\"/\">\n        <Navigation.Section\n          items={[\n            {\n              url: '#',\n              excludePaths: ['#'],\n              label: 'Home',\n              icon: HomeMinor,\n            },\n            {\n              url: '#',\n              excludePaths: ['#'],\n              label: 'Orders',\n              icon: OrdersMinor,\n            },\n            {\n              url: '#',\n              excludePaths: ['#'],\n              label: 'Products',\n              icon: ProductsMinor,\n            },\n          ]}\n          rollup={{\n            after: 2,\n            view: 'view',\n            hide: 'hide',\n            activePath: '#',\n          }}\n        />\n      </Navigation>\n    </Frame>\n  );\n}\n\n"},{"fileName":"navigation-with-section-separator.tsx","title":"With section separator","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Use to add a horizontal line below the section.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {Frame, Navigation} from '@shopify/polaris';\nimport {\n  HomeMinor,\n  OrdersMinor,\n  ProductsMinor,\n  OnlineStoreMinor,\n} from '@shopify/polaris-icons';\nimport React from 'react';\n\nfunction NavigationExample() {\n  return (\n    <Frame>\n      <Navigation location=\"/\">\n        <Navigation.Section\n          items={[\n            {\n              url: '#',\n              excludePaths: ['#'],\n              label: 'Home',\n              icon: HomeMinor,\n            },\n            {\n              url: '#',\n              excludePaths: ['#'],\n              label: 'Orders',\n              icon: OrdersMinor,\n            },\n            {\n              url: '#',\n              excludePaths: ['#'],\n              label: 'Products',\n              icon: ProductsMinor,\n            },\n          ]}\n        />\n        <Navigation.Section\n          items={[\n            {\n              url: '#',\n              excludePaths: ['#'],\n              label: 'Online Store',\n              icon: OnlineStoreMinor,\n            },\n          ]}\n          separator\n        />\n      </Navigation>\n    </Frame>\n  );\n}\n\n"},{"fileName":"navigation-with-various-states-and-secondary-elements.tsx","title":"With various states and secondary elements","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"This example showcases the many elements that can compose a navigation, especially useful for testing purposes.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {Frame, Navigation} from '@shopify/polaris';\nimport {\n  HomeMinor,\n  OrdersMinor,\n  CirclePlusOutlineMinor,\n  ProductsMinor,\n  CustomersMinor,\n  MarketingMinor,\n  OnlineStoreMinor,\n  ViewMinor,\n} from '@shopify/polaris-icons';\nimport React from 'react';\n\nfunction NavigationExample() {\n  const location = typeof window !== 'undefined' ? window.location.href : '';\n  return (\n    <Frame>\n      <Navigation location=\"/\">\n        <Navigation.Section\n          items={[\n            {\n              url: '#',\n              excludePaths: ['#'],\n              label: 'Inactive item',\n              icon: HomeMinor,\n            },\n            {\n              url: '#',\n              excludePaths: ['#'],\n              label: 'Item with indicator',\n              icon: HomeMinor,\n              subNavigationItems: [\n                {\n                  url: '#',\n                  excludePaths: ['#'],\n                  disabled: false,\n                  new: true,\n                  label: 'New item',\n                },\n              ],\n            },\n            {\n              url: '#',\n              excludePaths: ['#'],\n              label: 'New item',\n              new: true,\n              icon: HomeMinor,\n            },\n            {\n              url: '#',\n              excludePaths: ['#'],\n              label: 'Badged item',\n              badge: 'Old',\n              icon: HomeMinor,\n            },\n            {\n              url: '#',\n              label: 'Active with secondary action',\n              icon: OrdersMinor,\n              selected: true,\n              secondaryAction: {\n                url: '#',\n                accessibilityLabel: 'Add an order',\n                icon: CirclePlusOutlineMinor,\n                tooltip: {\n                  content: 'Add an order',\n                },\n              },\n            },\n            {\n              url: location,\n              label: 'Active item with sub navigation',\n              icon: ProductsMinor,\n              selected: true,\n              subNavigationItems: [\n                {\n                  url: location,\n                  disabled: false,\n                  label: 'Selected sub item',\n                },\n                {\n                  url: '#',\n                  excludePaths: ['#'],\n                  disabled: false,\n                  label: 'Default sub item',\n                },\n                {\n                  url: '#',\n                  excludePaths: ['#'],\n                  disabled: true,\n                  label: 'Disabled sub item',\n                },\n              ],\n            },\n            {\n              url: '#',\n              excludePaths: ['#'],\n              label: 'Disabled item',\n              icon: CustomersMinor,\n              disabled: true,\n            },\n            {\n              url: '#',\n              label: 'Overflow item',\n              icon: MarketingMinor,\n            },\n          ]}\n          rollup={{\n            after: 7,\n            view: 'view',\n            hide: 'hide',\n            activePath: '/',\n          }}\n        />\n        <Navigation.Section\n          title=\"These icons should have the same color\"\n          items={[\n            {\n              url: '#',\n              excludePaths: ['#'],\n              label: 'Icon as svg',\n              icon: OnlineStoreMinor,\n            },\n            {\n              url: '#',\n              excludePaths: ['#'],\n              label: 'Icon as img',\n              icon: '<svg viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M1.791 2.253l-.597 3.583A1 1 0 0 0 2.18 7h.893a1.5 1.5 0 0 0 1.342-.83L5 5l.585 1.17A1.5 1.5 0 0 0 6.927 7h1.146a1.5 1.5 0 0 0 1.342-.83L10 5l.585 1.17a1.5 1.5 0 0 0 1.342.83h1.146a1.5 1.5 0 0 0 1.342-.83L15 5l.585 1.17a1.5 1.5 0 0 0 1.342.83h.893a1 1 0 0 0 .986-1.164l-.597-3.583A1.5 1.5 0 0 0 16.729 1H3.271a1.5 1.5 0 0 0-1.48 1.253zM4 18.5A1.5 1.5 0 0 1 5.5 17H8v-3h4v3h2.5a1.5 1.5 0 0 1 1.5 1.5v.5H4v-.5z\"></path><path d=\"M2 9h2v4h12V9h2v4.5a1.5 1.5 0 0 1-1.5 1.5h-13A1.5 1.5 0 0 1 2 13.5V9z\"></path></svg>',\n            },\n            {\n              url: '#',\n              label: 'Icon as img – Active',\n              icon: '<svg viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M1.791 2.253l-.597 3.583A1 1 0 0 0 2.18 7h.893a1.5 1.5 0 0 0 1.342-.83L5 5l.585 1.17A1.5 1.5 0 0 0 6.927 7h1.146a1.5 1.5 0 0 0 1.342-.83L10 5l.585 1.17a1.5 1.5 0 0 0 1.342.83h1.146a1.5 1.5 0 0 0 1.342-.83L15 5l.585 1.17a1.5 1.5 0 0 0 1.342.83h.893a1 1 0 0 0 .986-1.164l-.597-3.583A1.5 1.5 0 0 0 16.729 1H3.271a1.5 1.5 0 0 0-1.48 1.253zM4 18.5A1.5 1.5 0 0 1 5.5 17H8v-3h4v3h2.5a1.5 1.5 0 0 1 1.5 1.5v.5H4v-.5z\"></path><path d=\"M2 9h2v4h12V9h2v4.5a1.5 1.5 0 0 1-1.5 1.5h-13A1.5 1.5 0 0 1 2 13.5V9z\"></path></svg>',\n            },\n            {\n              url: '#',\n              excludePaths: ['#'],\n              label: 'Other secondary action',\n              icon: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\"><path d=\"M2.771 14.055A8 8 0 1 1 16 8c0 2.385-1.086 4.629-2.704 5.983A7.956 7.956 0 0 1 7.991 16c-.613 0-2.022-.003-5-.01h-.928l.708-1.935zm5.973-6.757c-.554-.302-.837-.565-.837-.92 0-.446.4-.735 1.017-.735a3.62 3.62 0 0 1 1.365.302l.502-1.577S10.328 4 8.963 4C7.057 4 5.73 5.117 5.73 6.68c0 .894.618 1.565 1.442 2.05.67.382.901.658.901 1.065 0 .42-.334.762-.952.762-.915 0-1.79-.486-1.79-.486l-.54 1.577s.797.552 2.15.552c1.956 0 3.373-.986 3.373-2.76-.013-.959-.721-1.642-1.571-2.142z\"/></svg>',\n              secondaryAction: {\n                url: '#',\n                accessibilityLabel: 'View your online store',\n                icon: ViewMinor,\n                tooltip: {\n                  content: 'View your online store',\n                },\n              },\n            },\n          ]}\n          action={{\n            accessibilityLabel: 'Add sales channel',\n            icon: CirclePlusOutlineMinor,\n            onClick: () => {},\n          }}\n          separator\n        />\n      </Navigation>\n    </Frame>\n  );\n}\n\n"},{"fileName":"navigation-with-truncation-for-various-states.tsx","title":"With truncation active for various states","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"This example showcases how elements are displayed with the truncateText prop as true for various states.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {Frame, Navigation} from '@shopify/polaris';\nimport {\n  OrdersMinor,\n  CirclePlusOutlineMinor,\n  ProductsMinor,\n  MarketingMinor,\n} from '@shopify/polaris-icons';\nimport React from 'react';\n\nfunction NavigationExample() {\n  return (\n    <Frame>\n      <Navigation location=\"/\">\n        <Navigation.Section\n          items={[\n            {\n              url: '#',\n              excludePaths: ['#'],\n              label: 'One Stop Ramen Order Application Premium',\n              truncateText: true,\n              icon: MarketingMinor,\n              selected: false,\n            },\n            {\n              url: '#',\n              excludePaths: ['#'],\n              label: 'Products',\n              icon: ProductsMinor,\n            },\n            {\n              url: '#',\n              label: 'Lengthy non-truncated label with secondary action',\n              icon: OrdersMinor,\n              selected: false,\n              secondaryAction: {\n                url: '#',\n                accessibilityLabel: 'Add an order',\n                icon: CirclePlusOutlineMinor,\n                tooltip: {\n                  content: 'Add a garlic ramen to your order',\n                },\n              },\n            },\n            {\n              url: '#',\n              label: 'Truncated secondary navigation item on truncated label',\n              icon: ProductsMinor,\n              selected: true,\n              truncateText: true,\n              subNavigationItems: [\n                {\n                  url: '#',\n                  excludePaths: ['#'],\n                  disabled: false,\n                  label:\n                    'Something longer than inventory so it can be truncated',\n                },\n                {\n                  url: '#',\n                  excludePaths: ['#'],\n                  disabled: false,\n                  label: 'Inventoy',\n                },\n              ],\n            },\n          ]}\n        />\n      </Navigation>\n    </Frame>\n  );\n}\n\n"},{"fileName":"navigation-with-aria-labelledby.tsx","title":"With aria-labelledby","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_components.p, {\n    children: [\"This example shows how to add an aria-labelledby to add a hidden label to the \", _jsx(_components.code, {\n      children: \"nav\"\n    }), \" element.\"]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {Frame, Navigation, Text} from '@shopify/polaris';\nimport {HomeMinor, OrdersMinor, ProductsMinor} from '@shopify/polaris-icons';\nimport React from 'react';\n\nfunction NavigationExample() {\n  return (\n    <Frame>\n      <Navigation location=\"/\" ariaLabelledBy=\"label-id\">\n        <Text as=\"span\" visuallyHidden>\n          <p id=\"label-id\">Hidden label</p>\n        </Text>\n        <Navigation.Section\n          items={[\n            {\n              url: '#',\n              excludePaths: ['#'],\n              label: 'Home',\n              icon: HomeMinor,\n            },\n            {\n              url: '#',\n              excludePaths: ['#'],\n              label: 'Orders',\n              icon: OrdersMinor,\n              badge: '15',\n            },\n            {\n              url: '#',\n              excludePaths: ['#'],\n              label: 'Products',\n              icon: ProductsMinor,\n            },\n          ]}\n        />\n      </Navigation>\n    </Frame>\n  );\n}\n\n"},{"fileName":"navigation-using-major-icons.tsx","title":"Using Major icons","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"This example shows how to use the shouldResizeIcon prop when using Major icons\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {Frame, Navigation} from '@shopify/polaris';\nimport {\n  HomeMajor,\n  OrdersMajor,\n  ProductsMajor,\n  CustomersMajor,\n} from '@shopify/polaris-icons';\nimport React from 'react';\n\nfunction NavigationExample() {\n  return (\n    <Frame>\n      <Navigation location=\"/\">\n        <Navigation.Section\n          items={[\n            {\n              url: '#',\n              excludePaths: ['#'],\n              label: 'Home',\n              icon: HomeMajor,\n            },\n            {\n              url: '#',\n              excludePaths: ['#'],\n              label: 'Orders',\n              icon: OrdersMajor,\n              badge: '15',\n            },\n            {\n              url: '#',\n              excludePaths: ['#'],\n              label: 'Products',\n              icon: ProductsMajor,\n            },\n            {\n              url: '#',\n              excludePaths: ['#'],\n              label: 'Customers',\n              icon: CustomersMajor,\n            },\n          ]}\n        />\n      </Navigation>\n    </Frame>\n  );\n}\n\n"}],"seoDescription":"The navigation component is used to display the primary navigation in the sidebar of the frame of an application. Navigation includes a list of links that merchants use to move between sections of the application.","type":{"NavigationProps":{"filePath":"polaris-react/src/components/Navigation/Navigation.tsx","name":"NavigationProps","description":"","members":[{"filePath":"polaris-react/src/components/Navigation/Navigation.tsx","syntaxKind":"PropertySignature","name":"location","value":"string","description":""},{"filePath":"polaris-react/src/components/Navigation/Navigation.tsx","syntaxKind":"PropertySignature","name":"children","value":"React.ReactNode","description":"","isOptional":true},{"filePath":"polaris-react/src/components/Navigation/Navigation.tsx","syntaxKind":"PropertySignature","name":"contextControl","value":"React.ReactNode","description":"","isOptional":true},{"filePath":"polaris-react/src/components/Navigation/Navigation.tsx","syntaxKind":"MethodSignature","name":"onDismiss","value":"() => void","description":"","isOptional":true},{"filePath":"polaris-react/src/components/Navigation/Navigation.tsx","syntaxKind":"PropertySignature","name":"ariaLabelledBy","value":"string","description":"id of the element used as aria-labelledby","isOptional":true},{"filePath":"polaris-react/src/components/Navigation/Navigation.tsx","syntaxKind":"PropertySignature","name":"logoSuffix","value":"React.ReactNode","description":"Accepts a component that is used to supplement the logo markup","isOptional":true}],"value":"export interface NavigationProps {\n  location: string;\n  children?: React.ReactNode;\n  contextControl?: React.ReactNode;\n  onDismiss?(): void;\n  /** id of the element used as aria-labelledby */\n  ariaLabelledBy?: string;\n  /** Accepts a component that is used to supplement the logo markup */\n  logoSuffix?: React.ReactNode;\n}"}},"editPageLinkPath":"polaris.shopify.com/content/components/navigation/navigation.mdx"},"__N_SSG":true}