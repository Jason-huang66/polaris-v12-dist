{"pageProps":{"mdx":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    h2: \"h2\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\",\n    hr: \"hr\",\n    h3: \"h3\",\n    h4: \"h4\",\n    code: \"code\"\n  }, _provideComponents(), props.components), {Lede, Examples, Props, DoDont} = _components;\n  if (!DoDont) _missingMdxReference(\"DoDont\", true);\n  if (!Examples) _missingMdxReference(\"Examples\", true);\n  if (!Lede) _missingMdxReference(\"Lede\", true);\n  if (!Props) _missingMdxReference(\"Props\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      id: \"frontmattertitle\",\n      children: frontmatter.title\n    }), \"\\n\", _jsx(Lede, {\n      children: _jsx(_components.p, {\n        children: \"Empty states are used when a list, table, or chart has no items or data to show. This is an opportunity to provide explanation or guidance to help merchants progress. The empty state component is intended for use when a full page in the admin is empty, and not for individual elements or areas in the interface.\"\n      })\n    }), \"\\n\", _jsx(Examples, {}), \"\\n\", _jsx(Props, {\n      componentName: frontmatter.title\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"best-practices\",\n      children: \"Best practices\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Empty states should:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Orient merchants by clearly explaining the benefit and utility of a product or feature\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Simplify a complicated experience by focusing on a few key features and benefits\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Use simple and clear language that empowers merchants to move their business forward\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Be encouraging and never make merchants feel unsuccessful or guilty because they haven’t used a product or feature\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Explain the steps merchants need to take to activate a product or feature\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Use illustrations thoughtfully as outlined in our \", _jsx(_components.a, {\n          href: \"https://polaris.shopify.com/design/illustrations\",\n          children: \"illustration guidelines\"\n        })]\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Use only one primary call-to-action button\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Provide extra spacing at the bottom of an empty state that is within content (card, modal, or navigation) to match the image that was passed into the component with a white space above it of 40px\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h2, {\n      id: \"content-guidelines\",\n      children: \"Content guidelines\"\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"title\",\n      children: \"Title\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Empty state titles should:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Be action-oriented: encourage merchants to take the step required to activate the product or feature\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(DoDont, {\n      children: [_jsx(_components.h4, {\n        id: \"do\",\n        children: \"Do\"\n      }), _jsxs(_components.ul, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: \"Create orders and send invoices\"\n        }), \"\\n\"]\n      }), _jsx(_components.h4, {\n        id: \"dont\",\n        children: \"Don’t\"\n      }), _jsxs(_components.ul, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: \"Orders and invoices\"\n        }), \"\\n\"]\n      })]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"Follow the content guidelines for \", _jsx(_components.a, {\n          href: \"https://polaris.shopify.com/content/actionable-language#headings-and-subheadings\",\n          children: \"headings and subheadings\"\n        })]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"subtitle\",\n      children: \"Subtitle\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Empty state subtitles act like body content. They should:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Describe or explain what’s in the empty state title or item title\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Be conversational: include articles such as the, a, and an\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"primary-action\",\n      children: \"Primary action\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Buttons are used for the most important actions you want merchants to take.\\nThey should be:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Clear and predictable: merchants should be able to anticipate what will happen when they click a button. Never deceive merchants by using misleading titles.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(DoDont, {\n      children: [_jsx(_components.h4, {\n        id: \"do-1\",\n        children: \"Do\"\n      }), _jsxs(_components.ul, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: \"Create order\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"Buy shipping label\"\n        }), \"\\n\"]\n      }), _jsx(_components.h4, {\n        id: \"dont-1\",\n        children: \"Don’t\"\n      }), _jsxs(_components.ul, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: \"New order\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"Buy\"\n        }), \"\\n\"]\n      })]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Action-led: buttons should always lead with a strong verb that encourages action. To provide enough context to merchants use the {verb}+{noun} format on buttons except in the case of common actions like Save, Close, Cancel, or OK.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(DoDont, {\n      children: [_jsx(_components.h4, {\n        id: \"do-2\",\n        children: \"Do\"\n      }), _jsxs(_components.ul, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: \"Activate Apple Pay\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"View shipping settings\"\n        }), \"\\n\"]\n      }), _jsx(_components.h4, {\n        id: \"dont-2\",\n        children: \"Don’t\"\n      }), _jsxs(_components.ul, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: \"Try Apple Pay\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"View your settings\"\n        }), \"\\n\"]\n      })]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Scannable: avoid unnecessary words and articles such as the, an, or a.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(DoDont, {\n      children: [_jsx(_components.h4, {\n        id: \"do-3\",\n        children: \"Do\"\n      }), _jsxs(_components.ul, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: \"Add menu item\"\n        }), \"\\n\"]\n      }), _jsx(_components.h4, {\n        id: \"dont-3\",\n        children: \"Don’t\"\n      }), _jsxs(_components.ul, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: \"Add a menu item\"\n        }), \"\\n\"]\n      })]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"secondary-action\",\n      children: \"Secondary action\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Secondary actions are used for less important actions such as “Learn more” or “Close” buttons. They should follow all the other content rules outlined for primary buttons.\"\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h2, {\n      id: \"related-components\",\n      children: \"Related components\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"To learn more about illustrations for empty states, \", _jsx(_components.a, {\n          href: \"https://polaris.shopify.com/design/illustrations\",\n          children: \"read the illustration guidelines\"\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"To create page-level layout, \", _jsx(_components.a, {\n          href: \"https://polaris.shopify.com/components/layout-and-structure/layout\",\n          children: \"use the layout component\"\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"To highlight a Shopify feature, \", _jsx(_components.a, {\n          href: \"https://polaris.shopify.com/components/callout-card\",\n          children: \"use the callout card component\"\n        })]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h2, {\n      id: \"accessibility\",\n      children: \"Accessibility\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Empty state illustrations are implemented as decorative images, so they use an empty \", _jsx(_components.code, {\n        children: \"alt\"\n      }), \" attribute and are skipped by technologies like screen readers.\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"title":"Empty state","category":"Layout and structure","keywords":["EmptyState","lander","welcome","explain features","describe features","educate about features","merchant education","educational opportunity","educational opportunities","illustration on pages","empty layouts","empty states","starting pages","starting layouts","educating","teaching","landing pages","landing layouts"],"examples":[{"fileName":"empty-state-default.tsx","title":"Default","description":"Use to explain a single feature before merchants have used it."},{"fileName":"empty-state-with-subdued-footer-context.tsx","title":"With subdued footer context","description":"Use to provide additional but non-critical context for a new product or feature. Can also be used to include a subdued call to action for secondary or tertiary actions."},{"fileName":"empty-state-with-full-width-layout.tsx","title":"With full width layout"}],"previewImg":"/images/components/layout-and-structure/empty-state.png"},"scope":{"__remarkNextMdxImporter":{}}},"examples":[{"fileName":"empty-state-default.tsx","title":"Default","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Use to explain a single feature before merchants have used it.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {LegacyCard, EmptyState} from '@shopify/polaris';\nimport React from 'react';\n\nfunction EmptyStateExample() {\n  return (\n    <LegacyCard sectioned>\n      <EmptyState\n        heading=\"Manage your inventory transfers\"\n        action={{content: 'Add transfer'}}\n        secondaryAction={{\n          content: 'Learn more',\n          url: 'https://help.shopify.com',\n        }}\n        image=\"https://cdn.shopify.com/s/files/1/0262/4071/2726/files/emptystate-files.png\"\n      >\n        <p>Track and receive your incoming inventory from suppliers.</p>\n      </EmptyState>\n    </LegacyCard>\n  );\n}\n\n"},{"fileName":"empty-state-with-subdued-footer-context.tsx","title":"With subdued footer context","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Use to provide additional but non-critical context for a new product or feature. Can also be used to include a subdued call to action for secondary or tertiary actions.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {LegacyCard, EmptyState, Link} from '@shopify/polaris';\nimport React from 'react';\n\nfunction EmptyStateExample() {\n  return (\n    <LegacyCard sectioned>\n      <EmptyState\n        heading=\"Manage your inventory transfers\"\n        action={{content: 'Add transfer'}}\n        secondaryAction={{\n          content: 'Learn more',\n          url: 'https://help.shopify.com',\n        }}\n        footerContent={\n          <p>\n            If you don’t want to add a transfer, you can import your inventory\n            from{' '}\n            <Link monochrome url=\"/settings\">\n              settings\n            </Link>\n            .\n          </p>\n        }\n        image=\"https://cdn.shopify.com/s/files/1/0262/4071/2726/files/emptystate-files.png\"\n      >\n        <p>Track and receive your incoming inventory from suppliers.</p>\n      </EmptyState>\n    </LegacyCard>\n  );\n}\n\n"},{"fileName":"empty-state-with-full-width-layout.tsx","title":"With full width layout","description":null,"code":"import {LegacyCard, EmptyState} from '@shopify/polaris';\nimport React from 'react';\n\nfunction EmptyStateExample() {\n  return (\n    <LegacyCard sectioned>\n      <EmptyState\n        heading=\"Upload a file to get started\"\n        action={{content: 'Upload files'}}\n        image=\"https://cdn.shopify.com/s/files/1/0262/4071/2726/files/emptystate-files.png\"\n        fullWidth\n      >\n        <p>\n          You can use the Files section to upload images, videos, and other\n          documents. This example shows the content with a centered layout and\n          full width.\n        </p>\n      </EmptyState>\n    </LegacyCard>\n  );\n}\n\n"}],"seoDescription":"Empty states are used when a list, table, or chart has no items or data to show. This is an opportunity to provide explanation or guidance to help merchants progress. The empty state component is intended for use when a full page in the admin is empty, and not for individual elements or areas in the interface.","type":{"EmptyStateProps":{"filePath":"polaris-react/src/components/EmptyState/EmptyState.tsx","name":"EmptyStateProps","description":"","members":[{"filePath":"polaris-react/src/components/EmptyState/EmptyState.tsx","syntaxKind":"PropertySignature","name":"heading","value":"string","description":"The empty state heading","isOptional":true},{"filePath":"polaris-react/src/components/EmptyState/EmptyState.tsx","syntaxKind":"PropertySignature","name":"image","value":"string","description":"The path to the image to display.\nThe image should have ~40px of white space above when empty state is used within a card, modal, or navigation component"},{"filePath":"polaris-react/src/components/EmptyState/EmptyState.tsx","syntaxKind":"PropertySignature","name":"largeImage","value":"string","description":"The path to the image to display on large screens","isOptional":true},{"filePath":"polaris-react/src/components/EmptyState/EmptyState.tsx","syntaxKind":"PropertySignature","name":"imageContained","value":"boolean","description":"Whether or not to limit the image to the size of its container on large screens","isOptional":true},{"filePath":"polaris-react/src/components/EmptyState/EmptyState.tsx","syntaxKind":"PropertySignature","name":"fullWidth","value":"boolean","description":"Whether or not the content should span the full width of its container","isOptional":true},{"filePath":"polaris-react/src/components/EmptyState/EmptyState.tsx","syntaxKind":"PropertySignature","name":"children","value":"React.ReactNode","description":"Elements to display inside empty state","isOptional":true},{"filePath":"polaris-react/src/components/EmptyState/EmptyState.tsx","syntaxKind":"PropertySignature","name":"action","value":"ComplexAction","description":"Primary action for empty state","isOptional":true},{"filePath":"polaris-react/src/components/EmptyState/EmptyState.tsx","syntaxKind":"PropertySignature","name":"secondaryAction","value":"ComplexAction","description":"Secondary action for empty state","isOptional":true},{"filePath":"polaris-react/src/components/EmptyState/EmptyState.tsx","syntaxKind":"PropertySignature","name":"footerContent","value":"React.ReactNode","description":"Secondary elements to display below empty state actions","isOptional":true}],"value":"export interface EmptyStateProps {\n  /** The empty state heading */\n  heading?: string;\n  /**\n   * The path to the image to display.\n   * The image should have ~40px of white space above when empty state is used within a card, modal, or navigation component\n   */\n  image: string;\n  /** The path to the image to display on large screens */\n  largeImage?: string;\n  /** Whether or not to limit the image to the size of its container on large screens */\n  imageContained?: boolean;\n  /** Whether or not the content should span the full width of its container  */\n  fullWidth?: boolean;\n  /** Elements to display inside empty state */\n  children?: React.ReactNode;\n  /** Primary action for empty state */\n  action?: ComplexAction;\n  /** Secondary action for empty state */\n  secondaryAction?: ComplexAction;\n  /** Secondary elements to display below empty state actions */\n  footerContent?: React.ReactNode;\n}"},"ComplexAction":{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"ComplexAction","description":"","members":[{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"id","value":"string","description":"A unique identifier for the action","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"content","value":"string","description":"Content the action displays","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"accessibilityLabel","value":"string","description":"Visually hidden text for screen readers","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"url","value":"string","description":"A destination to link to, rendered in the action","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"external","value":"boolean","description":"Forces url to open in a new tab","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"target","value":"Target","description":"Where to display the url","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"MethodSignature","name":"onAction","value":"() => void","description":"Callback when an action takes place","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"MethodSignature","name":"onMouseEnter","value":"() => void","description":"Callback when mouse enter","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"MethodSignature","name":"onTouchStart","value":"() => void","description":"Callback when element is touched","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"disabled","value":"boolean","description":"Whether or not the action is disabled","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"destructive","value":"boolean","description":"Destructive action","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"icon","value":"any","description":"Source of the icon","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"outline","value":"boolean","description":"Should action be displayed as an outlined button","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"loading","value":"boolean","description":"Should a spinner be displayed","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"plain","value":"boolean","description":"Should action be displayed as a plain link","isOptional":true}],"value":"export interface ComplexAction\n  extends Action,\n    DisableableAction,\n    DestructableAction,\n    IconableAction,\n    OutlineableAction,\n    LoadableAction,\n    PlainAction {}"},"Target":{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"TypeAliasDeclaration","name":"Target","value":"'_blank' | '_self' | '_parent' | '_top'","description":""}},"editPageLinkPath":"polaris.shopify.com/content/components/layout-and-structure/empty-state.mdx"},"__N_SSG":true}