{"pageProps":{"mdx":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    h2: \"h2\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\"\n  }, _provideComponents(), props.components), {Lede, Examples, Props} = _components;\n  if (!Examples) _missingMdxReference(\"Examples\", true);\n  if (!Lede) _missingMdxReference(\"Lede\", true);\n  if (!Props) _missingMdxReference(\"Props\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      id: \"frontmattertitle\",\n      children: frontmatter.title\n    }), \"\\n\", _jsx(Lede, {\n      children: _jsx(_components.p, {\n        children: \"Applies negative margin to allow content to bleed out into the surrounding layout.\"\n      })\n    }), \"\\n\", _jsx(Examples, {}), \"\\n\", _jsx(Props, {\n      componentName: frontmatter.title\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"bleed-values\",\n      children: \"Bleed values\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Content should never go beyond the edges of the parent container. Choose a bleed value that works within the containing layout.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"related-resources\",\n      children: \"Related resources\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"Bleed props are named following the convention of CSS logical properties, such as 'margin-inline-start' and 'margin-block-start'. Learn more about \", _jsx(_components.a, {\n          href: \"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Logical_Properties\",\n          children: \"CSS logicial properties\"\n        }), \".\"]\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"title":"Bleed","shortDescription":"Applies negative margin to a layout, extending it to the edge of the screen on small screens.","category":"Layout and structure","keywords":["layout"],"examples":[{"fileName":"bleed-horizontal.tsx","title":"Horizontal","description":"Content will bleed horizontally into the surrounding layout using the `marginInline` prop."},{"fileName":"bleed-vertical.tsx","title":"Vertical","description":"Content will bleed vertically into the surrounding layout using the `marginBlock` prop."},{"fileName":"bleed-specific-direction.tsx","title":"Specific direction","description":"Negative margins can be added in a specific direction using the [Space tokens](https://polaris.shopify.com/tokens/space)."}],"previewImg":"/images/components/layout-and-structure/bleed.png"},"scope":{"__remarkNextMdxImporter":{}}},"examples":[{"fileName":"bleed-horizontal.tsx","title":"Horizontal","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_components.p, {\n    children: [\"Content will bleed horizontally into the surrounding layout using the \", _jsx(_components.code, {\n      children: \"marginInline\"\n    }), \" prop.\"]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import React from 'react';\nimport {Bleed, Card, Text, InlineStack} from '@shopify/polaris';\n\n\nfunction BleedHorizontalExample() {\n  return (\n    <Card>\n      <Text as=\"h2\" variant=\"bodyMd\">\n        Content inside a card\n      </Text>\n      <Bleed marginInline=\"400\">\n        <Placeholder label=\"marginInline\" />\n      </Bleed>\n    </Card>\n  );\n}\n\nconst Placeholder = ({label = '', height = 'auto', width = 'auto'}) => {\n  return (\n    <div\n      style={{\n        background: 'var(--p-color-text-info)',\n        padding: '14px var(--p-space-200)',\n        height: height,\n        width: width,\n      }}\n    >\n      <InlineStack gap=\"400\" align=\"center\">\n        <div\n          style={{\n            color: 'var(--p-color-text-info-on-bg-fill)',\n          }}\n        >\n          <Text as=\"h2\" variant=\"bodyMd\" fontWeight=\"regular\">\n            {label}\n          </Text>\n        </div>\n      </InlineStack>\n    </div>\n  );\n};\n\n"},{"fileName":"bleed-vertical.tsx","title":"Vertical","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_components.p, {\n    children: [\"Content will bleed vertically into the surrounding layout using the \", _jsx(_components.code, {\n      children: \"marginBlock\"\n    }), \" prop.\"]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import React from 'react';\nimport {Bleed, Card, Text, InlineStack} from '@shopify/polaris';\n\n\nfunction BleedVerticalExample() {\n  return (\n    <Card>\n      <Bleed marginBlock=\"800\">\n        <Placeholder label=\"marginBlock\" />\n      </Bleed>\n    </Card>\n  );\n}\n\nconst Placeholder = ({label = '', height = 'auto', width = 'auto'}) => {\n  return (\n    <div\n      style={{\n        background: 'var(--p-color-text-info)',\n        padding: 'var(--p-space-1000) var(--p-space-200)',\n        height: height,\n        width: width,\n      }}\n    >\n      <InlineStack gap=\"400\" align=\"center\">\n        <div\n          style={{\n            color: 'var(--p-color-text-info-on-bg-fill)',\n          }}\n        >\n          <Text as=\"h2\" variant=\"bodyMd\" fontWeight=\"regular\">\n            {label}\n          </Text>\n        </div>\n      </InlineStack>\n    </div>\n  );\n};\n\n"},{"fileName":"bleed-specific-direction.tsx","title":"Specific direction","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_components.p, {\n    children: [\"Negative margins can be added in a specific direction using the \", _jsx(_components.a, {\n      href: \"https://polaris.shopify.com/tokens/space\",\n      children: \"Space tokens\"\n    }), \".\"]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import React from 'react';\n\nimport {BlockStack, Bleed, Card, Text, InlineStack} from '@shopify/polaris';\n\n\nfunction BleedSpecificDirectionExample() {\n  return (\n    <BlockStack gap=\"600\">\n      <Card>\n        <Bleed marginInlineStart=\"800\">\n          <Placeholder label=\"marginInlineStart\" />\n        </Bleed>\n      </Card>\n      <Card>\n        <Bleed marginInlineEnd=\"800\">\n          <Placeholder label=\"marginInlineEnd\" />\n        </Bleed>\n      </Card>\n      <Card>\n        <Bleed marginBlockStart=\"800\">\n          <Placeholder label=\"marginBlockStart\" />\n        </Bleed>\n      </Card>\n      <Card>\n        <Bleed marginBlockEnd=\"800\">\n          <Placeholder label=\"marginBlockEnd\" />\n        </Bleed>\n      </Card>\n    </BlockStack>\n  );\n}\n\nconst Placeholder = ({label = '', height = 'auto', width = 'auto'}) => {\n  return (\n    <div\n      style={{\n        background: 'var(--p-color-text-info)',\n        padding: '14px var(--p-space-200)',\n        height: height,\n        width: width,\n      }}\n    >\n      <InlineStack gap=\"400\" align=\"center\">\n        <div\n          style={{\n            color: 'var(--p-color-text-info-on-bg-fill)',\n          }}\n        >\n          <Text as=\"h2\" variant=\"bodyMd\" fontWeight=\"regular\">\n            {label}\n          </Text>\n        </div>\n      </InlineStack>\n    </div>\n  );\n};\n\n"}],"seoDescription":"Applies negative margin to allow content to bleed out into the surrounding layout.","type":{"BleedProps":{"filePath":"polaris-react/src/components/Bleed/Bleed.tsx","name":"BleedProps","description":"","members":[{"filePath":"polaris-react/src/components/Bleed/Bleed.tsx","syntaxKind":"PropertySignature","name":"children","value":"React.ReactNode","description":"","isOptional":true},{"filePath":"polaris-react/src/components/Bleed/Bleed.tsx","syntaxKind":"PropertySignature","name":"marginInline","value":"Spacing","description":"Negative horizontal space around children","isOptional":true},{"filePath":"polaris-react/src/components/Bleed/Bleed.tsx","syntaxKind":"PropertySignature","name":"marginBlock","value":"Spacing","description":"Negative vertical space around children","isOptional":true},{"filePath":"polaris-react/src/components/Bleed/Bleed.tsx","syntaxKind":"PropertySignature","name":"marginBlockStart","value":"Spacing","description":"Negative top space around children","isOptional":true},{"filePath":"polaris-react/src/components/Bleed/Bleed.tsx","syntaxKind":"PropertySignature","name":"marginBlockEnd","value":"Spacing","description":"Negative bottom space around children","isOptional":true},{"filePath":"polaris-react/src/components/Bleed/Bleed.tsx","syntaxKind":"PropertySignature","name":"marginInlineStart","value":"Spacing","description":"Negative left space around children","isOptional":true},{"filePath":"polaris-react/src/components/Bleed/Bleed.tsx","syntaxKind":"PropertySignature","name":"marginInlineEnd","value":"Spacing","description":"Negative right space around children","isOptional":true}],"value":"export interface BleedProps extends React.AriaAttributes {\n  children?: React.ReactNode;\n  /** Negative horizontal space around children */\n  marginInline?: Spacing;\n  /** Negative vertical space around children */\n  marginBlock?: Spacing;\n  /** Negative top space around children */\n  marginBlockStart?: Spacing;\n  /** Negative bottom space around children */\n  marginBlockEnd?: Spacing;\n  /** Negative left space around children */\n  marginInlineStart?: Spacing;\n  /** Negative right space around children */\n  marginInlineEnd?: Spacing;\n}"},"Spacing":{"filePath":"polaris-react/src/components/Bleed/Bleed.tsx","syntaxKind":"TypeAliasDeclaration","name":"Spacing","value":"ResponsiveProp<SpaceScale>","description":""},"ResponsiveProp":{"filePath":"polaris-react/src/utilities/css.ts","syntaxKind":"TypeAliasDeclaration","name":"ResponsiveProp","value":"T | ResponsivePropConfig<T>","description":""},"ResponsivePropConfig":{"filePath":"polaris-react/src/utilities/css.ts","syntaxKind":"TypeAliasDeclaration","name":"ResponsivePropConfig","value":"{\n  [Breakpoint in BreakpointsAlias]?: T;\n}","description":""}},"editPageLinkPath":"polaris.shopify.com/content/components/layout-and-structure/bleed.mdx"},"__N_SSG":true}