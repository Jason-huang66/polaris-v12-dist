{"pageProps":{"mdx":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    h2: \"h2\",\n    ul: \"ul\",\n    li: \"li\",\n    hr: \"hr\",\n    h3: \"h3\",\n    a: \"a\"\n  }, _provideComponents(), props.components), {Lede, Examples, Props} = _components;\n  if (!Examples) _missingMdxReference(\"Examples\", true);\n  if (!Lede) _missingMdxReference(\"Lede\", true);\n  if (!Props) _missingMdxReference(\"Props\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      id: \"frontmattertitle\",\n      children: frontmatter.title\n    }), \"\\n\", _jsx(Lede, {\n      children: _jsx(_components.p, {\n        children: \"The layout component is used to create the main layout on a page. Layouts sections come in three main configurations. one-column, two-column, and annotated. One and two column layouts can be combined in the same page. Annotated layouts should be used on their own and only on settings pages.\"\n      })\n    }), \"\\n\", _jsx(Examples, {}), \"\\n\", _jsx(Props, {\n      componentName: frontmatter.title\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"best-practices\",\n      children: \"Best practices\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The layout component should:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Use sections with white backgrounds for primary content and sections with grey backgrounds for secondary content that is less important\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Center cards on the background when there is no secondary card on the page to stop the content from becoming too wide\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Group similar concepts and actions together in cards\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Separate different cards using a full-width divider\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Structure primary/secondary, two-column layouts so the primary ⅔ section is used for main information and the secondary ⅓ section is used for information that might not be used as often but remains helpful for context or secondary tasks\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Use equal-width layouts with two or more columns when each layout section has the same importance\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h2, {\n      id: \"content-guidelines\",\n      children: \"Content guidelines\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The content that appears in the layout component comes from cards and annotated sections.\"\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"cards\",\n      children: \"Cards\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Content from cards should follow the content guidelines for \", _jsx(_components.a, {\n        href: \"https://polaris.shopify.com/components/layout-and-structure/legacy-card#content-guidelines\",\n        children: \"cards\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"annotated-section-titles\",\n      children: \"Annotated section titles\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Annotated section titles should follow the content guidelines for \", _jsx(_components.a, {\n        href: \"https://polaris.shopify.com/content/actionable-language#headings-and-subheadings\",\n        children: \"headings and subheadings\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"annotated-section-descriptions\",\n      children: \"Annotated section descriptions\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Annotated section descriptions should:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Be used if the explanation or purpose of the associated cards isn’t clear\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Provide instructions for any choices merchants need to make, or explain the purpose of the section\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Be short, no more than 1–3 sentences\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Direct merchants to more content in the Help Center with “Learn more” links\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Not repeat the section title\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Use complete sentences and regular punctuation\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h2, {\n      id: \"related-components\",\n      children: \"Related components\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"To visually group content in a layout section, \", _jsx(_components.a, {\n          href: \"https://polaris.shopify.com/components/layout-and-structure/card\",\n          children: \"use the card component\"\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"To lay out a set of smaller components in a row, \", _jsx(_components.a, {\n          href: \"https://polaris.shopify.com/components/layout-and-structure/vertical-stack\",\n          children: \"use the vertical stack component\"\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"To lay out form fields, \", _jsx(_components.a, {\n          href: \"https://polaris.shopify.com/components/form-layout\",\n          children: \"use the form layout component\"\n        })]\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"title":"Layout","shortDescription":"A structural component used to group other components. Creates consistent spacing and helps layout stack and scale responsively.","category":"Layout and structure","keywords":["one column","two column","three column","column","annotated","page","column layouts","containers","full width containers","secondary sections","setting page","grouped sections","annotated sections"],"examples":[{"fileName":"layout-one-column.tsx","title":"One-column","description":"Use to have a single section on its own in a full-width container. Use for simple pages and as a container for banners and other full-width content."},{"fileName":"layout-two-columns-with-primary-and-secondary-widths.tsx","title":"Two columns with primary and secondary widths","description":"Use to follow a normal section with a secondary section to create a 2/3 + 1/3 layout on detail pages (such as individual product or order pages). Can also be used on any page that needs to structure a lot of content. This layout stacks the columns on small screens."},{"fileName":"layout-two-columns-with-equal-width.tsx","title":"Two columns with equal width","description":"Use to create a ½ + ½ layout. Can be used to display content of equal importance. This layout will stack the columns on small screens."},{"fileName":"layout-three-columns-with-equal-width.tsx","title":"Three columns with equal width","description":"Use to create a ⅓ + ⅓ + ⅓ layout. Can be used to display content of equal importance. This layout will stack the columns on small screens."},{"fileName":"layout-annotated.tsx","title":"Annotated","description":"Use for settings pages. When settings are grouped thematically in annotated sections, the title and description on each section helps merchants quickly find the setting they’re looking for."},{"fileName":"layout-annotated-with-sections.tsx","title":"Annotated with sections","description":"Use for settings pages. When settings are grouped thematically in annotated sections, the title and description on each section helps merchants quickly find the setting they’re looking for."},{"fileName":"layout-annotated-with-banner-at-the-top.tsx","title":"Annotated with Banner at the top","description":"Use for settings pages that need a banner or other content at the top."}],"previewImg":"/images/components/layout-and-structure/layout.png"},"scope":{"__remarkNextMdxImporter":{}}},"examples":[{"fileName":"layout-one-column.tsx","title":"One-column","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Use to have a single section on its own in a full-width container. Use for simple pages and as a container for banners and other full-width content.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {Page, Layout, LegacyCard} from '@shopify/polaris';\nimport React from 'react';\n\nfunction LayoutExample() {\n  return (\n    <Page fullWidth>\n      <Layout>\n        <Layout.Section>\n          <LegacyCard title=\"Online store dashboard\" sectioned>\n            <p>View a summary of your online store’s performance.</p>\n          </LegacyCard>\n        </Layout.Section>\n      </Layout>\n    </Page>\n  );\n}\n\n"},{"fileName":"layout-two-columns-with-primary-and-secondary-widths.tsx","title":"Two columns with primary and secondary widths","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Use to follow a normal section with a secondary section to create a 2/3 + 1/3 layout on detail pages (such as individual product or order pages). Can also be used on any page that needs to structure a lot of content. This layout stacks the columns on small screens.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {Page, Layout, LegacyCard} from '@shopify/polaris';\nimport React from 'react';\n\nfunction LayoutExample() {\n  return (\n    <Page fullWidth>\n      <Layout>\n        <Layout.Section>\n          <LegacyCard title=\"Order details\" sectioned>\n            <p>\n              Use to follow a normal section with a secondary section to create\n              a 2/3 + 1/3 layout on detail pages (such as individual product or\n              order pages). Can also be used on any page that needs to structure\n              a lot of content. This layout stacks the columns on small screens.\n            </p>\n          </LegacyCard>\n        </Layout.Section>\n        <Layout.Section variant=\"oneThird\">\n          <LegacyCard title=\"Tags\" sectioned>\n            <p>Add tags to your order.</p>\n          </LegacyCard>\n        </Layout.Section>\n      </Layout>\n    </Page>\n  );\n}\n\n"},{"fileName":"layout-two-columns-with-equal-width.tsx","title":"Two columns with equal width","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Use to create a ½ + ½ layout. Can be used to display content of equal importance. This layout will stack the columns on small screens.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {\n  Page,\n  Layout,\n  LegacyCard,\n  ResourceList,\n  Thumbnail,\n  Text,\n} from '@shopify/polaris';\nimport React from 'react';\n\nfunction LayoutExample() {\n  return (\n    <Page fullWidth>\n      <Layout>\n        <Layout.Section variant=\"oneHalf\">\n          <LegacyCard title=\"Florida\" actions={[{content: 'Manage'}]}>\n            <LegacyCard.Section>\n              <Text tone=\"subdued\" as=\"span\">\n                455 units available\n              </Text>\n            </LegacyCard.Section>\n            <LegacyCard.Section title=\"Items\">\n              <ResourceList\n                resourceName={{singular: 'product', plural: 'products'}}\n                items={[\n                  {\n                    id: '341',\n                    url: '#',\n                    name: 'Black & orange scarf',\n                    sku: '9234194023',\n                    quantity: '254',\n                    media: (\n                      <Thumbnail\n                        source=\"https://burst.shopifycdn.com/photos/black-orange-stripes_373x@2x.jpg\"\n                        alt=\"Black orange scarf\"\n                      />\n                    ),\n                  },\n                  {\n                    id: '256',\n                    url: '#',\n                    name: 'Tucan scarf',\n                    sku: '9234194010',\n                    quantity: '201',\n                    media: (\n                      <Thumbnail\n                        source=\"https://burst.shopifycdn.com/photos/tucan-scarf_373x@2x.jpg\"\n                        alt=\"Tucan scarf\"\n                      />\n                    ),\n                  },\n                ]}\n                renderItem={(item) => {\n                  const {id, url, name, sku, media, quantity} = item;\n\n                  return (\n                    <ResourceList.Item\n                      id={id}\n                      url={url}\n                      media={media}\n                      accessibilityLabel={`View details for ${name}`}\n                    >\n                      <Text variant=\"bodyMd\" fontWeight=\"bold\" as=\"h3\">\n                        {name}\n                      </Text>\n                      <div>SKU: {sku}</div>\n                      <div>{quantity} available</div>\n                    </ResourceList.Item>\n                  );\n                }}\n              />\n            </LegacyCard.Section>\n          </LegacyCard>\n        </Layout.Section>\n        <Layout.Section variant=\"oneHalf\">\n          <LegacyCard title=\"Nevada\" actions={[{content: 'Manage'}]}>\n            <LegacyCard.Section>\n              <Text tone=\"subdued\" as=\"span\">\n                301 units available\n              </Text>\n            </LegacyCard.Section>\n            <LegacyCard.Section title=\"Items\">\n              <ResourceList\n                resourceName={{singular: 'product', plural: 'products'}}\n                items={[\n                  {\n                    id: '342',\n                    url: '#',\n                    name: 'Black & orange scarf',\n                    sku: '9234194023',\n                    quantity: '100',\n                    media: (\n                      <Thumbnail\n                        source=\"https://burst.shopifycdn.com/photos/black-orange-stripes_373x@2x.jpg\"\n                        alt=\"Black orange scarf\"\n                      />\n                    ),\n                  },\n                  {\n                    id: '257',\n                    url: '#',\n                    name: 'Tucan scarf',\n                    sku: '9234194010',\n                    quantity: '201',\n                    media: (\n                      <Thumbnail\n                        source=\"https://burst.shopifycdn.com/photos/tucan-scarf_373x@2x.jpg\"\n                        alt=\"Tucan scarf\"\n                      />\n                    ),\n                  },\n                ]}\n                renderItem={(item) => {\n                  const {id, url, name, sku, media, quantity} = item;\n\n                  return (\n                    <ResourceList.Item\n                      id={id}\n                      url={url}\n                      media={media}\n                      accessibilityLabel={`View details for ${name}`}\n                    >\n                      <Text variant=\"bodyMd\" fontWeight=\"bold\" as=\"h3\">\n                        {name}\n                      </Text>\n                      <div>SKU: {sku}</div>\n                      <div>{quantity} available</div>\n                    </ResourceList.Item>\n                  );\n                }}\n              />\n            </LegacyCard.Section>\n          </LegacyCard>\n        </Layout.Section>\n      </Layout>\n    </Page>\n  );\n}\n\n"},{"fileName":"layout-three-columns-with-equal-width.tsx","title":"Three columns with equal width","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Use to create a ⅓ + ⅓ + ⅓ layout. Can be used to display content of equal importance. This layout will stack the columns on small screens.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {\n  Page,\n  Layout,\n  LegacyCard,\n  ResourceList,\n  Thumbnail,\n  Text,\n} from '@shopify/polaris';\nimport React from 'react';\n\nfunction LayoutExample() {\n  return (\n    <Page fullWidth>\n      <Layout>\n        <Layout.Section variant=\"oneThird\">\n          <LegacyCard title=\"Florida\" actions={[{content: 'Manage'}]}>\n            <LegacyCard.Section>\n              <Text tone=\"subdued\" as=\"span\">\n                455 units available\n              </Text>\n            </LegacyCard.Section>\n            <LegacyCard.Section title=\"Items\">\n              <ResourceList\n                resourceName={{singular: 'product', plural: 'products'}}\n                items={[\n                  {\n                    id: '343',\n                    url: '#',\n                    name: 'Black & orange scarf',\n                    sku: '9234194023',\n                    quantity: '254',\n                    media: (\n                      <Thumbnail\n                        source=\"https://burst.shopifycdn.com/photos/black-orange-stripes_373x@2x.jpg\"\n                        alt=\"Black orange scarf\"\n                      />\n                    ),\n                  },\n                  {\n                    id: '258',\n                    url: '#',\n                    name: 'Tucan scarf',\n                    sku: '9234194010',\n                    quantity: '201',\n                    media: (\n                      <Thumbnail\n                        source=\"https://burst.shopifycdn.com/photos/tucan-scarf_373x@2x.jpg\"\n                        alt=\"Tucan scarf\"\n                      />\n                    ),\n                  },\n                ]}\n                renderItem={(item) => {\n                  const {id, url, name, sku, media, quantity} = item;\n\n                  return (\n                    <ResourceList.Item\n                      id={id}\n                      url={url}\n                      media={media}\n                      accessibilityLabel={`View details for ${name}`}\n                    >\n                      <Text variant=\"bodyMd\" fontWeight=\"bold\" as=\"h3\">\n                        {name}\n                      </Text>\n                      <div>SKU: {sku}</div>\n                      <div>{quantity} available</div>\n                    </ResourceList.Item>\n                  );\n                }}\n              />\n            </LegacyCard.Section>\n          </LegacyCard>\n        </Layout.Section>\n        <Layout.Section variant=\"oneThird\">\n          <LegacyCard title=\"Nevada\" actions={[{content: 'Manage'}]}>\n            <LegacyCard.Section>\n              <Text tone=\"subdued\" as=\"span\">\n                301 units available\n              </Text>\n            </LegacyCard.Section>\n            <LegacyCard.Section title=\"Items\">\n              <ResourceList\n                resourceName={{singular: 'product', plural: 'products'}}\n                items={[\n                  {\n                    id: '344',\n                    url: '#',\n                    name: 'Black & orange scarf',\n                    sku: '9234194023',\n                    quantity: '100',\n                    media: (\n                      <Thumbnail\n                        source=\"https://burst.shopifycdn.com/photos/black-orange-stripes_373x@2x.jpg\"\n                        alt=\"Black orange scarf\"\n                      />\n                    ),\n                  },\n                  {\n                    id: '259',\n                    url: '#',\n                    name: 'Tucan scarf',\n                    sku: '9234194010',\n                    quantity: '201',\n                    media: (\n                      <Thumbnail\n                        source=\"https://burst.shopifycdn.com/photos/tucan-scarf_373x@2x.jpg\"\n                        alt=\"Tucan scarf\"\n                      />\n                    ),\n                  },\n                ]}\n                renderItem={(item) => {\n                  const {id, url, name, sku, media, quantity} = item;\n\n                  return (\n                    <ResourceList.Item\n                      id={id}\n                      url={url}\n                      media={media}\n                      accessibilityLabel={`View details for ${name}`}\n                    >\n                      <Text variant=\"bodyMd\" fontWeight=\"bold\" as=\"h3\">\n                        {name}\n                      </Text>\n                      <div>SKU: {sku}</div>\n                      <div>{quantity} available</div>\n                    </ResourceList.Item>\n                  );\n                }}\n              />\n            </LegacyCard.Section>\n          </LegacyCard>\n        </Layout.Section>\n        <Layout.Section variant=\"oneThird\">\n          <LegacyCard title=\"Minneapolis\" actions={[{content: 'Manage'}]}>\n            <LegacyCard.Section>\n              <Text tone=\"subdued\" as=\"span\">\n                1931 units available\n              </Text>\n            </LegacyCard.Section>\n            <LegacyCard.Section title=\"Items\">\n              <ResourceList\n                resourceName={{singular: 'product', plural: 'products'}}\n                items={[\n                  {\n                    id: '345',\n                    url: '#',\n                    name: 'Black & orange scarf',\n                    sku: '9234194023',\n                    quantity: '1230',\n                    media: (\n                      <Thumbnail\n                        source=\"https://burst.shopifycdn.com/photos/black-orange-stripes_373x@2x.jpg\"\n                        alt=\"Black orange scarf\"\n                      />\n                    ),\n                  },\n                  {\n                    id: '260',\n                    url: '#',\n                    name: 'Tucan scarf',\n                    sku: '9234194010',\n                    quantity: '701',\n                    media: (\n                      <Thumbnail\n                        source=\"https://burst.shopifycdn.com/photos/tucan-scarf_373x@2x.jpg\"\n                        alt=\"Tucan scarf\"\n                      />\n                    ),\n                  },\n                ]}\n                renderItem={(item) => {\n                  const {id, url, name, sku, media, quantity} = item;\n\n                  return (\n                    <ResourceList.Item\n                      id={id}\n                      url={url}\n                      media={media}\n                      accessibilityLabel={`View details for ${name}`}\n                    >\n                      <Text variant=\"bodyMd\" fontWeight=\"bold\" as=\"h3\">\n                        {name}\n                      </Text>\n                      <div>SKU: {sku}</div>\n                      <div>{quantity} available</div>\n                    </ResourceList.Item>\n                  );\n                }}\n              />\n            </LegacyCard.Section>\n          </LegacyCard>\n        </Layout.Section>\n      </Layout>\n    </Page>\n  );\n}\n\n"},{"fileName":"layout-annotated.tsx","title":"Annotated","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Use for settings pages. When settings are grouped thematically in annotated sections, the title and description on each section helps merchants quickly find the setting they’re looking for.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {\n  Page,\n  Layout,\n  LegacyCard,\n  FormLayout,\n  TextField,\n} from '@shopify/polaris';\nimport React from 'react';\n\nfunction LayoutExample() {\n  return (\n    <Page fullWidth>\n      <Layout>\n        <Layout.AnnotatedSection\n          id=\"storeDetails\"\n          title=\"Store details\"\n          description=\"Shopify and your customers will use this information to contact you.\"\n        >\n          <LegacyCard sectioned>\n            <FormLayout>\n              <TextField\n                label=\"Store name\"\n                onChange={() => {}}\n                autoComplete=\"off\"\n              />\n              <TextField\n                type=\"email\"\n                label=\"Account email\"\n                onChange={() => {}}\n                autoComplete=\"email\"\n              />\n            </FormLayout>\n          </LegacyCard>\n        </Layout.AnnotatedSection>\n      </Layout>\n    </Page>\n  );\n}\n\n"},{"fileName":"layout-annotated-with-sections.tsx","title":"Annotated with sections","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Use for settings pages. When settings are grouped thematically in annotated sections, the title and description on each section helps merchants quickly find the setting they’re looking for.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {\n  Page,\n  Layout,\n  LegacyCard,\n  FormLayout,\n  TextField,\n  TextContainer,\n  Text,\n} from '@shopify/polaris';\nimport React from 'react';\n\nfunction LayoutExample() {\n  return (\n    <Page fullWidth>\n      <Layout>\n        <Layout.Section variant=\"oneThird\">\n          <div style={{marginTop: 'var(--p-space-500)'}}>\n            <TextContainer>\n              <Text id=\"storeDetails\" variant=\"headingMd\" as=\"h2\">\n                Store details\n              </Text>\n              <Text tone=\"subdued\" as=\"p\">\n                Shopify and your customers will use this information to contact\n                you.\n              </Text>\n            </TextContainer>\n          </div>\n        </Layout.Section>\n        <Layout.Section>\n          <LegacyCard sectioned>\n            <FormLayout>\n              <TextField\n                label=\"Store name\"\n                onChange={() => {}}\n                autoComplete=\"off\"\n              />\n              <TextField\n                type=\"email\"\n                label=\"Account email\"\n                onChange={() => {}}\n                autoComplete=\"email\"\n              />\n            </FormLayout>\n          </LegacyCard>\n        </Layout.Section>\n      </Layout>\n    </Page>\n  );\n}\n\n"},{"fileName":"layout-annotated-with-banner-at-the-top.tsx","title":"Annotated with Banner at the top","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Use for settings pages that need a banner or other content at the top.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {\n  Page,\n  Layout,\n  Banner,\n  LegacyCard,\n  FormLayout,\n  TextField,\n} from '@shopify/polaris';\nimport React from 'react';\n\nfunction LayoutExample() {\n  return (\n    <Page fullWidth>\n      <Layout>\n        <Layout.Section>\n          <Banner title=\"Order archived\" onDismiss={() => {}}>\n            <p>This order was archived on March 7, 2017 at 3:12pm EDT.</p>\n          </Banner>\n        </Layout.Section>\n        <Layout.AnnotatedSection\n          id=\"storeDetails\"\n          title=\"Store details\"\n          description=\"Shopify and your customers will use this information to contact you.\"\n        >\n          <LegacyCard sectioned>\n            <FormLayout>\n              <TextField\n                label=\"Store name\"\n                onChange={() => {}}\n                autoComplete=\"off\"\n              />\n              <TextField\n                type=\"email\"\n                label=\"Account email\"\n                onChange={() => {}}\n                autoComplete=\"email\"\n              />\n            </FormLayout>\n          </LegacyCard>\n        </Layout.AnnotatedSection>\n      </Layout>\n    </Page>\n  );\n}\n\n"}],"seoDescription":"The layout component is used to create the main layout on a page. Layouts sections come in three main configurations. one-column, two-column, and annotated. One and two column layouts can be combined in the same page. Annotated layouts should be used on their own and only on settings pages.","type":{"LayoutProps":{"filePath":"polaris-react/src/components/Layout/Layout.tsx","name":"LayoutProps","description":"","members":[{"filePath":"polaris-react/src/components/Layout/Layout.tsx","syntaxKind":"PropertySignature","name":"sectioned","value":"boolean","description":"Automatically adds sections to layout.","isOptional":true},{"filePath":"polaris-react/src/components/Layout/Layout.tsx","syntaxKind":"PropertySignature","name":"children","value":"React.ReactNode","description":"The content to display inside the layout.","isOptional":true}],"value":"export interface LayoutProps {\n  /** Automatically adds sections to layout. */\n  sectioned?: boolean;\n  /** The content to display inside the layout. */\n  children?: React.ReactNode;\n}"}},"editPageLinkPath":"polaris.shopify.com/content/components/layout-and-structure/layout.mdx"},"__N_SSG":true}