{"pageProps":{"mdx":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    h2: \"h2\",\n    ul: \"ul\",\n    li: \"li\",\n    hr: \"hr\",\n    h3: \"h3\",\n    h4: \"h4\",\n    a: \"a\",\n    code: \"code\"\n  }, _provideComponents(), props.components), {Lede, Examples, Props, DoDont} = _components;\n  if (!DoDont) _missingMdxReference(\"DoDont\", true);\n  if (!Examples) _missingMdxReference(\"Examples\", true);\n  if (!Lede) _missingMdxReference(\"Lede\", true);\n  if (!Props) _missingMdxReference(\"Props\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      id: \"frontmattertitle\",\n      children: frontmatter.title\n    }), \"\\n\", _jsx(Lede, {\n      children: _jsx(_components.p, {\n        children: \"Checkboxes are most commonly used to give merchants a way to make a range of selections (zero, one, or multiple). They may also be used as a way to have merchants indicate they agree to specific terms and services.\"\n      })\n    }), \"\\n\", _jsx(Examples, {}), \"\\n\", _jsx(Props, {\n      componentName: frontmatter.title\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"best-practices\",\n      children: \"Best practices\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Checkboxes should:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Work independently from each other. Selecting one checkbox shouldn’t change the selection status of another checkbox in the list. The exception is when a checkbox is used to make a bulk selection of multiple items.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Be framed positively. For example, say “Publish store” instead of “Hide store”.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Always have a label when used to activate or deactivate a setting.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Be listed according to a logical order, whether it’s alphabetical, numerical, time-based, or some other clear system.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Link to more information or include a subtitle as required to provide more explanation. Don’t rely on tooltips to explain a checkbox.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h2, {\n      id: \"content-guidelines\",\n      children: \"Content guidelines\"\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"lists-with-checkboxes\",\n      children: \"Lists with checkboxes\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Lists that use checkboxes should:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Start with a capital letter\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(DoDont, {\n      children: [_jsx(_components.h4, {\n        id: \"do\",\n        children: \"Do\"\n      }), _jsxs(_components.ul, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: \"Option 1\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"Option 2\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"Option 3\"\n        }), \"\\n\"]\n      }), _jsx(_components.h4, {\n        id: \"dont\",\n        children: \"Don’t\"\n      }), _jsxs(_components.ul, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: \"option 1\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"option 2\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"option 3\"\n        }), \"\\n\"]\n      })]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Not use commas or semicolons at the end of each line\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(DoDont, {\n      children: [_jsx(_components.h4, {\n        id: \"do-1\",\n        children: \"Do\"\n      }), _jsxs(_components.ul, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: \"Red\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"Yellow\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"Blue\"\n        }), \"\\n\"]\n      }), _jsx(_components.h4, {\n        id: \"dont-1\",\n        children: \"Don’t\"\n      }), _jsxs(_components.ul, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: \"Red;\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"Yellow;\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"Blue.\"\n        }), \"\\n\"]\n      })]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"In the rare case where the checkbox is asking merchants to agree to terms or service, use the first person\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(DoDont, {\n      children: [_jsx(_components.h4, {\n        id: \"do-2\",\n        children: \"Do\"\n      }), _jsx(_components.p, {\n        children: \"I agree to the Terms of Service.\"\n      }), _jsx(_components.h4, {\n        id: \"dont-2\",\n        children: \"Don’t\"\n      }), _jsx(_components.p, {\n        children: \"You agree to the Terms of Service\"\n      })]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h2, {\n      id: \"related-components\",\n      children: \"Related components\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"To present a list of options where merchants can only make a single choice, \", _jsx(_components.a, {\n          href: \"https://polaris.shopify.com/components/radio-button\",\n          children: \"use the radio button component\"\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"To display a list of related content, \", _jsx(_components.a, {\n          href: \"https://polaris.shopify.com/components/choice-list\",\n          children: \"use the choice list component\"\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"To create an ungrouped list, \", _jsx(_components.a, {\n          href: \"https://polaris.shopify.com/components/lists/list\",\n          children: \"use the content list component\"\n        })]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h2, {\n      id: \"accessibility\",\n      children: \"Accessibility\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Screen readers convey the state of the checkbox automatically.\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"Use the \", _jsx(_components.code, {\n          children: \"disabled\"\n        }), \" prop to apply the HTML \", _jsx(_components.code, {\n          children: \"disabled\"\n        }), \" attribute to the checkbox \", _jsx(_components.code, {\n          children: \"<input>\"\n        }), \". This prevents merchants from being able to interact with the checkbox, and conveys its inactive state to assistive technologies.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Use the \", _jsx(_components.code, {\n          children: \"id\"\n        }), \" prop to provide a unique \", _jsx(_components.code, {\n          children: \"id\"\n        }), \" attribute value for the checkbox. If an \", _jsx(_components.code, {\n          children: \"id\"\n        }), \" isn’t provided, then the component generates one. All checkboxes must have unique \", _jsx(_components.code, {\n          children: \"id\"\n        }), \" values to work correctly with assistive technologies.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Setting \", _jsx(_components.code, {\n          children: \"checked=\\\"indeterminate\\\"\"\n        }), \" conveys the state of the checkbox using \", _jsx(_components.code, {\n          children: \"aria-checked=\\\"mixed\\\"\"\n        }), \".\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Setting the \", _jsx(_components.code, {\n          children: \"ariaControls\"\n        }), \" prop conveys the ID of the element whose contents or presence are controlled by the checkbox to screen reader users with the \", _jsx(_components.code, {\n          children: \"aria-controls\"\n        }), \" attribute.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"labeling\",\n      children: \"Labeling\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"The required \", _jsx(_components.code, {\n          children: \"label\"\n        }), \" prop conveys the purpose of the checkbox to all merchants\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Use the \", _jsx(_components.code, {\n          children: \"labelHidden\"\n        }), \" prop to visually hide the label but make it available to assistive technologies\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"When you provide help text via the \", _jsx(_components.code, {\n          children: \"helpText\"\n        }), \" prop or an inline error message via the \", _jsx(_components.code, {\n          children: \"error\"\n        }), \" prop, the help or error content is conveyed to screen reader users with the \", _jsx(_components.code, {\n          children: \"aria-describedby\"\n        }), \" attribute\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"keyboard-support\",\n      children: \"Keyboard support\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"Move focus to each checkbox using the \", _jsx(\"kbd\", {\n          children: \"tab\"\n        }), \" key (or \", _jsx(\"kbd\", {\n          children: \"shift\"\n        }), \" + \", _jsx(\"kbd\", {\n          children: \"tab\"\n        }), \" when tabbing backwards)\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"To interact with the checkbox when it has keyboard focus, press the \", _jsx(\"kbd\", {\n          children: \"space\"\n        }), \" key\"]\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"title":"Checkbox","category":"Selection and input","keywords":["accept","decline","terms","input","multiple choice lists","terms and services","checkboxes","check boxes","multiple selections","form selections","multi-choice lists"],"examples":[{"fileName":"checkbox-default.tsx","title":"Default","description":"Use in forms to toggle the state of something on or off. Default checkboxes can appear as selected and disabled, or unselected."}],"previewImg":"/images/components/selection-and-input/checkbox.png"},"scope":{"__remarkNextMdxImporter":{}}},"examples":[{"fileName":"checkbox-default.tsx","title":"Default","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Use in forms to toggle the state of something on or off. Default checkboxes can appear as selected and disabled, or unselected.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {Checkbox} from '@shopify/polaris';\nimport {useState, useCallback} from 'react';\n\nfunction CheckboxExample() {\n  const [checked, setChecked] = useState(false);\n  const handleChange = useCallback(\n    (newChecked: boolean) => setChecked(newChecked),\n    [],\n  );\n\n  return (\n    <Checkbox\n      label=\"Basic checkbox\"\n      checked={checked}\n      onChange={handleChange}\n    />\n  );\n}\n\n"}],"seoDescription":"Checkboxes are most commonly used to give merchants a way to make a range of selections (zero, one, or multiple). They may also be used as a way to have merchants indicate they agree to specific terms and services.","type":{"CheckboxProps":{"filePath":"polaris-react/src/components/Checkbox/Checkbox.tsx","name":"CheckboxProps","description":"","members":[{"filePath":"polaris-react/src/components/Checkbox/Checkbox.tsx","syntaxKind":"PropertySignature","name":"ariaControls","value":"string","description":"Indicates the ID of the element that is controlled by the checkbox","isOptional":true},{"filePath":"polaris-react/src/components/Checkbox/Checkbox.tsx","syntaxKind":"PropertySignature","name":"ariaDescribedBy","value":"string","description":"Indicates the ID of the element that describes the checkbox","isOptional":true},{"filePath":"polaris-react/src/components/Checkbox/Checkbox.tsx","syntaxKind":"PropertySignature","name":"label","value":"React.ReactNode","description":"Label for the checkbox"},{"filePath":"polaris-react/src/components/Checkbox/Checkbox.tsx","syntaxKind":"PropertySignature","name":"labelHidden","value":"boolean","description":"Visually hide the label","isOptional":true},{"filePath":"polaris-react/src/components/Checkbox/Checkbox.tsx","syntaxKind":"PropertySignature","name":"checked","value":"boolean | \"indeterminate\"","description":"Checkbox is selected. `indeterminate` shows a horizontal line in the checkbox","isOptional":true},{"filePath":"polaris-react/src/components/Checkbox/Checkbox.tsx","syntaxKind":"PropertySignature","name":"disabled","value":"boolean","description":"Disable input","isOptional":true},{"filePath":"polaris-react/src/components/Checkbox/Checkbox.tsx","syntaxKind":"PropertySignature","name":"id","value":"string","description":"ID for form input","isOptional":true},{"filePath":"polaris-react/src/components/Checkbox/Checkbox.tsx","syntaxKind":"PropertySignature","name":"name","value":"string","description":"Name for form input","isOptional":true},{"filePath":"polaris-react/src/components/Checkbox/Checkbox.tsx","syntaxKind":"PropertySignature","name":"value","value":"string","description":"Value for form input","isOptional":true},{"filePath":"polaris-react/src/components/Checkbox/Checkbox.tsx","syntaxKind":"MethodSignature","name":"onChange","value":"(newChecked: boolean, id: string) => void","description":"Callback when checkbox is toggled","isOptional":true},{"filePath":"polaris-react/src/components/Checkbox/Checkbox.tsx","syntaxKind":"MethodSignature","name":"onFocus","value":"() => void","description":"Callback when checkbox is focused","isOptional":true},{"filePath":"polaris-react/src/components/Checkbox/Checkbox.tsx","syntaxKind":"MethodSignature","name":"onBlur","value":"() => void","description":"Callback when focus is removed","isOptional":true},{"filePath":"polaris-react/src/components/Checkbox/Checkbox.tsx","syntaxKind":"PropertySignature","name":"labelClassName","value":"string","description":"Added to the wrapping label","isOptional":true},{"filePath":"polaris-react/src/components/Checkbox/Checkbox.tsx","syntaxKind":"PropertySignature","name":"fill","value":"ResponsiveProp<boolean>","description":"Grow to fill the space. Equivalent to width: 100%; height: 100%","isOptional":true},{"filePath":"polaris-react/src/components/Checkbox/Checkbox.tsx","syntaxKind":"PropertySignature","name":"helpText","value":"React.ReactNode","description":"Additional text to aide in use","isOptional":true},{"filePath":"polaris-react/src/components/Checkbox/Checkbox.tsx","syntaxKind":"PropertySignature","name":"error","value":"any","description":"Display an error message","isOptional":true},{"filePath":"polaris-react/src/components/Checkbox/Checkbox.tsx","syntaxKind":"PropertySignature","name":"tone","value":"\"magic\"","description":"Indicates the tone of the checkbox","isOptional":true},{"filePath":"polaris-react/src/components/Checkbox/Checkbox.tsx","syntaxKind":"PropertySignature","name":"bleed","value":"Spacing","description":"Spacing around children. Accepts a spacing token or an object of spacing tokens for different screen sizes.","isOptional":true},{"filePath":"polaris-react/src/components/Checkbox/Checkbox.tsx","syntaxKind":"PropertySignature","name":"bleedBlockStart","value":"Spacing","description":"Vertical start spacing around children. Accepts a spacing token or an object of spacing tokens for different screen sizes.","isOptional":true},{"filePath":"polaris-react/src/components/Checkbox/Checkbox.tsx","syntaxKind":"PropertySignature","name":"bleedBlockEnd","value":"Spacing","description":"Vertical end spacing around children. Accepts a spacing token or an object of spacing tokens for different screen sizes.","isOptional":true},{"filePath":"polaris-react/src/components/Checkbox/Checkbox.tsx","syntaxKind":"PropertySignature","name":"bleedInlineStart","value":"Spacing","description":"Horizontal start spacing around children. Accepts a spacing token or an object of spacing tokens for different screen sizes.","isOptional":true},{"filePath":"polaris-react/src/components/Checkbox/Checkbox.tsx","syntaxKind":"PropertySignature","name":"bleedInlineEnd","value":"Spacing","description":"Horizontal end spacing around children. Accepts a spacing token or an object of spacing tokens for different screen sizes.","isOptional":true}],"value":"export interface CheckboxProps extends ChoiceBleedProps {\n  /** Indicates the ID of the element that is controlled by the checkbox */\n  ariaControls?: string;\n  /** Indicates the ID of the element that describes the checkbox */\n  ariaDescribedBy?: string;\n  /** Label for the checkbox */\n  label: React.ReactNode;\n  /** Visually hide the label */\n  labelHidden?: boolean;\n  /** Checkbox is selected. `indeterminate` shows a horizontal line in the checkbox */\n  checked?: boolean | 'indeterminate';\n  /** Disable input */\n  disabled?: boolean;\n  /** ID for form input */\n  id?: string;\n  /** Name for form input */\n  name?: string;\n  /** Value for form input */\n  value?: string;\n  /** Callback when checkbox is toggled */\n  onChange?(newChecked: boolean, id: string): void;\n  /** Callback when checkbox is focused */\n  onFocus?(): void;\n  /** Callback when focus is removed */\n  onBlur?(): void;\n  /** Added to the wrapping label */\n  labelClassName?: string;\n  /** Grow to fill the space. Equivalent to width: 100%; height: 100% */\n  fill?: ResponsiveProp<boolean>;\n  /** Additional text to aide in use */\n  helpText?: React.ReactNode;\n  /** Display an error message */\n  error?: Error | boolean;\n  /** Indicates the tone of the checkbox */\n  tone?: 'magic';\n}"},"ResponsiveProp":{"filePath":"polaris-react/src/utilities/css.ts","syntaxKind":"TypeAliasDeclaration","name":"ResponsiveProp","value":"T | ResponsivePropConfig<T>","description":""},"ResponsivePropConfig":{"filePath":"polaris-react/src/utilities/css.ts","syntaxKind":"TypeAliasDeclaration","name":"ResponsivePropConfig","value":"{\n  [Breakpoint in BreakpointsAlias]?: T;\n}","description":""}},"editPageLinkPath":"polaris.shopify.com/content/components/selection-and-input/checkbox.mdx"},"__N_SSG":true}