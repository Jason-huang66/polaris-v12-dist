{"pageProps":{"mdx":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    h2: \"h2\",\n    ul: \"ul\",\n    li: \"li\",\n    hr: \"hr\",\n    h3: \"h3\",\n    h4: \"h4\",\n    a: \"a\",\n    code: \"code\"\n  }, _provideComponents(), props.components), {Lede, Examples, Props, DoDont} = _components;\n  if (!DoDont) _missingMdxReference(\"DoDont\", true);\n  if (!Examples) _missingMdxReference(\"Examples\", true);\n  if (!Lede) _missingMdxReference(\"Lede\", true);\n  if (!Props) _missingMdxReference(\"Props\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      id: \"frontmattertitle\",\n      children: frontmatter.title\n    }), \"\\n\", _jsx(Lede, {\n      children: _jsx(_components.p, {\n        children: \"Description lists are a way to organize and explain related information. They’re particularly useful when you need to list and define terms such as in a glossary.\"\n      })\n    }), \"\\n\", _jsx(Examples, {}), \"\\n\", _jsx(Props, {\n      componentName: frontmatter.title\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"best-practices\",\n      children: \"Best practices\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Description lists should:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Contain terms and associated explanations, or descriptions for each term.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Provide information that isn’t action-oriented.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Not be an excuse for using unnecessarily complicated or jargon-filled language. Generally, if merchants need a description list to understand the language in Shopify, we should look for opportunities to simplify the language.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Not be used to upsell merchants on a feature or service.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h2, {\n      id: \"content-guidelines\",\n      children: \"Content guidelines\"\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"terms\",\n      children: \"Terms\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Terms should be:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Written in sentence case (the first word capitalized, the rest lowercase)\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(DoDont, {\n      children: [_jsx(_components.h4, {\n        id: \"do\",\n        children: \"Do\"\n      }), _jsxs(_components.ul, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: \"Discount code\"\n        }), \"\\n\"]\n      }), _jsx(_components.h4, {\n        id: \"dont\",\n        children: \"Don’t\"\n      }), _jsxs(_components.ul, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: \"Discount Code\"\n        }), \"\\n\"]\n      })]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"term-description\",\n      children: \"Term description\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Terms descriptions should be:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Directly related to the term they’re describing\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(DoDont, {\n      children: [_jsx(_components.h4, {\n        id: \"do-1\",\n        children: \"Do\"\n      }), _jsxs(_components.ul, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: \"Discount code: A series of numbers and/or letters that an online shopper may enter at checkout to get a discount or special offer.\"\n        }), \"\\n\"]\n      }), _jsx(_components.h4, {\n        id: \"dont-1\",\n        children: \"Don’t\"\n      }), _jsxs(_components.ul, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: \"Discount code: Having a sale on your store is a great way to sell products quickly.\"\n        }), \"\\n\"]\n      })]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Written to describe the merchant benefit or utility\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"No more than one or two short sentences in length\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Written in sentence case with all appropriate punctuation, including ending each sentence with a period\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Conversational by using articles (the, a, an)\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Written using plain language\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(DoDont, {\n      children: [_jsx(_components.h4, {\n        id: \"do-2\",\n        children: \"Do\"\n      }), _jsxs(_components.ul, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: \"Abandoned checkout: The details of a checkout that was started but not completed, including the products added and the customer’s details.\"\n        }), \"\\n\"]\n      }), _jsx(_components.h4, {\n        id: \"dont-2\",\n        children: \"Don’t\"\n      }), _jsxs(_components.ul, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: \"Abandoned checkout: Details of products added to checkout but not purchased\"\n        }), \"\\n\"]\n      })]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h2, {\n      id: \"related-components\",\n      children: \"Related components\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"To create a list of actions or navigation, \", _jsx(_components.a, {\n          href: \"https://polaris.shopify.com/components/action-list\",\n          children: \"use the action list component\"\n        }), \".\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h2, {\n      id: \"accessibility\",\n      children: \"Accessibility\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The description list component produces a description list wrapper (\", _jsx(_components.code, {\n        children: \"<dl>\"\n      }), \"), terms (\", _jsx(_components.code, {\n        children: \"<dt>\"\n      }), \"), and definitions (\", _jsx(_components.code, {\n        children: \"<dd>\"\n      }), \") to convey the relationships between the list items to assistive technology users.\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"title":"Description list","shortDescription":"Used to present pairs of related information, like terms and definitions, or names and values, in a list format.","category":"Lists","keywords":["DescriptionList","glossary","description","list terms","list and define terms","item lists","text lists","list of terms","term explaination"],"examples":[{"fileName":"description-list-default.tsx","title":"Default","description":"Use when you need to present merchants with a list of items or terms alongside descriptions and explanations."}],"previewImg":"/images/components/lists/description-list.png"},"scope":{"__remarkNextMdxImporter":{}}},"examples":[{"fileName":"description-list-default.tsx","title":"Default","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Use when you need to present merchants with a list of items or terms alongside descriptions and explanations.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {DescriptionList} from '@shopify/polaris';\nimport React from 'react';\n\nfunction Example() {\n  return (\n    <DescriptionList\n      items={[\n        {\n          term: 'Logistics',\n          description:\n            'The management of products or other resources as they travel between a point of origin and a destination.',\n        },\n        {\n          term: 'Sole proprietorship',\n          description:\n            'A business structure where a single individual both owns and runs the company.',\n        },\n        {\n          term: 'Discount code',\n          description:\n            'A series of numbers and/or letters that an online shopper may enter at checkout to get a discount or special offer.',\n        },\n      ]}\n    />\n  );\n}\n\n"}],"seoDescription":"Description lists are a way to organize and explain related information. They’re particularly useful when you need to list and define terms such as in a glossary.","type":{"DescriptionListProps":{"filePath":"polaris-react/src/components/DescriptionList/DescriptionList.tsx","name":"DescriptionListProps","description":"","members":[{"filePath":"polaris-react/src/components/DescriptionList/DescriptionList.tsx","syntaxKind":"PropertySignature","name":"items","value":"Item[]","description":"Collection of items for list"},{"filePath":"polaris-react/src/components/DescriptionList/DescriptionList.tsx","syntaxKind":"PropertySignature","name":"gap","value":"\"tight\" | \"loose\"","description":"Determines the spacing between list items","isOptional":true}],"value":"export interface DescriptionListProps {\n  /** Collection of items for list */\n  items: Item[];\n  /** Determines the spacing between list items */\n  gap?: 'tight' | 'loose';\n}"},"Item":{"filePath":"polaris-react/src/components/DescriptionList/DescriptionList.tsx","name":"Item","description":"","members":[{"filePath":"polaris-react/src/components/DescriptionList/DescriptionList.tsx","syntaxKind":"PropertySignature","name":"term","value":"React.ReactNode","description":"Title of the item"},{"filePath":"polaris-react/src/components/DescriptionList/DescriptionList.tsx","syntaxKind":"PropertySignature","name":"description","value":"React.ReactNode","description":"Item content"}],"value":"interface Item {\n  /** Title of the item */\n  term: React.ReactNode;\n  /**  Item content */\n  description: React.ReactNode;\n}"}},"editPageLinkPath":"polaris.shopify.com/content/components/lists/description-list.mdx"},"__N_SSG":true}