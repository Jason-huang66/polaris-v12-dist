{"pageProps":{"mdx":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    h2: \"h2\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\",\n    hr: \"hr\"\n  }, _provideComponents(), props.components), {Lede, Examples, Props} = _components;\n  if (!Examples) _missingMdxReference(\"Examples\", true);\n  if (!Lede) _missingMdxReference(\"Lede\", true);\n  if (!Props) _missingMdxReference(\"Props\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      id: \"frontmattertitle\",\n      children: frontmatter.title\n    }), \"\\n\", _jsx(Lede, {\n      children: _jsx(_components.p, {\n        children: \"Button group displays multiple related actions stacked or in a horizontal row to help with arrangement and spacing.\"\n      })\n    }), \"\\n\", _jsx(Examples, {}), \"\\n\", _jsx(Props, {\n      componentName: frontmatter.title\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"best-practices\",\n      children: \"Best practices\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Button groups should:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"Only use buttons that follow the\\n\", _jsx(_components.a, {\n          href: \"https://polaris.shopify.com/components/actions/button#best-practices\",\n          children: \"best practices outlined in the button component\"\n        })]\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Group together calls to action that have a relationship\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Be used with consideration that too many calls to action can cause merchants to be unsure of what to do next\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Be thoughtful about how multiple buttons will look and work on small screens\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Only be used in groups of up to six buttons if the buttons contain an icon with no text\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h2, {\n      id: \"content-guidelines\",\n      children: \"Content guidelines\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Button groups should follow the \", _jsx(_components.a, {\n        href: \"https://polaris.shopify.com/content/actionable-language#buttons\",\n        children: \"content guidelines\"\n      }), \" for buttons.\"]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h2, {\n      id: \"related-components\",\n      children: \"Related components\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"To learn how to use individual buttons, \", _jsx(_components.a, {\n          href: \"https://polaris.shopify.com/components/actions/button\",\n          children: \"use the button component\"\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"To embed an action or navigation into a line of text, \", _jsx(_components.a, {\n          href: \"https://polaris.shopify.com/components/link\",\n          children: \"use the link component\"\n        })]\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"title":"Button group","shortDescription":"Displays multiple related actions stacked or in a horizontal row for arrangement and spacing.","category":"Actions","keywords":["ButtonGroup","choices","decision","call-to-action","CTA","segmented buttons","divided buttons","grouped actions","multiple horizontal buttons","multiple buttons","set of buttons","set of actions","horizontal arrangement of buttons","stacked","segmented control"],"examples":[{"fileName":"button-group-default.tsx","title":"Default","description":"Use when you have multiple buttons to space them out evenly."},{"fileName":"button-group-with-segmented-buttons.tsx","title":"With segmented buttons","description":"Use to emphasize several buttons as a thematically-related set among other controls."},{"fileName":"button-group-pressed-with-segmented-buttons.tsx","title":"Pressed with segmented buttons","description":"Pressed buttons can be used in combination to create a toggle for other parts of the user interface."}],"previewImg":"/images/components/actions/button-group.png"},"scope":{"__remarkNextMdxImporter":{}}},"examples":[{"fileName":"button-group-default.tsx","title":"Default","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Use when you have multiple buttons to space them out evenly.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {ButtonGroup, Button} from '@shopify/polaris';\nimport React from 'react';\n\nfunction ButtonGroupDefaultExample() {\n  return (\n    <ButtonGroup>\n      <Button>Cancel</Button>\n      <Button variant=\"primary\">Save</Button>\n    </ButtonGroup>\n  );\n}\n\n"},{"fileName":"button-group-with-segmented-buttons.tsx","title":"With segmented buttons","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Use to emphasize several buttons as a thematically-related set among other controls.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {ButtonGroup, Button} from '@shopify/polaris';\nimport React from 'react';\n\nfunction ButtonGroupExample() {\n  return (\n    <ButtonGroup variant=\"segmented\">\n      <Button>Bold</Button>\n      <Button>Italic</Button>\n      <Button>Underline</Button>\n    </ButtonGroup>\n  );\n}\n\n"},{"fileName":"button-group-pressed-with-segmented-buttons.tsx","title":"Pressed with segmented buttons","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Pressed buttons can be used in combination to create a toggle for other parts of the user interface.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {ButtonGroup, Button} from '@shopify/polaris';\nimport {useCallback, useState} from 'react';\n\nfunction ButtonGroupPressedWithSegmentedButtonsExample() {\n  const [activeButtonIndex, setActiveButtonIndex] = useState(0);\n\n  const handleButtonClick = useCallback(\n    (index: number) => {\n      if (activeButtonIndex === index) return;\n      setActiveButtonIndex(index);\n    },\n    [activeButtonIndex],\n  );\n\n  return (\n    <ButtonGroup variant=\"segmented\">\n      <Button\n        pressed={activeButtonIndex === 0}\n        onClick={() => handleButtonClick(0)}\n      >\n        Bold\n      </Button>\n      <Button\n        pressed={activeButtonIndex === 1}\n        onClick={() => handleButtonClick(1)}\n      >\n        Italic\n      </Button>\n      <Button\n        pressed={activeButtonIndex === 2}\n        onClick={() => handleButtonClick(2)}\n      >\n        Underline\n      </Button>\n    </ButtonGroup>\n  );\n}\n\n  ButtonGroupPressedWithSegmentedButtonsExample,\n);\n"}],"seoDescription":"Button group displays multiple related actions stacked or in a horizontal row to help with arrangement and spacing.","type":{"ButtonGroupProps":{"filePath":"polaris-react/src/components/ButtonGroup/ButtonGroup.tsx","name":"ButtonGroupProps","description":"","members":[{"filePath":"polaris-react/src/components/ButtonGroup/ButtonGroup.tsx","syntaxKind":"PropertySignature","name":"gap","value":"Gap","description":"Determines the space between button group items","isOptional":true},{"filePath":"polaris-react/src/components/ButtonGroup/ButtonGroup.tsx","syntaxKind":"PropertySignature","name":"variant","value":"\"segmented\"","description":"Styling variant for group","isOptional":true},{"filePath":"polaris-react/src/components/ButtonGroup/ButtonGroup.tsx","syntaxKind":"PropertySignature","name":"fullWidth","value":"boolean","description":"Buttons will stretch/shrink to occupy the full width","isOptional":true},{"filePath":"polaris-react/src/components/ButtonGroup/ButtonGroup.tsx","syntaxKind":"PropertySignature","name":"connectedTop","value":"boolean","description":"Remove top left and right border radius","isOptional":true},{"filePath":"polaris-react/src/components/ButtonGroup/ButtonGroup.tsx","syntaxKind":"PropertySignature","name":"noWrap","value":"boolean","description":"Prevent buttons in button group from wrapping to next line","isOptional":true},{"filePath":"polaris-react/src/components/ButtonGroup/ButtonGroup.tsx","syntaxKind":"PropertySignature","name":"children","value":"React.ReactNode","description":"Button components","isOptional":true}],"value":"export interface ButtonGroupProps {\n  /** Determines the space between button group items */\n  gap?: Gap;\n  /** Styling variant for group */\n  variant?: Variant;\n  /** Buttons will stretch/shrink to occupy the full width */\n  fullWidth?: boolean;\n  /** Remove top left and right border radius */\n  connectedTop?: boolean;\n  /** Prevent buttons in button group from wrapping to next line */\n  noWrap?: boolean;\n  /** Button components */\n  children?: React.ReactNode;\n}"},"Gap":{"filePath":"polaris-react/src/components/ButtonGroup/ButtonGroup.tsx","syntaxKind":"TypeAliasDeclaration","name":"Gap","value":"'extraTight' | 'tight' | 'loose'","description":""}},"editPageLinkPath":"polaris.shopify.com/content/components/actions/button-group.mdx"},"__N_SSG":true}