{"pageProps":{"mdx":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    h2: \"h2\",\n    ul: \"ul\",\n    li: \"li\",\n    hr: \"hr\",\n    a: \"a\",\n    code: \"code\"\n  }, _provideComponents(), props.components), {Lede, Examples, Props} = _components;\n  if (!Examples) _missingMdxReference(\"Examples\", true);\n  if (!Lede) _missingMdxReference(\"Lede\", true);\n  if (!Props) _missingMdxReference(\"Props\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      id: \"frontmattertitle\",\n      children: frontmatter.title\n    }), \"\\n\", _jsx(Lede, {\n      children: _jsx(_components.p, {\n        children: \"The collapsible component is used to put long sections of information under a block that merchants can expand or collapse.\"\n      })\n    }), \"\\n\", _jsx(Examples, {}), \"\\n\", _jsx(Props, {\n      componentName: frontmatter.title\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"best-practices\",\n      children: \"Best practices\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The collapsible component should:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Be used for information that is lower priority or that merchants don’t need to see all the time\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Not be used to hide error messages or other critical information that requires an immediate action\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h2, {\n      id: \"content-guidelines\",\n      children: \"Content guidelines\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Collapsible containers are cards with expandable and collapsible functionality, and should follow the content guidelines for \", _jsx(_components.a, {\n        href: \"https://polaris.shopify.com/components/layout-and-structure/legacy-card#content-guidelines\",\n        children: \"cards\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h2, {\n      id: \"related-components\",\n      children: \"Related components\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"To control a collapsible component, use the \", _jsx(_components.a, {\n          href: \"https://polaris.shopify.com/components/actions/button\",\n          children: \"button\"\n        }), \" component\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"To put long sections of information in a container that allows for scrolling, \", _jsx(_components.a, {\n          href: \"https://polaris.shopify.com/components/scrollable\",\n          children: \"use the scrollable component\"\n        })]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h2, {\n      id: \"accessibility\",\n      children: \"Accessibility\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the collapsible component in conjunction with a \", _jsx(_components.a, {\n        href: \"https://polaris.shopify.com/components/actions/button\",\n        children: \"button\"\n      }), \". Place the collapsible content immediately after the button that controls it, so merchants with vision or attention issues can easily discover what content is being affected.\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"Use the required \", _jsx(_components.code, {\n          children: \"id\"\n        }), \" prop of the collapsible component to give the content a unique \", _jsx(_components.code, {\n          children: \"id\"\n        }), \" value\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Use the \", _jsx(_components.code, {\n          children: \"ariaExpanded\"\n        }), \" prop on the button component to add an \", _jsx(_components.code, {\n          children: \"aria-expanded\"\n        }), \" attribute, which conveys the expanded or collapsed state to screen reader users\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Use the \", _jsx(_components.code, {\n          children: \"ariaControls\"\n        }), \" prop on the button component, and set its value to the \", _jsx(_components.code, {\n          children: \"id\"\n        }), \" value of the collapsible component\"]\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"title":"Collapsible","shortDescription":"Hides content and allows merchants to expand it. Used to hide optional settings, information, and actions.","category":"Utilities","keywords":["hide","show","low priority","less important","disclosure","accordion","accordian","expand content","toggle","toggleable","reveal","show more","show all button","show hide","expanding view","collapse"],"examples":[{"fileName":"collapsible-default.tsx","title":"Default","description":"Use for a basic “show more” interaction when you need to display more content."}],"previewImg":"/images/components/utilities/collapsible.png"},"scope":{"__remarkNextMdxImporter":{}}},"examples":[{"fileName":"collapsible-default.tsx","title":"Default","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Use for a basic “show more” interaction when you need to display more content.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {\n  LegacyCard,\n  LegacyStack,\n  Button,\n  Collapsible,\n  TextContainer,\n  Link,\n} from '@shopify/polaris';\nimport {useState, useCallback} from 'react';\n\nfunction CollapsibleExample() {\n  const [open, setOpen] = useState(true);\n\n  const handleToggle = useCallback(() => setOpen((open) => !open), []);\n\n  return (\n    <div style={{height: '200px'}}>\n      <LegacyCard sectioned>\n        <LegacyStack vertical>\n          <Button\n            onClick={handleToggle}\n            ariaExpanded={open}\n            ariaControls=\"basic-collapsible\"\n          >\n            Toggle\n          </Button>\n          <Collapsible\n            open={open}\n            id=\"basic-collapsible\"\n            transition={{duration: '500ms', timingFunction: 'ease-in-out'}}\n            expandOnPrint\n          >\n            <TextContainer>\n              <p>\n                Your mailing list lets you contact customers or visitors who\n                have shown an interest in your store. Reach out to them with\n                exclusive offers or updates about your products.\n              </p>\n              <Link url=\"#\">Test link</Link>\n            </TextContainer>\n          </Collapsible>\n        </LegacyStack>\n      </LegacyCard>\n    </div>\n  );\n}\n\n"}],"seoDescription":"The collapsible component is used to put long sections of information under a block that merchants can expand or collapse.","type":{"CollapsibleProps":{"filePath":"polaris-react/src/components/Collapsible/Collapsible.tsx","name":"CollapsibleProps","description":"","members":[{"filePath":"polaris-react/src/components/Collapsible/Collapsible.tsx","syntaxKind":"PropertySignature","name":"id","value":"string","description":"Assign a unique ID to the collapsible. For accessibility, pass this ID as the value of the triggering component’s aria-controls prop."},{"filePath":"polaris-react/src/components/Collapsible/Collapsible.tsx","syntaxKind":"PropertySignature","name":"expandOnPrint","value":"boolean","description":"Option to show collapsible content when printing","isOptional":true},{"filePath":"polaris-react/src/components/Collapsible/Collapsible.tsx","syntaxKind":"PropertySignature","name":"open","value":"boolean","description":"Toggle whether the collapsible is expanded or not."},{"filePath":"polaris-react/src/components/Collapsible/Collapsible.tsx","syntaxKind":"PropertySignature","name":"transition","value":"boolean | Transition","description":"Override transition properties. When set to false, disables transition completely.","isOptional":true,"defaultValue":"transition={{duration: 'var(--p-motion-duration-150)', timingFunction: 'var(--p-motion-ease-in-out)'}}"},{"filePath":"polaris-react/src/components/Collapsible/Collapsible.tsx","syntaxKind":"MethodSignature","name":"onAnimationEnd","value":"() => void","description":"Callback when the animation completes.","isOptional":true},{"filePath":"polaris-react/src/components/Collapsible/Collapsible.tsx","syntaxKind":"PropertySignature","name":"children","value":"React.ReactNode","description":"The content to display inside the collapsible.","isOptional":true}],"value":"export interface CollapsibleProps {\n  /** Assign a unique ID to the collapsible. For accessibility, pass this ID as the value of the triggering component’s aria-controls prop. */\n  id: string;\n  /** Option to show collapsible content when printing */\n  expandOnPrint?: boolean;\n  /** Toggle whether the collapsible is expanded or not. */\n  open: boolean;\n  /** Override transition properties. When set to false, disables transition completely.\n   * @default transition={{duration: 'var(--p-motion-duration-150)', timingFunction: 'var(--p-motion-ease-in-out)'}}\n   */\n  transition?: boolean | Transition;\n  /** Callback when the animation completes. */\n  onAnimationEnd?(): void;\n  /** The content to display inside the collapsible. */\n  children?: React.ReactNode;\n}"},"Transition":{"filePath":"polaris-react/src/components/Collapsible/Collapsible.tsx","name":"Transition","description":"","members":[{"filePath":"polaris-react/src/components/Collapsible/Collapsible.tsx","syntaxKind":"PropertySignature","name":"duration","value":"string","description":"Assign a transition duration to the collapsible animation.","isOptional":true},{"filePath":"polaris-react/src/components/Collapsible/Collapsible.tsx","syntaxKind":"PropertySignature","name":"timingFunction","value":"string","description":"Assign a transition timing function to the collapsible animation","isOptional":true}],"value":"interface Transition {\n  /** Assign a transition duration to the collapsible animation. */\n  duration?: string;\n  /** Assign a transition timing function to the collapsible animation */\n  timingFunction?: string;\n}"}},"editPageLinkPath":"polaris.shopify.com/content/components/utilities/collapsible.mdx"},"__N_SSG":true}