{"pageProps":{"mdx":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    h2: \"h2\",\n    ul: \"ul\",\n    li: \"li\",\n    code: \"code\",\n    a: \"a\",\n    h3: \"h3\",\n    hr: \"hr\",\n    h4: \"h4\"\n  }, _provideComponents(), props.components), {Lede, Examples, Props, DoDont} = _components;\n  if (!DoDont) _missingMdxReference(\"DoDont\", true);\n  if (!Examples) _missingMdxReference(\"Examples\", true);\n  if (!Lede) _missingMdxReference(\"Lede\", true);\n  if (!Props) _missingMdxReference(\"Props\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      id: \"frontmattertitle\",\n      children: frontmatter.title\n    }), \"\\n\", _jsx(Lede, {\n      children: _jsx(_components.p, {\n        children: \"Informs merchants about important changes or persistent conditions. Use this component if you need to communicate to merchants in a prominent way. Banners are placed at the top of the page or section they apply to, and below the page or section header.\"\n      })\n    }), \"\\n\", _jsx(Examples, {}), \"\\n\", _jsx(Props, {\n      componentName: frontmatter.title\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"best-practices\",\n      children: \"Best practices\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Banners should:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Be used thoughtfully and sparingly for only the most important information.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Not be used to call attention to what a merchant needs to do in the UI instead of making the action clear in the UI itself.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Not be the primary entry point to information or actions merchants need on a regular basis.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Be dismissible unless they contain critical information or an important step merchants need to take.\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Use the default icon for \", _jsx(_components.code, {\n          children: \"success\"\n        }), \", \", _jsx(_components.code, {\n          children: \"info\"\n        }), \", \", _jsx(_components.code, {\n          children: \"warning\"\n        }), \" and \", _jsx(_components.code, {\n          children: \"critical\"\n        }), \" tones. If the status icon is changed, use only \", _jsx(_components.a, {\n          href: \"https://polaris.shopify.com/design/icons#major-icons-20-20\",\n          children: \"major icons\"\n        }), \".\"]\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Remove the status icon only in scenarios where it takes up too much space, such as very small breakpoints or in side navigation cards.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"placement\",\n      children: \"Placement\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Banners should be placed in the appropriate context:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Banners relevant to an entire page should be placed at the top of that page, below the page header. They should occupy the full width of the content area.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Banners related to a section of a page (like a card, popover, or modal) should be placed inside that section, below any section heading. These banners have less spacing and a pared-back design to fit within a content context.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Banners related to an element more specific that a section should be placed immediately above or below that element.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h2, {\n      id: \"content-guidelines\",\n      children: \"Content guidelines\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Banners should:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Focus on a single theme, piece of information, or required action to avoid overwhelming merchants.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Be concise and scannable—merchants shouldn’t need to spend a lot of time figuring out what they need to know and do.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Be limited to a few important calls to action with no more than one primary action.\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Not be used for marketing information or upsell—\", _jsx(_components.a, {\n          href: \"https://polaris.shopify.com/components/callout-card\",\n          children: \"use callout cards\"\n        }), \" instead.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"To learn about writing helpful and accessible error message text, see the guidelines for \", _jsx(_components.a, {\n        href: \"https://polaris.shopify.com/patterns/error-messages\",\n        children: \"error messages\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"title\",\n      children: \"Title\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Banner titles should follow the content guidelines for \", _jsx(_components.a, {\n        href: \"https://polaris.shopify.com/content/actionable-language#headings-and-subheadings\",\n        children: \"headings and subheadings\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"body-content\",\n      children: \"Body content\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Body content should:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Be concise: keep content to 1 to 2 sentences where possible\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Clarify the benefit of the main task\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Be written in sentence case and use appropriate punctuation\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Avoid repeating the heading\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Explain how to resolve the issue, particularly for warning and critical banners\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(DoDont, {\n      children: [_jsx(_components.h4, {\n        id: \"do\",\n        children: \"Do\"\n      }), _jsx(_components.p, {\n        children: \"Your online store has a maximum of 20 themes. Delete unused themes to add more.\"\n      }), _jsx(_components.h4, {\n        id: \"dont\",\n        children: \"Don’t\"\n      }), _jsx(_components.p, {\n        children: \"You have reached your theme limit. Your online store has reached its maximum of 20 themes. To add more themes, delete themes you’re no longer using.\"\n      })]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"button-and-links\",\n      children: \"Button and links\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Buttons and links should be:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Clear and predictable: merchants should be able to anticipate what will happen when they click a button. Never deceive merchants by mislabeling a button.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(DoDont, {\n      children: [_jsx(_components.h4, {\n        id: \"do-1\",\n        children: \"Do\"\n      }), _jsx(_components.p, {\n        children: \"Buy shipping label\"\n      }), _jsx(_components.h4, {\n        id: \"dont-1\",\n        children: \"Don’t\"\n      }), _jsx(_components.p, {\n        children: \"Buy\"\n      })]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Action-led: buttons should always lead with a strong verb that encourages action. To provide enough context to merchants use the {verb}+{noun} format on buttons except in the case of common actions like Save, Close, Cancel, or OK.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(DoDont, {\n      children: [_jsx(_components.h4, {\n        id: \"do-2\",\n        children: \"Do\"\n      }), _jsx(_components.p, {\n        children: \"Activate Apple Pay\"\n      }), _jsx(_components.h4, {\n        id: \"dont-2\",\n        children: \"Don’t\"\n      }), _jsx(_components.p, {\n        children: \"Try Apple Pay\"\n      })]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Scannable: avoid unnecessary words and articles such as the, an, or a.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(DoDont, {\n      children: [_jsx(_components.h4, {\n        id: \"do-3\",\n        children: \"Do\"\n      }), _jsx(_components.p, {\n        children: \"Add menu item\"\n      }), _jsx(_components.h4, {\n        id: \"dont-3\",\n        children: \"Don’t\"\n      }), _jsx(_components.p, {\n        children: \"Add a menu item\"\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Link text should:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Set the expectation of where merchants will be taken\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(DoDont, {\n      children: [_jsx(_components.h4, {\n        id: \"do-4\",\n        children: \"Do\"\n      }), _jsx(_components.p, {\n        children: \"Order #001\"\n      }), _jsx(_components.h4, {\n        id: \"dont-4\",\n        children: \"Don’t\"\n      }), _jsx(_components.p, {\n        children: \"Order\"\n      })]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Use consistent content to label navigation. For example, if a navigational link leads to a page called Orders, label the link Orders.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(DoDont, {\n      children: [_jsx(_components.h4, {\n        id: \"do-5\",\n        children: \"Do\"\n      }), _jsx(_components.p, {\n        children: \"Payments\"\n      }), _jsx(_components.h4, {\n        id: \"dont-5\",\n        children: \"Don’t\"\n      }), _jsx(_components.p, {\n        children: \"Finance section\"\n      })]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"secondary-body-content\",\n      children: \"Secondary body content\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Body content should be:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Actionable: start sentences with imperative verbs when telling merchants what actions are available to them (especially something new). Don’t use permissive language like “you can”.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(DoDont, {\n      children: [_jsx(_components.h4, {\n        id: \"do-6\",\n        children: \"Do\"\n      }), _jsx(_components.p, {\n        children: \"Get performance data for all your sales channels.\"\n      }), _jsx(_components.h4, {\n        id: \"dont-6\",\n        children: \"Don’t\"\n      }), _jsx(_components.p, {\n        children: \"Now you can get performance data for all your sales channels.\"\n      })]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Structured for merchant success: always put the most critical information first.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Clear: use the verb “need” to help merchants understand when they’re required to do something.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(DoDont, {\n      children: [_jsx(_components.h4, {\n        id: \"do-7\",\n        children: \"Do\"\n      }), _jsx(_components.p, {\n        children: \"To buy a shipping label, you need to enter the total weight of your shipment, including packaging.\"\n      }), _jsx(_components.h4, {\n        id: \"dont-7\",\n        children: \"Don’t\"\n      }), _jsx(_components.p, {\n        children: \"To buy a shipping label, you must enter the total weight of your shipment, including packaging.\"\n      })]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h2, {\n      id: \"related-components\",\n      children: \"Related components\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"To inform merchants about a new feature or opportunity, \", _jsx(_components.a, {\n          href: \"https://polaris.shopify.com/components/callout-card\",\n          children: \"use callout cards\"\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"To group similar concepts together in the interface, \", _jsx(_components.a, {\n          href: \"https://polaris.shopify.com/components/layout-and-structure/card\",\n          children: \"use a card\"\n        })]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h2, {\n      id: \"accessibility\",\n      children: \"Accessibility\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Banners provide context and assist workflows for merchants with disabilities.\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"Critical and warning banners have a \", _jsx(_components.code, {\n          children: \"role=”alert”\"\n        }), \" and are announced by assistive technologies when they appear.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"All other banners have a \", _jsx(_components.code, {\n          children: \"role=”status”\"\n        }), \" and are read after any critical announcements.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"All banners have an \", _jsx(_components.code, {\n          children: \"aria-live\"\n        }), \" attribute and are announced by assistive technologies when their content is updated. These announcements can be disabled by using the prop \", _jsx(_components.code, {\n          children: \"stopAnnouncements\"\n        }), \".\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Banners use \", _jsx(_components.code, {\n          children: \"aria-describedby\"\n        }), \" to describe their purpose to assistive technologies when they’re announced or receive focus. If a banner has a \", _jsx(_components.code, {\n          children: \"title\"\n        }), \", then the title content is used for the \", _jsx(_components.code, {\n          children: \"aria-describedby\"\n        }), \". If the banner doesn’t have a \", _jsx(_components.code, {\n          children: \"title\"\n        }), \", then all of the banner content is used for the \", _jsx(_components.code, {\n          children: \"aria-describedby\"\n        }), \".\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Banner containers have a \", _jsx(_components.code, {\n          children: \"tabindex=”0”\"\n        }), \" and display a visible keyboard focus indicator. Because of this, merchants can discover banners while tabbing through forms or other interactions, and developers can programmatically move focus to banners.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Banners use a combination of \", _jsx(_components.a, {\n          href: \"https://polaris.shopify.com/design/icons\",\n          children: \"icons\"\n        }), \" and \", _jsx(_components.a, {\n          href: \"https://polaris.shopify.com/design/colors\",\n          children: \"colors\"\n        }), \" to show their meaning and level of importance to merchants.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"error-notifications-in-forms\",\n      children: \"Error notifications in forms\"\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"critical-banners\",\n      children: \"Critical banners\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"When merchants submit long or complex forms with errors, use a critical banner to summarize what went wrong. Place the banner at the top of the form and move focus to the banner when the form is submitted. This allows all merchants to move through the form in a logical order to correct the issues.\"\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"inline-errors\",\n      children: \"Inline errors\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Always include \", _jsx(_components.a, {\n        href: \"https://polaris.shopify.com/components/inline-error\",\n        children: \"inline error\"\n      }), \" messages for specific form fields so that merchants know what to do in context as they correct their mistakes.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"To learn about creating helpful and accessible error message text, see the guidelines for \", _jsx(_components.a, {\n        href: \"https://polaris.shopify.com/patterns/error-messages\",\n        children: \"error messages\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(DoDont, {\n      children: [_jsx(_components.h4, {\n        id: \"do-8\",\n        children: \"Do\"\n      }), _jsxs(_components.ul, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: \"Put banners close in context to the problem they’re referring to\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"Give banners with a lot of information a clear title that summarizes their content\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"Move focus to banners if they’re relevant to the merchant’s current workflow and need to be addressed immediately\"\n        }), \"\\n\"]\n      }), _jsx(_components.h4, {\n        id: \"dont-8\",\n        children: \"Don’t\"\n      }), _jsxs(_components.ul, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: \"Move focus to banners if they appear on page load, or outside the merchant’s current workflow\"\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [\"Use warning or critical (\", _jsx(_components.code, {\n            children: \"role=”alert”\"\n          }), \") banners to convey information that the merchant doesn’t need to address immediately\"]\n        }), \"\\n\"]\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"title":"Banner","shortDescription":"Informs merchants about important changes or persistent conditions in a prominent way.","category":"Feedback indicators","keywords":["inform","update","changes","conditions","dismissible banners","banner with footer call-to-action","banner with footer button","banner with button","informational banners","success banners","warning banners","critical banners","banner width","banner headings","banner content","banner buttons","banner links","banner body content","banner text","banner body text","full-width alert"],"examples":[{"fileName":"banner-default.tsx","title":"Default","description":"Use to convey general information or actions that aren’t critical. For example, you might show a banner that asks for merchant feedback. Default banners contain lower priority information and should always be dismissible."},{"fileName":"banner-dismissible.tsx","title":"Dismissible","description":"Make all banners dismissible, unless they contain critical information or an important action that merchants are required to take."},{"fileName":"banner-with-footer-call-to-action.tsx","title":"With footer call-to-action","description":"Use when you want merchants to take an action after reading the banner."},{"fileName":"banner-informational.tsx","title":"Informational","description":"Use to update merchants about a change or give them advice."},{"fileName":"banner-success.tsx","title":"Success","description":"Default to using toasts for success messages, unless the feedback is delayed, persistent, or has a call to action. Include next steps if applicable."},{"fileName":"banner-warning.tsx","title":"Warning","description":"Use to display information that needs attention or that merchants need to take action on. Seeing these banners can be stressful for merchants so be cautious about using them."},{"fileName":"banner-critical.tsx","title":"Critical","description":"Use to communicate problems that have to be resolved immediately for merchants to complete a task. For example, you will show this banner for orders with high fraud risk. Seeing these banners can be stressful for merchants so be cautious about using them."},{"fileName":"banner-in-a-modal.tsx","title":"In a modal","description":"Banners inside of modals render with less spacing and a pared-back design to fit within a content context."},{"fileName":"banner-with-focus.tsx","title":"With focus","description":"Banner can programmatically receive focus. Use this functionality to draw the merchant’s attention to the banner."},{"fileName":"banner-in-a-card.tsx","title":"In a card","description":"Banners inside of cards render with less spacing and a pared-back design to fit within a content context."}],"previewImg":"/images/components/feedback-indicators/banner.png"},"scope":{"__remarkNextMdxImporter":{}}},"examples":[{"fileName":"banner-default.tsx","title":"Default","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Use to convey general information or actions that aren’t critical. For example, you might show a banner that asks for merchant feedback. Default banners contain lower priority information and should always be dismissible.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {Banner} from '@shopify/polaris';\nimport React from 'react';\n\nfunction BannerExample() {\n  return (\n    <Banner title=\"Order archived\" onDismiss={() => {}}>\n      <p>This order was archived on March 7, 2017 at 3:12pm EDT.</p>\n    </Banner>\n  );\n}\n\n"},{"fileName":"banner-dismissible.tsx","title":"Dismissible","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Make all banners dismissible, unless they contain critical information or an important action that merchants are required to take.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {Banner, Link} from '@shopify/polaris';\nimport React from 'react';\n\nfunction BannerExample() {\n  return (\n    <Banner onDismiss={() => {}}>\n      <p>\n        Use your finance report to get detailed information about your business.{' '}\n        <Link url=\"\">Let us know what you think</Link>\n      </p>\n    </Banner>\n  );\n}\n\n"},{"fileName":"banner-with-footer-call-to-action.tsx","title":"With footer call-to-action","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Use when you want merchants to take an action after reading the banner.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {Banner} from '@shopify/polaris';\nimport React from 'react';\n\nfunction BannerExample() {\n  return (\n    <Banner\n      title=\"Some of your product variants are missing weights\"\n      tone=\"warning\"\n      action={{content: 'Edit variant weights', url: ''}}\n      secondaryAction={{content: 'Learn more', url: ''}}\n      onDismiss={() => {}}\n    >\n      <p>\n        Add weights to show accurate rates at checkout and when buying shipping\n        labels in Shopify.\n      </p>\n    </Banner>\n  );\n}\n\n"},{"fileName":"banner-informational.tsx","title":"Informational","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Use to update merchants about a change or give them advice.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {Banner} from '@shopify/polaris';\nimport React from 'react';\n\nfunction BannerExample() {\n  return (\n    <Banner\n      title=\"USPS has updated their rates\"\n      action={{content: 'Update rates', url: ''}}\n      secondaryAction={{content: 'Learn more'}}\n      tone=\"info\"\n      onDismiss={() => {}}\n    >\n      <p>Make sure you know how these changes affect your store.</p>\n    </Banner>\n  );\n}\n\n"},{"fileName":"banner-success.tsx","title":"Success","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Default to using toasts for success messages, unless the feedback is delayed, persistent, or has a call to action. Include next steps if applicable.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {Banner} from '@shopify/polaris';\nimport React from 'react';\n\nfunction BannerExample() {\n  return (\n    <Banner\n      title=\"Your shipping label is ready to print.\"\n      tone=\"success\"\n      action={{content: 'Print label'}}\n      onDismiss={() => {}}\n    />\n  );\n}\n\n"},{"fileName":"banner-warning.tsx","title":"Warning","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Use to display information that needs attention or that merchants need to take action on. Seeing these banners can be stressful for merchants so be cautious about using them.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {Banner, List} from '@shopify/polaris';\nimport React from 'react';\n\nfunction BannerExample() {\n  return (\n    <Banner\n      title=\"Before you can purchase a shipping label, this change needs to be made:\"\n      action={{content: 'Edit address'}}\n      tone=\"warning\"\n    >\n      <List>\n        <List.Item>\n          The name of the city you’re shipping to has characters that aren’t\n          allowed. City name can only include spaces and hyphens.\n        </List.Item>\n      </List>\n    </Banner>\n  );\n}\n\n"},{"fileName":"banner-critical.tsx","title":"Critical","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Use to communicate problems that have to be resolved immediately for merchants to complete a task. For example, you will show this banner for orders with high fraud risk. Seeing these banners can be stressful for merchants so be cautious about using them.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {Banner, Link} from '@shopify/polaris';\nimport React from 'react';\n\nfunction BannerExample() {\n  return (\n    <Banner\n      title=\"High risk of fraud detected\"\n      action={{content: 'Review risk analysis'}}\n      tone=\"critical\"\n    >\n      <p>\n        Before fulfilling this order or capturing payment, please{' '}\n        <Link url=\"\">review the Risk Analysis</Link> and determine if this order\n        is fraudulent.\n      </p>\n    </Banner>\n  );\n}\n\n"},{"fileName":"banner-in-a-modal.tsx","title":"In a modal","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Banners inside of modals render with less spacing and a pared-back design to fit within a content context.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {Button, Modal, TextContainer, Banner} from '@shopify/polaris';\nimport React, {useState, useCallback} from 'react';\n\nfunction BannerInModalExample() {\n  const [active, setActive] = useState(false);\n\n  const handleChange = useCallback(() => setActive(!active), [active]);\n\n  return (\n    <div style={{height: '500px'}}>\n      <Button onClick={handleChange}>Open</Button>\n      <Modal\n        open={active}\n        onClose={handleChange}\n        title=\"Reach more shoppers with Instagram product tags\"\n        primaryAction={{\n          content: 'Add Instagram',\n          onAction: handleChange,\n        }}\n        secondaryActions={[\n          {\n            content: 'Learn more',\n            onAction: handleChange,\n          },\n        ]}\n      >\n        <Modal.Section>\n          <TextContainer>\n            <Banner action={{content: 'Connect account'}} tone=\"warning\">\n              <p>\n                Connect your instagram account to your shop before proceeding.\n              </p>\n            </Banner>\n            <p>\n              Use Instagram posts to share your products with millions of\n              people. Let shoppers buy from your store without leaving\n              Instagram.\n            </p>\n          </TextContainer>\n        </Modal.Section>\n      </Modal>\n    </div>\n  );\n}\n\n"},{"fileName":"banner-with-focus.tsx","title":"With focus","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Banner can programmatically receive focus. Use this functionality to draw the merchant’s attention to the banner.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {Banner, BannerHandles} from '@shopify/polaris';\nimport React, {useEffect, useRef} from 'react';\n\nfunction BannerWithFocusExample() {\n  const banner = useRef<BannerHandles>(null);\n\n  useEffect(() => banner.current?.focus(), []);\n\n  return (\n    <Banner\n      title=\"High risk of fraud detected\"\n      onDismiss={() => {}}\n      tone=\"critical\"\n      ref={banner}\n    >\n      <p>\n        Before fulfilling this order or capturing payment, please review the\n        fraud analysis and determine if this order is fraudulent\n      </p>\n    </Banner>\n  );\n}\n\n"},{"fileName":"banner-in-a-card.tsx","title":"In a card","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Banners inside of cards render with less spacing and a pared-back design to fit within a content context.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {LegacyCard, TextContainer, Banner, Link} from '@shopify/polaris';\nimport React from 'react';\n\nfunction BannerExample() {\n  return (\n    <LegacyCard title=\"Online store dashboard\" sectioned>\n      <TextContainer>\n        <Banner onDismiss={() => {}}>\n          <p>\n            Use your finance report to get detailed information about your\n            business. <Link url=\"\">Let us know what you think</Link>\n          </p>\n        </Banner>\n\n        <p>View a summary of your online store’s performance.</p>\n      </TextContainer>\n    </LegacyCard>\n  );\n}\n\n"}],"seoDescription":"Informs merchants about important changes or persistent conditions. Use this component if you need to communicate to merchants in a prominent way. Banners are placed at the top of the page or section they apply to, and below the page or section header.","type":{"BannerProps":{"filePath":"polaris-react/src/components/Banner/Banner.tsx","name":"BannerProps","description":"","members":[{"filePath":"polaris-react/src/components/Banner/Banner.tsx","syntaxKind":"PropertySignature","name":"title","value":"string","description":"Title content for the banner.","isOptional":true},{"filePath":"polaris-react/src/components/Banner/Banner.tsx","syntaxKind":"PropertySignature","name":"icon","value":"any","description":"Status icon to display in the banner. Use only major icons","isOptional":true},{"filePath":"polaris-react/src/components/Banner/Banner.tsx","syntaxKind":"PropertySignature","name":"hideIcon","value":"boolean","description":"Renders the banner without a status icon.","isOptional":true},{"filePath":"polaris-react/src/components/Banner/Banner.tsx","syntaxKind":"PropertySignature","name":"tone","value":"BannerTone","description":"Sets the status of the banner.","isOptional":true},{"filePath":"polaris-react/src/components/Banner/Banner.tsx","syntaxKind":"PropertySignature","name":"children","value":"React.ReactNode","description":"The child elements to render in the banner.","isOptional":true},{"filePath":"polaris-react/src/components/Banner/Banner.tsx","syntaxKind":"PropertySignature","name":"action","value":"DisableableAction & LoadableAction","description":"Action for banner","isOptional":true},{"filePath":"polaris-react/src/components/Banner/Banner.tsx","syntaxKind":"PropertySignature","name":"secondaryAction","value":"Action","description":"Action | Displays a secondary action","isOptional":true},{"filePath":"polaris-react/src/components/Banner/Banner.tsx","syntaxKind":"MethodSignature","name":"onDismiss","value":"() => void","description":"Callback when banner is dismissed","isOptional":true},{"filePath":"polaris-react/src/components/Banner/Banner.tsx","syntaxKind":"PropertySignature","name":"stopAnnouncements","value":"boolean","description":"Disables screen reader announcements when changing the content of the banner","isOptional":true}],"value":"export interface BannerProps {\n  /** Title content for the banner. */\n  title?: string;\n  /** Status icon to display in the banner. Use only major icons */\n  icon?: IconProps['source'];\n  /** Renders the banner without a status icon. */\n  hideIcon?: boolean;\n  /** Sets the status of the banner. */\n  tone?: BannerTone;\n  /** The child elements to render in the banner. */\n  children?: React.ReactNode;\n  /** Action for banner */\n  action?: DisableableAction & LoadableAction;\n  /** Action | Displays a secondary action */\n  secondaryAction?: Action;\n  /** Callback when banner is dismissed */\n  onDismiss?(): void;\n  /** Disables screen reader announcements when changing the content of the banner */\n  stopAnnouncements?: boolean;\n}"},"BannerTone":{"filePath":"polaris-react/src/components/Banner/Banner.tsx","syntaxKind":"TypeAliasDeclaration","name":"BannerTone","value":"'success' | 'info' | 'warning' | 'critical'","description":""},"DisableableAction":{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"DisableableAction","description":"","members":[{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"disabled","value":"boolean","description":"Whether or not the action is disabled","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"id","value":"string","description":"A unique identifier for the action","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"content","value":"string","description":"Content the action displays","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"accessibilityLabel","value":"string","description":"Visually hidden text for screen readers","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"url","value":"string","description":"A destination to link to, rendered in the action","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"external","value":"boolean","description":"Forces url to open in a new tab","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"target","value":"Target","description":"Where to display the url","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"MethodSignature","name":"onAction","value":"() => void","description":"Callback when an action takes place","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"MethodSignature","name":"onMouseEnter","value":"() => void","description":"Callback when mouse enter","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"MethodSignature","name":"onTouchStart","value":"() => void","description":"Callback when element is touched","isOptional":true}],"value":"export interface DisableableAction extends Action {\n  /** Whether or not the action is disabled */\n  disabled?: boolean;\n}"},"Target":{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"TypeAliasDeclaration","name":"Target","value":"'_blank' | '_self' | '_parent' | '_top'","description":""},"LoadableAction":{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"LoadableAction","description":"","members":[{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"loading","value":"boolean","description":"Should a spinner be displayed","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"id","value":"string","description":"A unique identifier for the action","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"content","value":"string","description":"Content the action displays","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"accessibilityLabel","value":"string","description":"Visually hidden text for screen readers","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"url","value":"string","description":"A destination to link to, rendered in the action","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"external","value":"boolean","description":"Forces url to open in a new tab","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"target","value":"Target","description":"Where to display the url","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"MethodSignature","name":"onAction","value":"() => void","description":"Callback when an action takes place","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"MethodSignature","name":"onMouseEnter","value":"() => void","description":"Callback when mouse enter","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"MethodSignature","name":"onTouchStart","value":"() => void","description":"Callback when element is touched","isOptional":true}],"value":"export interface LoadableAction extends Action {\n  /** Should a spinner be displayed */\n  loading?: boolean;\n}"},"Action":{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Action","description":"","members":[{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"id","value":"string","description":"A unique identifier for the action","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"content","value":"string","description":"Content the action displays","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"accessibilityLabel","value":"string","description":"Visually hidden text for screen readers","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"url","value":"string","description":"A destination to link to, rendered in the action","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"external","value":"boolean","description":"Forces url to open in a new tab","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"target","value":"Target","description":"Where to display the url","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"MethodSignature","name":"onAction","value":"() => void","description":"Callback when an action takes place","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"MethodSignature","name":"onMouseEnter","value":"() => void","description":"Callback when mouse enter","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"MethodSignature","name":"onTouchStart","value":"() => void","description":"Callback when element is touched","isOptional":true}],"value":"export interface Action {\n  /** A unique identifier for the action */\n  id?: string;\n  /** Content the action displays */\n  content?: string;\n  /** Visually hidden text for screen readers */\n  accessibilityLabel?: string;\n  /** A destination to link to, rendered in the action */\n  url?: string;\n  /** Forces url to open in a new tab */\n  external?: boolean;\n  /** Where to display the url */\n  target?: Target;\n  /** Callback when an action takes place */\n  onAction?(): void;\n  /** Callback when mouse enter */\n  onMouseEnter?(): void;\n  /** Callback when element is touched */\n  onTouchStart?(): void;\n}"}},"editPageLinkPath":"polaris.shopify.com/content/components/feedback-indicators/banner.mdx"},"__N_SSG":true}