{"pageProps":{"mdx":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    h2: \"h2\",\n    ul: \"ul\",\n    li: \"li\",\n    hr: \"hr\",\n    a: \"a\",\n    code: \"code\"\n  }, _provideComponents(), props.components), {Lede, Examples, Props} = _components;\n  if (!Examples) _missingMdxReference(\"Examples\", true);\n  if (!Lede) _missingMdxReference(\"Lede\", true);\n  if (!Props) _missingMdxReference(\"Props\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      id: \"frontmattertitle\",\n      children: frontmatter.title\n    }), \"\\n\", _jsx(Lede, {\n      children: _jsx(_components.p, {\n        children: \"Use exception lists to help merchants notice important, standout information that adds extra context to a task. Exception lists often consist of a title and description. Each item in the list either has a bullet or icon at the front.\"\n      })\n    }), \"\\n\", _jsx(Examples, {}), \"\\n\", _jsx(Props, {\n      componentName: frontmatter.title\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"best-practices\",\n      children: \"Best practices\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The exception list component should:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Be attached to another component\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Inform merchants about extra context that will help them make better decisions\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Only surface noteworthy, actionable content, like a high risk order or out of stock item\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Used sparingly, so that it has more impact and doesn’t add clutter\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Only use an icon if it adds clarity to the content or helps merchants visualize the meaning\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h2, {\n      id: \"content-guidelines\",\n      children: \"Content guidelines\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Exception lists should:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Highlight an exceptional state that helps merchants make a decision\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Use the appropriate \", _jsx(_components.a, {\n          href: \"https://polaris.shopify.com/design/colors\",\n          children: \"color\"\n        }), \" to suit the tone of the message\"]\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Have a description (a title is optional)\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Be concise\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"For error states, exception lists should:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Either tell merchants how to solve the problem or be attached to an item that lets merchants fix the problem\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"If placed next to an item in a \", _jsx(_components.a, {\n        href: \"https://polaris.shopify.com/components/resource-list\",\n        children: \"resource list\"\n      }), \", exceptions lists should:\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Make the entire list item clickable because the exception list itself isn’t clickable\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h2, {\n      id: \"related-components\",\n      children: \"Related components\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"To display an error at the top of a page, or to indicate multiple errors in a form, use the \", _jsx(_components.a, {\n          href: \"https://polaris.shopify.com/components/feedback-indicators/banner\",\n          children: \"banner\"\n        }), \" component\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Exceptions lists are often used in the \", _jsx(_components.a, {\n          href: \"https://polaris.shopify.com/components/resource-list\",\n          children: \"resource list\"\n        }), \" component to display conditional content\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h2, {\n      id: \"accessibility\",\n      children: \"Accessibility\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Items in an exception list are organized as list items (\", _jsx(_components.code, {\n        children: \"<li>\"\n      }), \") in an unordered list wrapper (\", _jsx(_components.code, {\n        children: \"<ul>\"\n      }), \"), so they’re conveyed as a group of related elements to assistive technology users.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Icons displayed with exception list items are meant to visually reinforce the adjacent information, not to convey information on their own. They are skipped by screen readers using \", _jsx(_components.code, {\n        children: \"aria-hidden=\\\"true\\\"\"\n      }), \".\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"title":"Exception list","shortDescription":"Helps merchants notice important, standout information that adds extra context to a task.","category":"Feedback indicators","keywords":["exception list","exceptions","list","list exceptions"],"examples":[{"fileName":"exception-list-default.tsx","title":"Default","description":"Use icons to add clarity or assist in visualizing the meaning"}],"previewImg":"/images/components/feedback-indicators/exception-list.png"},"scope":{"__remarkNextMdxImporter":{}}},"examples":[{"fileName":"exception-list-default.tsx","title":"Default","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Use icons to add clarity or assist in visualizing the meaning\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {ExceptionList} from '@shopify/polaris';\nimport {NoteMinor} from '@shopify/polaris-icons';\nimport React from 'react';\n\nfunction ExceptionListExample() {\n  return (\n    <ExceptionList\n      items={[\n        {\n          icon: NoteMinor,\n          description:\n            'This customer is awesome. Make sure to treat them right!',\n        },\n      ]}\n    />\n  );\n}\n\n"}],"seoDescription":"Use exception lists to help merchants notice important, standout information that adds extra context to a task. Exception lists often consist of a title and description. Each item in the list either has a bullet or icon at the front.","type":{"ExceptionListProps":{"filePath":"polaris-react/src/components/ExceptionList/ExceptionList.tsx","name":"ExceptionListProps","description":"","members":[{"filePath":"polaris-react/src/components/ExceptionList/ExceptionList.tsx","syntaxKind":"PropertySignature","name":"items","value":"Item[]","description":"Collection of items for list"}],"value":"export interface ExceptionListProps {\n  /** Collection of items for list */\n  items: Item[];\n}"},"Item":{"filePath":"polaris-react/src/components/ExceptionList/ExceptionList.tsx","name":"Item","description":"","members":[{"filePath":"polaris-react/src/components/ExceptionList/ExceptionList.tsx","syntaxKind":"PropertySignature","name":"status","value":"\"warning\" | \"critical\"","description":"Set the color of the icon and title for the given item.","isOptional":true},{"filePath":"polaris-react/src/components/ExceptionList/ExceptionList.tsx","syntaxKind":"PropertySignature","name":"icon","value":"any","description":"Icon displayed by the list item","isOptional":true},{"filePath":"polaris-react/src/components/ExceptionList/ExceptionList.tsx","syntaxKind":"PropertySignature","name":"title","value":"string","description":"Text displayed beside the icon","isOptional":true},{"filePath":"polaris-react/src/components/ExceptionList/ExceptionList.tsx","syntaxKind":"PropertySignature","name":"description","value":"any","description":"Text displayed for the item","isOptional":true},{"filePath":"polaris-react/src/components/ExceptionList/ExceptionList.tsx","syntaxKind":"PropertySignature","name":"truncate","value":"boolean","description":"Should the description be truncated at end of line","isOptional":true}],"value":"interface Item {\n  /** Set the color of the icon and title for the given item. */\n  status?: 'critical' | 'warning';\n  /** Icon displayed by the list item */\n  icon?: IconProps['source'];\n  /** Text displayed beside the icon */\n  title?: string;\n  /** Text displayed for the item */\n  description?: Description;\n  /** Should the description be truncated at end of line */\n  truncate?: boolean;\n}"}},"editPageLinkPath":"polaris.shopify.com/content/components/feedback-indicators/exception-list.mdx"},"__N_SSG":true}