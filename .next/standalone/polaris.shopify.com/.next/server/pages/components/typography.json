{"pageProps":{"mdx":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\"\n  }, _provideComponents(), props.components), {Lede, RichCardGrid} = _components;\n  if (!Lede) _missingMdxReference(\"Lede\", true);\n  if (!RichCardGrid) _missingMdxReference(\"RichCardGrid\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      id: \"frontmattertitle\",\n      children: frontmatter.title\n    }), \"\\n\", _jsx(Lede, {\n      children: _jsx(_components.p, {\n        children: \"Establish hierarchy and communicate importance through text presentation.\"\n      })\n    }), \"\\n\", _jsx(RichCardGrid, {\n      cards: posts\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"title":"Typography","expanded":true,"order":6,"previewImg":"/images/components/typography.png"},"scope":{"posts":[{"url":"/components/typography/text","description":"Typography helps establish hierarchy and communicate important content by creating clear visual patterns.","title":"Text","category":"Typography","keywords":["titles","text","typographic","spacing","display","heading","body","success","critical","warning","subdued","regular","medium","semibold","bold","list"],"examples":[{"fileName":"text-heading.tsx","title":"Heading","description":"Use to create various levels of hierarchy on the page."},{"fileName":"text-body.tsx","title":"Body","description":"Use to create a range of body text. These styles are primarily used within components and blocks of text."},{"fileName":"text-align.tsx","title":"Align","description":"Use to set text alignment."},{"fileName":"text-weight.tsx","title":"Weight","description":"Use to give text a range of font weights."},{"fileName":"text-tone.tsx","title":"Tone","description":"Use to set text tone (color)."},{"fileName":"text-inheritance.tsx","title":"Inheritance","description":"Inherits props from a parent Text container"},{"fileName":"text-decoration.tsx","title":"Decoration","description":"Use to define text decoration"}],"previewImg":"/images/components/typography/text.png","order":1000}],"__remarkNextMdxImporter":{}}},"seoDescription":"Establish hierarchy and communicate importance through text presentation.","editPageLinkPath":"/polaris.shopify.com/content/components/typography/index.mdx","isContentPage":false,"showTOC":false,"collapsibleTOC":false},"__N_SSG":true}