{"pageProps":{"mdx":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    h2: \"h2\",\n    ul: \"ul\",\n    li: \"li\",\n    hr: \"hr\",\n    a: \"a\",\n    code: \"code\"\n  }, _provideComponents(), props.components), {Lede, Examples, Props} = _components;\n  if (!Examples) _missingMdxReference(\"Examples\", true);\n  if (!Lede) _missingMdxReference(\"Lede\", true);\n  if (!Props) _missingMdxReference(\"Props\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      id: \"frontmattertitle\",\n      children: frontmatter.title\n    }), \"\\n\", _jsx(Lede, {\n      children: _jsx(_components.p, {\n        children: \"Use thumbnails as a visual anchor and identifier for an object. They should be used along with text to provide context.\"\n      })\n    }), \"\\n\", _jsx(Examples, {}), \"\\n\", _jsx(Props, {\n      componentName: frontmatter.title\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"best-practices\",\n      children: \"Best practices\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"On web, thumbnails should:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"Be one of 4 sizes:\", \"\\n\", _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"Extra small (24 x 24 px): use in tightly condensed layouts\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Small (40 × 40 px): use when the medium size is too large for the layout, or when the thumbnail has less importance.\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Medium (60 × 60 px): use as the default size.\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Large (80 × 80 px): use when an thumbnail is a major focal point. Avoid this size in lists of like items.\"\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"On Android and iOS, thumbnails should:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"Be one of 2 sizes:\", \"\\n\", _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"Default (40 × 40): use as the default size.\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Large (72 × 72): use when an thumbnail is a major focal point. Avoid this size in lists of like items.\"\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h2, {\n      id: \"content-guidelines\",\n      children: \"Content guidelines\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Any time you use an image to communicate a concept on Shopify, it’s important to use descriptive \", _jsx(_components.a, {\n        href: \"https://polaris.shopify.com/content/alternative-text\",\n        children: \"alt text\"\n      }), \". Doing this is important for \", _jsx(_components.a, {\n        href: \"https://polaris.shopify.com/foundations/internationalization\",\n        children: \"accessibility\"\n      }), \" because it allows screen readers to describe what’s in the image to people who may not be able to see it.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"For thumbnails, we recommend using a format that describes what will show in the image:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"On web, \", _jsx(_components.code, {\n          children: \"alt=\\\"Photo of {product}\\\"\"\n        }), \". For example, “Photo of black t-shirt with cartoon tiger”.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"On web, an empty \", _jsx(_components.code, {\n          children: \"alt=\\\"\\\"\"\n        }), \" attribute ignores the image in assistive technologies such as screen readers, and may be used on decorative thumbnails.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"On iOS, \", _jsx(_components.code, {\n          children: \"imageView.accessibilityLabel = \\\"Photo of {product}\\\"\"\n        }), \". For example, “Photo of black t-shirt with cartoon tiger”.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"On Android, \", _jsx(_components.code, {\n          children: \"android:contentDescription=\\\"Photo of {product}\\\"\"\n        }), \". For example, “Photo of black t-shirt with cartoon tiger”.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h2, {\n      id: \"related-components\",\n      children: \"Related components\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"To present a thumbnail representation of an individual or business in the interface, \", _jsx(_components.a, {\n          href: \"https://polaris.shopify.com/components/avatar\",\n          children: \"use the avatar component\"\n        })]\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"title":"Thumbnail","shortDescription":"Used as a visual anchor and identifier for an object, along with text to provide context.","category":"Images and icons","keywords":["photo","picture","image","small thumbnail","medium thumbnail","large thumbnail","image preview"],"examples":[{"fileName":"thumbnail-default.tsx","title":"Default","description":"Use as the default size."},{"fileName":"thumbnail-extra-small.tsx","title":"Extra small","description":"Use to present a thumbnail in a condensed layout, such as a data table cell or an action list item."},{"fileName":"thumbnail-small.tsx","title":"Small","description":"Use when the default size is too large for the layout, or when the thumbnail has less importance."},{"fileName":"thumbnail-large.tsx","title":"Large","description":"Use when a thumbnail is a major focal point. Avoid this size in lists of like items."},{"fileName":"thumbnail-with-component-source.tsx","title":"With component source","description":"Use to render an icon inside of thumbnail."}],"previewImg":"/images/components/images-and-icons/thumbnail.png"},"scope":{"__remarkNextMdxImporter":{}}},"examples":[{"fileName":"thumbnail-default.tsx","title":"Default","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Use as the default size.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {Thumbnail} from '@shopify/polaris';\nimport React from 'react';\n\nfunction ThumbnailExample() {\n  return (\n    <Thumbnail\n      source=\"https://burst.shopifycdn.com/photos/black-leather-choker-necklace_373x@2x.jpg\"\n      alt=\"Black choker necklace\"\n    />\n  );\n}\n\n"},{"fileName":"thumbnail-extra-small.tsx","title":"Extra small","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Use to present a thumbnail in a condensed layout, such as a data table cell or an action list item.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {Thumbnail} from '@shopify/polaris';\nimport React from 'react';\n\nfunction ThumbnailExample() {\n  return (\n    <Thumbnail\n      source=\"https://burst.shopifycdn.com/photos/black-leather-choker-necklace_373x@2x.jpg\"\n      size=\"extraSmall\"\n      alt=\"Black choker necklace\"\n    />\n  );\n}\n\n"},{"fileName":"thumbnail-small.tsx","title":"Small","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Use when the default size is too large for the layout, or when the thumbnail has less importance.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {Thumbnail} from '@shopify/polaris';\nimport React from 'react';\n\nfunction ThumbnailExample() {\n  return (\n    <Thumbnail\n      source=\"https://burst.shopifycdn.com/photos/black-leather-choker-necklace_373x@2x.jpg\"\n      size=\"small\"\n      alt=\"Black choker necklace\"\n    />\n  );\n}\n\n"},{"fileName":"thumbnail-large.tsx","title":"Large","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Use when a thumbnail is a major focal point. Avoid this size in lists of like items.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {Thumbnail} from '@shopify/polaris';\nimport React from 'react';\n\nfunction ThumbnailExample() {\n  return (\n    <Thumbnail\n      source=\"https://burst.shopifycdn.com/photos/black-leather-choker-necklace_373x@2x.jpg\"\n      size=\"large\"\n      alt=\"Black choker necklace\"\n    />\n  );\n}\n\n"},{"fileName":"thumbnail-with-component-source.tsx","title":"With component source","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Use to render an icon inside of thumbnail.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {Thumbnail} from '@shopify/polaris';\nimport {NoteMinor} from '@shopify/polaris-icons';\nimport React from 'react';\n\nfunction ThumbnailExample() {\n  return <Thumbnail source={NoteMinor} size=\"large\" alt=\"Small document\" />;\n}\n\n"}],"seoDescription":"Use thumbnails as a visual anchor and identifier for an object. They should be used along with text to provide context.","type":{"ThumbnailProps":{"filePath":"polaris-react/src/components/Thumbnail/Thumbnail.tsx","name":"ThumbnailProps","description":"","members":[{"filePath":"polaris-react/src/components/Thumbnail/Thumbnail.tsx","syntaxKind":"PropertySignature","name":"size","value":"Size","description":"Size of thumbnail","isOptional":true,"defaultValue":"'medium'"},{"filePath":"polaris-react/src/components/Thumbnail/Thumbnail.tsx","syntaxKind":"PropertySignature","name":"source","value":"any","description":"URL for the image"},{"filePath":"polaris-react/src/components/Thumbnail/Thumbnail.tsx","syntaxKind":"PropertySignature","name":"alt","value":"string","description":"Alt text for the thumbnail image"},{"filePath":"polaris-react/src/components/Thumbnail/Thumbnail.tsx","syntaxKind":"PropertySignature","name":"transparent","value":"boolean","description":"Transparent background","isOptional":true}],"value":"export interface ThumbnailProps {\n  /**\n   * Size of thumbnail\n   * @default 'medium'\n   */\n  size?: Size;\n  /** URL for the image */\n  source: string | React.FunctionComponent<React.SVGProps<SVGSVGElement>>;\n  /** Alt text for the thumbnail image */\n  alt: string;\n  /** Transparent background */\n  transparent?: boolean;\n}"},"Size":{"filePath":"polaris-react/src/components/Thumbnail/Thumbnail.tsx","syntaxKind":"TypeAliasDeclaration","name":"Size","value":"'extraSmall' | 'small' | 'medium' | 'large'","description":""}},"editPageLinkPath":"polaris.shopify.com/content/components/images-and-icons/thumbnail.mdx"},"__N_SSG":true}