{"pageProps":{"mdx":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    h2: \"h2\",\n    ul: \"ul\",\n    li: \"li\",\n    hr: \"hr\",\n    a: \"a\",\n    code: \"code\"\n  }, _provideComponents(), props.components), {Lede, Examples, Props} = _components;\n  if (!Examples) _missingMdxReference(\"Examples\", true);\n  if (!Lede) _missingMdxReference(\"Lede\", true);\n  if (!Props) _missingMdxReference(\"Props\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      id: \"frontmattertitle\",\n      children: frontmatter.title\n    }), \"\\n\", _jsx(Lede, {\n      children: _jsx(_components.p, {\n        children: \"Video thumbnails are a clickable placeholder image. When clicked, it opens a video player within a modal or full screen.\"\n      })\n    }), \"\\n\", _jsx(Examples, {}), \"\\n\", _jsx(Props, {\n      componentName: frontmatter.title\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"best-practices\",\n      children: \"Best practices\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Video thumbnails should:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Be used with a media card\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Use an image that communicates the subject of the video\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Include a video timestamp\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Capture an image from the video to give a preview of the video content\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Be cropped to a 16:9 aspect ratio\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Be centered on the subject and avoid cropping of important details, like a person’s head\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h2, {\n      id: \"required-components\",\n      children: \"Required components\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"The video thumbnail should be wrapped in the \", _jsx(_components.a, {\n          href: \"https://polaris.shopify.com/components/media-card\",\n          children: \"media card\"\n        }), \" component.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h2, {\n      id: \"related-components\",\n      children: \"Related components\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"To present a small visual anchor for an object, \", _jsx(_components.a, {\n          href: \"https://polaris.shopify.com/components/thumbnail\",\n          children: \"use the thumbnail component\"\n        })]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h2, {\n      id: \"accessibility\",\n      children: \"Accessibility\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Images included in video thumbnails are implemented as decorative background images so that they’re skipped by screen readers.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The play button is keyboard accessible and the \", _jsx(_components.code, {\n        children: \"aria-label\"\n      }), \" includes a timestamp when the \", _jsx(_components.code, {\n        children: \"videoLength\"\n      }), \" prop is set. For example, an 80 second video reads as “Play video of length 1 minute and 20 seconds”. If no \", _jsx(_components.code, {\n        children: \"videoLength\"\n      }), \" prop is provided, the default label reads “Play video”.\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"title":"Video thumbnail","shortDescription":"A clickable placeholder image that opens a video player within a modal or full screen when clicked.","category":"Images and icons","keywords":["video","VideoThumbnail","updates","new features","video thumbnail","feature thumbnail","education","contextual learning system"],"examples":[{"fileName":"video-thumbnail-default.tsx","title":"Default","description":"Use as a play button for a video player within a media card."},{"fileName":"video-thumbnail-with-progress.tsx","title":"With progress","description":"Use to indicate the video’s play progress in relation to its duration."}],"previewImg":"/images/components/images-and-icons/video-thumbnail.png"},"scope":{"__remarkNextMdxImporter":{}}},"examples":[{"fileName":"video-thumbnail-default.tsx","title":"Default","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Use as a play button for a video player within a media card.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {MediaCard, VideoThumbnail} from '@shopify/polaris';\nimport React from 'react';\n\nfunction VideoThumbnailExample() {\n  return (\n    <MediaCard\n      title=\"Turn your side-project into a business\"\n      primaryAction={{\n        content: 'Learn more',\n        onAction: () => {},\n      }}\n      description={`In this course, you’ll learn how the Kular family turned their mom’s recipe book into a global business.`}\n      popoverActions={[{content: 'Dismiss', onAction: () => {}}]}\n    >\n      <VideoThumbnail\n        videoLength={80}\n        thumbnailUrl=\"https://burst.shopifycdn.com/photos/business-woman-smiling-in-office.jpg?width=1850\"\n        onClick={() => console.log('clicked')}\n      />\n    </MediaCard>\n  );\n}\n\n"},{"fileName":"video-thumbnail-with-progress.tsx","title":"With progress","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Use to indicate the video’s play progress in relation to its duration.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {MediaCard, VideoThumbnail} from '@shopify/polaris';\nimport React from 'react';\n\nfunction VideoThumbnailExample() {\n  return (\n    <MediaCard\n      title=\"Turn your side-project into a business\"\n      primaryAction={{\n        content: 'Learn more',\n        onAction: () => {},\n      }}\n      description={`In this course, you’ll learn how the Kular family turned their mom’s recipe book into a global business.`}\n      popoverActions={[{content: 'Dismiss', onAction: () => {}}]}\n    >\n      <VideoThumbnail\n        videoLength={80}\n        videoProgress={45}\n        showVideoProgress\n        thumbnailUrl=\"https://burst.shopifycdn.com/photos/business-woman-smiling-in-office.jpg?width=1850\"\n        onClick={() => console.log('clicked')}\n      />\n    </MediaCard>\n  );\n}\n\n"}],"seoDescription":"Video thumbnails are a clickable placeholder image. When clicked, it opens a video player within a modal or full screen.","type":{"VideoThumbnailProps":{"filePath":"polaris-react/src/components/VideoThumbnail/VideoThumbnail.tsx","name":"VideoThumbnailProps","description":"","members":[{"filePath":"polaris-react/src/components/VideoThumbnail/VideoThumbnail.tsx","syntaxKind":"PropertySignature","name":"thumbnailUrl","value":"string","description":"URL source for thumbnail image."},{"filePath":"polaris-react/src/components/VideoThumbnail/VideoThumbnail.tsx","syntaxKind":"PropertySignature","name":"videoLength","value":"number","description":"Length of video in seconds.","isOptional":true,"defaultValue":"0"},{"filePath":"polaris-react/src/components/VideoThumbnail/VideoThumbnail.tsx","syntaxKind":"PropertySignature","name":"videoProgress","value":"number","description":"Video progress in seconds. Displays a progress bar at the bottom of the thumbnail. Only renders when videoLength is also set.","isOptional":true,"defaultValue":"0"},{"filePath":"polaris-react/src/components/VideoThumbnail/VideoThumbnail.tsx","syntaxKind":"PropertySignature","name":"showVideoProgress","value":"boolean","description":"Indicate whether to allow video progress to be displayed","isOptional":true,"defaultValue":"false"},{"filePath":"polaris-react/src/components/VideoThumbnail/VideoThumbnail.tsx","syntaxKind":"PropertySignature","name":"accessibilityLabel","value":"string","description":"Custom ARIA label for play button.","isOptional":true,"defaultValue":"'Play video of length {human readable duration}'"},{"filePath":"polaris-react/src/components/VideoThumbnail/VideoThumbnail.tsx","syntaxKind":"MethodSignature","name":"onClick","value":"() => void","description":"Callback on click or keypress of thumbnail. Use to trigger render of the video player in your chosen format, for example within a modal or fullscreen container."},{"filePath":"polaris-react/src/components/VideoThumbnail/VideoThumbnail.tsx","syntaxKind":"MethodSignature","name":"onBeforeStartPlaying","value":"() => void","description":"Callback on mouse enter, focus, or touch start of thumbnail. Use to trigger video preload.","isOptional":true}],"value":"export interface VideoThumbnailProps {\n  /** URL source for thumbnail image. */\n  thumbnailUrl: string;\n  /**\n   * Length of video in seconds.\n   * @default 0\n   */\n  videoLength?: number;\n  /**\n   * Video progress in seconds. Displays a progress bar at the bottom of the thumbnail. Only renders when videoLength is also set.\n   * @default 0\n   */\n  videoProgress?: number;\n  /**\n   * Indicate whether to allow video progress to be displayed\n   * @default false\n   */\n  showVideoProgress?: boolean;\n  /** Custom ARIA label for play button.\n   * @default 'Play video of length {human readable duration}'\n   */\n  accessibilityLabel?: string;\n  /** Callback on click or keypress of thumbnail. Use to trigger render of the video player in your chosen format, for example within a modal or fullscreen container. */\n  onClick(): void;\n  /** Callback on mouse enter, focus, or touch start of thumbnail. Use to trigger video preload. */\n  onBeforeStartPlaying?(): void;\n}"}},"editPageLinkPath":"polaris.shopify.com/content/components/images-and-icons/video-thumbnail.mdx"},"__N_SSG":true}