{"pageProps":{"mdx":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    h2: \"h2\",\n    ul: \"ul\",\n    li: \"li\",\n    hr: \"hr\",\n    h3: \"h3\",\n    h4: \"h4\",\n    a: \"a\"\n  }, _provideComponents(), props.components), {Lede, Examples, Props, DoDont} = _components;\n  if (!DoDont) _missingMdxReference(\"DoDont\", true);\n  if (!Examples) _missingMdxReference(\"Examples\", true);\n  if (!Lede) _missingMdxReference(\"Lede\", true);\n  if (!Props) _missingMdxReference(\"Props\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      id: \"frontmattertitle\",\n      children: frontmatter.title\n    }), \"\\n\", _jsx(Lede, {\n      children: _jsx(_components.p, {\n        children: \"Tooltips are floating labels that briefly explain the function of a user interface element. They can be triggered when merchants hover, focus, tap, or click.\"\n      })\n    }), \"\\n\", _jsx(Examples, {}), \"\\n\", _jsx(Props, {\n      componentName: frontmatter.title\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"best-practices\",\n      children: \"Best practices\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Tooltips should:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Provide useful, additional information or clarification.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Succinctly describe or expand on the element they point to.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Be provided for icon-only buttons or a button with an associated keyboard shortcut.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Not be used to communicate critical information, including errors in forms or other interaction feedback.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Not contain any links or buttons.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Be used sparingly. If you’re building something that requires a lot of tooltips, work on clarifying the design and the language in the experience.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h2, {\n      id: \"content-guidelines\",\n      children: \"Content guidelines\"\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"basic-tooltips\",\n      children: \"Basic tooltips\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Tooltips should:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Be written in sentence case\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Be concise and scannable\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Not be used to communicate error messages or important account information\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(DoDont, {\n      children: [_jsx(_components.h4, {\n        id: \"do\",\n        children: \"Do\"\n      }), _jsx(_components.p, {\n        children: \"Post reach is the number of people who have seen your post in their News Feed.\"\n      }), _jsx(_components.h4, {\n        id: \"dont\",\n        children: \"Don’t\"\n      }), _jsx(_components.p, {\n        children: \"To continue using Shopify, this amount must be paid immediately.\"\n      })]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h2, {\n      id: \"related-components\",\n      children: \"Related components\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"To make helpful content more visible to merchants, use the help text portions of form components such as \", _jsx(_components.a, {\n          href: \"https://polaris.shopify.com/components/selection-and-input/text-field\",\n          children: \"text fields\"\n        }), \", \", _jsx(_components.a, {\n          href: \"https://polaris.shopify.com/components/navigation/footer-help\",\n          children: \"footer help\"\n        }), \", or \", _jsx(_components.a, {\n          href: \"https://polaris.shopify.com/components/link\",\n          children: \"an inline link to help\"\n        })]\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"title":"Tooltip","category":"Overlays","keywords":["info","help","popover","infotip","hint","small popover","hover","tap"],"examples":[{"fileName":"tooltip-default.tsx","title":"Default","description":"Use only when necessary to provide an explanation for an interface element."},{"fileName":"tooltip-visible-only-with-child-interaction.tsx","title":"Visible only with child interaction","description":"Use when the tooltip overlays interactive elements when active, for example a form input. The `dismissOnMouseOut` prop prevents the tooltip from remaining active when mouse hover or focus leaves its `children` and enters the tooltip's content."},{"fileName":"tooltip-with-persistence-on-click.tsx","title":"With persistence on click","description":"Use to present a tooltip that remains open if activated by click or keypress."},{"fileName":"tooltip-with-suffix.tsx","title":"With suffix","description":"Use when merchants benefit from information supplemental to the tooltip content. For example, to present a keyboard shortcut beside the content of a tooltip that describes an icon button."}],"previewImg":"/images/components/overlays/tooltip.png"},"scope":{"__remarkNextMdxImporter":{}}},"examples":[{"fileName":"tooltip-default.tsx","title":"Default","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Use only when necessary to provide an explanation for an interface element.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {Tooltip, Text} from '@shopify/polaris';\nimport React from 'react';\n\nfunction TooltipExample() {\n  return (\n    <div style={{padding: '75px 0'}}>\n      <Tooltip active content=\"This order has shipping labels.\">\n        <Text fontWeight=\"bold\" as=\"span\">\n          Order #1001\n        </Text>\n      </Tooltip>\n    </div>\n  );\n}\n\n"},{"fileName":"tooltip-visible-only-with-child-interaction.tsx","title":"Visible only with child interaction","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_components.p, {\n    children: [\"Use when the tooltip overlays interactive elements when active, for example a form input. The \", _jsx(_components.code, {\n      children: \"dismissOnMouseOut\"\n    }), \" prop prevents the tooltip from remaining active when mouse hover or focus leaves its \", _jsx(_components.code, {\n      children: \"children\"\n    }), \" and enters the tooltip's content.\"]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {ButtonGroup, Tooltip, Button, TextField} from '@shopify/polaris';\nimport React from 'react';\n\nfunction TooltipExample() {\n  return (\n    <div style={{width: '200px'}}>\n      <ButtonGroup variant=\"segmented\" fullWidth>\n        <Tooltip content=\"Bold\" dismissOnMouseOut>\n          <Button>B</Button>\n        </Tooltip>\n        <Tooltip content=\"Italic\" dismissOnMouseOut>\n          <Button>I</Button>\n        </Tooltip>\n        <Tooltip content=\"Underline\" dismissOnMouseOut>\n          <Button>U</Button>\n        </Tooltip>\n        <Tooltip content=\"Strikethrough\" dismissOnMouseOut>\n          <Button>S</Button>\n        </Tooltip>\n      </ButtonGroup>\n      <TextField\n        label=\"Product title\"\n        autoComplete=\"off\"\n        labelHidden\n        multiline\n      />\n    </div>\n  );\n}\n\n"},{"fileName":"tooltip-with-persistence-on-click.tsx","title":"With persistence on click","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Use to present a tooltip that remains open if activated by click or keypress.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {Tooltip, Text} from '@shopify/polaris';\nimport React from 'react';\n\nfunction TooltipExample() {\n  return (\n    <div style={{padding: '75px 0'}}>\n      <Tooltip persistOnClick active content=\"This order has shipping labels.\">\n        <Text fontWeight=\"bold\" as=\"span\">\n          Order #1001\n        </Text>\n      </Tooltip>\n    </div>\n  );\n}\n\n"},{"fileName":"tooltip-with-suffix.tsx","title":"With suffix","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Use when merchants benefit from information supplemental to the tooltip content. For example, to present a keyboard shortcut beside the content of a tooltip that describes an icon button.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {Tooltip, Button, InlineStack, Text} from '@shopify/polaris';\nimport React from 'react';\n\nfunction TooltipExample() {\n  return (\n    <div style={{padding: '75px 0'}}>\n      <Tooltip\n        content={\n          <InlineStack gap=\"200\">\n            Bold\n            <Text as=\"span\" variant=\"bodyMd\" tone=\"subdued\">\n              ⌘B\n            </Text>\n          </InlineStack>\n        }\n      >\n        <Button>B</Button>\n      </Tooltip>\n    </div>\n  );\n}\n\n"}],"seoDescription":"Tooltips are floating labels that briefly explain the function of a user interface element. They can be triggered when merchants hover, focus, tap, or click.","type":{"TooltipProps":{"filePath":"polaris-react/src/components/Tooltip/Tooltip.tsx","name":"TooltipProps","description":"","members":[{"filePath":"polaris-react/src/components/Tooltip/Tooltip.tsx","syntaxKind":"PropertySignature","name":"children","value":"React.ReactNode","description":"The element that will activate to tooltip","isOptional":true},{"filePath":"polaris-react/src/components/Tooltip/Tooltip.tsx","syntaxKind":"PropertySignature","name":"content","value":"React.ReactNode","description":"The content to display within the tooltip"},{"filePath":"polaris-react/src/components/Tooltip/Tooltip.tsx","syntaxKind":"PropertySignature","name":"active","value":"boolean","description":"Toggle whether the tooltip is visible","isOptional":true},{"filePath":"polaris-react/src/components/Tooltip/Tooltip.tsx","syntaxKind":"PropertySignature","name":"hoverDelay","value":"number","description":"Delay in milliseconds while hovering over an element before the tooltip is visible","isOptional":true},{"filePath":"polaris-react/src/components/Tooltip/Tooltip.tsx","syntaxKind":"PropertySignature","name":"dismissOnMouseOut","value":"boolean","description":"Dismiss tooltip when not interacting with its children","isOptional":true},{"filePath":"polaris-react/src/components/Tooltip/Tooltip.tsx","syntaxKind":"PropertySignature","name":"preferredPosition","value":"PreferredPosition","description":"The direction the tooltip tries to display","isOptional":true,"defaultValue":"'above'"},{"filePath":"polaris-react/src/components/Tooltip/Tooltip.tsx","syntaxKind":"PropertySignature","name":"activatorWrapper","value":"string","description":"The element type to wrap the activator in","isOptional":true,"defaultValue":"'span'"},{"filePath":"polaris-react/src/components/Tooltip/Tooltip.tsx","syntaxKind":"PropertySignature","name":"accessibilityLabel","value":"string","description":"Visually hidden text for screen readers","isOptional":true},{"filePath":"polaris-react/src/components/Tooltip/Tooltip.tsx","syntaxKind":"PropertySignature","name":"width","value":"Width","description":"Width of content","isOptional":true,"defaultValue":"'default'"},{"filePath":"polaris-react/src/components/Tooltip/Tooltip.tsx","syntaxKind":"PropertySignature","name":"padding","value":"Padding","description":"Padding of content","isOptional":true,"defaultValue":"'default'"},{"filePath":"polaris-react/src/components/Tooltip/Tooltip.tsx","syntaxKind":"PropertySignature","name":"borderRadius","value":"BorderRadius","description":"Border radius of the tooltip","isOptional":true,"defaultValue":"'200'"},{"filePath":"polaris-react/src/components/Tooltip/Tooltip.tsx","syntaxKind":"PropertySignature","name":"zIndexOverride","value":"number","description":"Override on the default z-index of 400","isOptional":true},{"filePath":"polaris-react/src/components/Tooltip/Tooltip.tsx","syntaxKind":"PropertySignature","name":"hasUnderline","value":"boolean","description":"Whether to render a dotted underline underneath the tooltip's activator","isOptional":true},{"filePath":"polaris-react/src/components/Tooltip/Tooltip.tsx","syntaxKind":"PropertySignature","name":"persistOnClick","value":"boolean","description":"Whether the tooltip's content remains open after clicking the activator","isOptional":true},{"filePath":"polaris-react/src/components/Tooltip/Tooltip.tsx","syntaxKind":"MethodSignature","name":"onOpen","value":"() => void","description":"","isOptional":true},{"filePath":"polaris-react/src/components/Tooltip/Tooltip.tsx","syntaxKind":"MethodSignature","name":"onClose","value":"() => void","description":"","isOptional":true}],"value":"export interface TooltipProps {\n  /** The element that will activate to tooltip */\n  children?: React.ReactNode;\n  /** The content to display within the tooltip */\n  content: React.ReactNode;\n  /** Toggle whether the tooltip is visible */\n  active?: boolean;\n  /** Delay in milliseconds while hovering over an element before the tooltip is visible */\n  hoverDelay?: number;\n  /** Dismiss tooltip when not interacting with its children */\n  dismissOnMouseOut?: TooltipOverlayProps['preventInteraction'];\n  /**\n   * The direction the tooltip tries to display\n   * @default 'above'\n   */\n  preferredPosition?: TooltipOverlayProps['preferredPosition'];\n  /**\n   * The element type to wrap the activator in\n   * @default 'span'\n   */\n  activatorWrapper?: string;\n  /** Visually hidden text for screen readers */\n  accessibilityLabel?: string;\n  /**\n   * Width of content\n   * @default 'default'\n   */\n  width?: Width;\n  /**\n   * Padding of content\n   * @default 'default'\n   */\n  padding?: Padding;\n  /**\n   * Border radius of the tooltip\n   * @default '200'\n   */\n  borderRadius?: BorderRadius;\n  /** Override on the default z-index of 400 */\n  zIndexOverride?: number;\n  /** Whether to render a dotted underline underneath the tooltip's activator */\n  hasUnderline?: boolean;\n  /** Whether the tooltip's content remains open after clicking the activator */\n  persistOnClick?: boolean;\n  /* Callback fired when the tooltip is activated */\n  onOpen?(): void;\n  /* Callback fired when the tooltip is dismissed */\n  onClose?(): void;\n}"},"PreferredPosition":{"filePath":"polaris-react/src/components/PositionedOverlay/utilities/math.ts","syntaxKind":"TypeAliasDeclaration","name":"PreferredPosition","value":"'above' | 'below' | 'mostSpace'","description":""},"Width":{"filePath":"polaris-react/src/components/Tooltip/Tooltip.tsx","syntaxKind":"TypeAliasDeclaration","name":"Width","value":"'default' | 'wide'","description":""},"Padding":{"filePath":"polaris-react/src/components/Tooltip/Tooltip.tsx","syntaxKind":"TypeAliasDeclaration","name":"Padding","value":"'default' | Extract<SpaceScale, '400'>","description":""},"BorderRadius":{"filePath":"polaris-react/src/components/Tooltip/Tooltip.tsx","syntaxKind":"TypeAliasDeclaration","name":"BorderRadius","value":"\"100\" | \"200\"","description":""}},"editPageLinkPath":"polaris.shopify.com/content/components/overlays/tooltip.mdx"},"__N_SSG":true}