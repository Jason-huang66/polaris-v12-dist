{"pageProps":{"mdx":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\n/*Filled vs outlined*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    h2: \"h2\",\n    img: \"img\",\n    p: \"p\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components), {Lede, Subnav, Row, Column} = _components;\n  if (!Column) _missingMdxReference(\"Column\", true);\n  if (!Lede) _missingMdxReference(\"Lede\", true);\n  if (!Row) _missingMdxReference(\"Row\", true);\n  if (!Subnav) _missingMdxReference(\"Subnav\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.h1, {\n      id: \"icons--frontmattertitle\",\n      children: [\"Icons → \", frontmatter.title]\n    }), \"\\n\", _jsx(Lede, {\n      children: frontmatter.description\n    }), \"\\n\", _jsx(Subnav, {}), \"\\n\", _jsx(_components.h2, {\n      id: \"icon-layout\",\n      children: \"Icon layout\"\n    }), \"\\n\", _jsxs(Row, {\n      variant: \"1-1\",\n      children: [_jsxs(Column, {\n        variant: \"directive\",\n        children: [_jsx(_components.img, {\n          src: \"/images/design/icons/icons-creating-layout-1@2x.png\",\n          alt: \"A 20 pixels square grid with an icon in a 14 px square.\"\n        }), _jsx(_components.p, {\n          children: \"The icon container is 20 × 20 px. The content of an icon should be\\nconfined within a safe space of 14 × 14 px.\"\n        })]\n      }), _jsxs(Column, {\n        variant: \"directive\",\n        children: [_jsx(_components.img, {\n          src: \"/images/design/icons/icons-creating-layout-2@2x.png\",\n          alt: \"A 20 pixels square grid with an icon in a 14 pixels square, with an element sticking out slightly.\"\n        }), _jsx(_components.p, {\n          children: \"Exceptionally, parts of an icon can go beyond the 14 × 14 px safe space, but should leave a space of at least 1 px from the edges of the icon container.\"\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"keylines\",\n      children: \"Keylines\"\n    }), \"\\n\", _jsxs(Row, {\n      variant: \"1-1\",\n      children: [_jsxs(Column, {\n        variant: \"directive\",\n        children: [_jsx(_components.img, {\n          src: \"/images/design/icons/icons-creating-keylines-1@2x.png\",\n          alt: \"Four icons that fit inside the following grids: 13x13 pixels square, 14x14 pixels circle, 14x12 pixels rectangles, horizontal and vertical.\"\n        }), _jsx(_components.p, {\n          children: \"The overall shape of an icon can vary from a circle to a square, or from a tall rectangle to a wide one. Always start with the following keylines, so that all icons have the same visual weight.\"\n        })]\n      }), _jsxs(Column, {\n        variant: \"directive\",\n        children: [_jsx(_components.img, {\n          src: \"/images/design/icons/icons-creating-keylines-2@2x.png\",\n          alt: \"Four icons that stick our slightly from the the following grids: 13x13 pixels square, 14x14 pixels circle, 14x12 pixels rectangles, horizontal and vertical.\"\n        }), _jsx(_components.p, {\n          children: \"These guidelines are a starting point, not a hard constraint. If it makes the concept stronger or keeps the icon optically aligned, it’s ok to deviate.\"\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"general-rules\",\n      children: \"General Rules\"\n    }), \"\\n\", _jsxs(Row, {\n      variant: \"1-1\",\n      children: [_jsxs(Column, {\n        variant: \"do\",\n        children: [_jsx(_components.img, {\n          src: \"/images/design/icons/icons-creating-rules-1@2x.png\",\n          alt: \"An archive box and a building represented in two dimensions. \"\n        }), _jsx(_components.p, {\n          children: \"Ensure that icons are two-dimensional, and objects face forward.\"\n        })]\n      }), _jsxs(Column, {\n        variant: \"dont\",\n        children: [_jsx(_components.img, {\n          src: \"/images/design/icons/icons-creating-rules-2@2x.png\",\n          alt: \"An archive box and a building represented with a perspective. \"\n        }), _jsx(_components.p, {\n          children: \"Use perspective and 3D objects\"\n        })]\n      })]\n    }), \"\\n\", _jsxs(Row, {\n      variant: \"1-1\",\n      children: [_jsxs(Column, {\n        variant: \"caution\",\n        children: [_jsx(_components.img, {\n          src: \"/images/design/icons/icons-creating-rules-3@2x.png\",\n          alt: \"A package and a globe represented with slight hints of a third dimension.\"\n        }), _jsx(_components.p, {\n          children: \"Subtle hints of a third dimension are acceptable when necessary for\\nconceptual clarity.\"\n        })]\n      }), _jsxs(Column, {\n        variant: \"do\",\n        children: [_jsx(_components.img, {\n          src: \"/images/design/icons/icons-creating-rules-4@2x.png\",\n          alt: \"A presentation board icon centered in a 20 pixel square.\"\n        }), _jsx(_components.p, {\n          children: \"Center icons in their container. Adjust optically if needed.\"\n        })]\n      })]\n    }), \"\\n\", _jsxs(Row, {\n      variant: \"1-1\",\n      children: [_jsxs(Column, {\n        variant: \"do\",\n        children: [_jsx(_components.img, {\n          src: \"/images/design/icons/icons-creating-rules-5@2x.png\",\n          alt: \"Three simple icons made with simple geometric shapes representing a smile, a scroll and a page\"\n        }), _jsx(_components.p, {\n          children: \"Use simple geometric shapes, angles, and rounded corners.\"\n        })]\n      }), _jsxs(Column, {\n        variant: \"dont\",\n        children: [_jsx(_components.img, {\n          src: \"/images/design/icons/icons-creating-rules-6@2x.png\",\n          alt: \"Three icons made with organic shapes and small details representing a pin, a bell and a christmas tree.\"\n        }), _jsx(_components.p, {\n          children: \"Use excessive details or organic shapes.\"\n        })]\n      })]\n    }), \"\\n\", _jsxs(Row, {\n      variant: \"1-1\",\n      children: [_jsxs(Column, {\n        variant: \"do\",\n        children: [_jsx(_components.img, {\n          src: \"/images/design/icons/icons-creating-rules-7@2x.png\",\n          alt: \"A shopping cart with solid speed lines behind. \"\n        }), _jsx(_components.p, {\n          children: \"Use a consistent visual style, stroke weight and only one color.\"\n        })]\n      }), _jsxs(Column, {\n        variant: \"dont\",\n        children: [_jsx(_components.img, {\n          src: \"/images/design/icons/icons-creating-rules-8@2x.png\",\n          alt: \"A shopping cart with semi-transparent speed lines behind.\"\n        }), _jsx(_components.p, {\n          children: \"Use transparency.\"\n        })]\n      })]\n    }), \"\\n\", \"\\n\", _jsx(_components.h2, {\n      id: \"filled-vs-outlined\",\n      children: \"Filled vs Outlined\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Outlined icons are the default. Filled icons are reserved for navigation only.\"\n    }), \"\\n\", _jsx(Row, {\n      variant: \"1\",\n      children: _jsx(_components.img, {\n        src: \"/images/design/icons/icons-creating-filled-vs-outline-1@2x.png\",\n        alt: \"Shopify’s admin interface with search open, showing a few results that use\\ndifferent icons like a person, a tag, or an inbox, to differentiate the types\\nof results.\"\n      })\n    }), \"\\n\", _jsxs(Row, {\n      variant: \"1-1-1\",\n      children: [_jsxs(Column, {\n        variant: \"do\",\n        children: [_jsx(_components.img, {\n          src: \"/images/design/icons/icons-creating-filled-vs-outline-2@2x.png\",\n          alt: \"A settings navigation menu with icons differentiating each item in the menu. All icons are filled expect for the one selected that is outlined.\"\n        }), _jsx(_components.p, {\n          children: \"Use filled icons as navigation.\"\n        })]\n      }), _jsxs(Column, {\n        variant: \"do\",\n        children: [_jsx(_components.img, {\n          src: \"/images/design/icons/icons-creating-filled-vs-outline-3@2x.png\",\n          alt: \"A filled icons with a pin.\"\n        }), _jsx(_components.p, {\n          children: \"Use filled icons for semi-permanent selected states, like pinning an app.\"\n        })]\n      }), _jsxs(Column, {\n        variant: \"dont\",\n        children: [_jsx(_components.img, {\n          src: \"/images/design/icons/icons-creating-filled-vs-outline-4@2x.png\",\n          alt: \"A filled icon within a blue badge.\"\n        }), _jsx(_components.p, {\n          children: \"Use filled icons to create emphasis.\"\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"designing-outlined-icons\",\n      children: \"Designing outlined icons\"\n    }), \"\\n\", _jsxs(Row, {\n      variant: \"1-1\",\n      children: [_jsxs(Column, {\n        variant: \"directive\",\n        children: [_jsx(_components.img, {\n          src: \"/images/design/icons/icons-creating-outline-1@2x.png\",\n          alt: \"An inbox icon where the outline stroke is highlighted.\"\n        }), _jsx(_components.p, {\n          children: \"Stroke weight is 1.5px\"\n        })]\n      }), _jsxs(Column, {\n        variant: \"directive\",\n        children: [_jsx(_components.img, {\n          src: \"/images/design/icons/icons-creating-outline-2@2x.png\",\n          alt: \"An inbox icon where the alignment with the pixel grid is highlighted. \"\n        }), _jsx(_components.p, {\n          children: \"Since the stroke has half a pixel, one side of the stroke should always be aligned with the pixel grid.\"\n        })]\n      })]\n    }), \"\\n\", _jsxs(Row, {\n      variant: \"1-1\",\n      children: [_jsxs(Column, {\n        variant: \"directive\",\n        children: [_jsx(_components.img, {\n          src: \"/images/design/icons/icons-creating-outline-3@2x.png\",\n          alt: \"A clock icon highlighting the alignment with 0.25 pixels increments.\"\n        }), _jsx(_components.p, {\n          children: \"Exceptions are allowed for optical adjustments, as long as they fall on 0.25 px increments.\"\n        })]\n      }), _jsxs(Column, {\n        variant: \"directive\",\n        children: [_jsx(_components.img, {\n          src: \"/images/design/icons/icons-creating-outline-4@2x.png\",\n          alt: \"A Shopping card icons with the stroke terminals highlighted.\"\n        }), _jsx(_components.p, {\n          children: \"Terminals are round, even when a shape cuts out into another.\"\n        })]\n      })]\n    }), \"\\n\", _jsxs(Row, {\n      variant: \"1-1-1\",\n      children: [_jsxs(Column, {\n        variant: \"directive\",\n        children: [_jsx(_components.img, {\n          src: \"/images/design/icons/icons-creating-outline-5@2x.png\",\n          alt: \"A calendar, an inbox and a shop icon with the corner radius highlighted. 3 pixels for the calendar, 2 pixels for the inbox and 1 pixel for the inbox.\"\n        }), _jsx(_components.p, {\n          children: \"Corner radius can go from 1 px to 3 px, depending on the object roundness. Joints and terminals must be rounded. Sharp corners are not allowed, except for intersections and cutouts.\"\n        })]\n      }), _jsxs(Column, {\n        variant: \"directive\",\n        children: [_jsx(_components.img, {\n          src: \"/images/design/icons/icons-creating-outline-6@2x.png\",\n          alt: \"Six outline icons with small filled object highlighted, like a credit card that is made out of outlines and an icon that is filled.\"\n        }), _jsx(_components.p, {\n          children: \"Filled shapes can be used, only in really small objects, like in the dot of an exclamation point.\"\n        })]\n      }), _jsxs(Column, {\n        variant: \"directive\",\n        children: [_jsx(_components.img, {\n          src: \"/images/design/icons/icons-creating-outline-7@2x.png\",\n          alt: \"An icons with a hand pressing a button, where the gaps between the button and the hand. \"\n        }), _jsx(_components.p, {\n          children: \"The minimum gap between strokes should never be less than 1px.\"\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"designing-filled-icons\",\n      children: \"Designing filled icons\"\n    }), \"\\n\", _jsxs(Row, {\n      variant: \"1-1\",\n      children: [_jsxs(Column, {\n        variant: \"directive\",\n        children: [_jsx(_components.img, {\n          src: \"/images/design/icons/icons-creating-filled-1@2x.png\",\n          alt: \"A filled icon overlapping an outlined icon.\"\n        }), _jsx(_components.p, {\n          children: \"Filled icons should align closely to their outline pairs. They don’t need to be a pixel perfect match, but they must have a similar visual weight, and the transition from one to the other must feel smooth.\"\n        })]\n      }), _jsxs(Column, {\n        variant: \"directive\",\n        children: [_jsx(_components.img, {\n          src: \"/images/design/icons/icons-creating-filled-2@2x.png\",\n          alt: \"A tag, a person and a flower icons made of simple shapes.\"\n        }), _jsx(_components.p, {\n          children: \"Icons are made out of contiguous shapes. Ideally one, but it’s possible to go up to three when required for clarity.\"\n        })]\n      })]\n    }), \"\\n\", _jsxs(Row, {\n      variant: \"1-1\",\n      children: [_jsxs(Column, {\n        variant: \"directive\",\n        children: [_jsx(_components.img, {\n          src: \"/images/design/icons/icons-creating-filled-3@2x.png\",\n          alt: \"Two icons with the stroke weight being highlighted.\"\n        }), _jsx(_components.p, {\n          children: \"Stroke weight is 1.5 px, but is reduced to 1.25 px when used inside a shape as a cut-out. Shapes must align with the pixel grid.\"\n        }), _jsx(_components.p, {\n          children: \"Exceptions are allowed for optical adjustments, as long as they fall on 0.25 px increments.\"\n        })]\n      }), _jsxs(Column, {\n        variant: \"directive\",\n        children: [_jsx(_components.img, {\n          src: \"/images/design/icons/icons-creating-filled-4@2x.png\",\n          alt: \"A shopping cart icon with the stroke terminals being highlighted, and a wallet icon with cutouts and intersection angles highlighted.\"\n        }), _jsx(_components.p, {\n          children: \"Terminals are round.\"\n        }), _jsx(_components.p, {\n          children: \"Corner radius can vary from 1 px to 3 px, depending on the object's roundness. Terminals and joints are rounded. Sharp corners are not allowed, except in intersections and knockouts.\"\n        })]\n      })]\n    }), \"\\n\", _jsxs(Row, {\n      variant: \"1-1\",\n      children: [_jsxs(Column, {\n        variant: \"directive\",\n        children: [_jsx(_components.img, {\n          src: \"/images/design/icons/icons-creating-filled-5@2x.png\",\n          alt: \"Two arrow icons with the stroke being highlighted.\"\n        }), _jsx(_components.p, {\n          children: \"If it’s not possible to fill the outline icon, a 2px stroke can be used as a filled version.\"\n        })]\n      }), _jsxs(Column, {\n        variant: \"directive\",\n        children: [_jsx(_components.img, {\n          src: \"/images/design/icons/icons-creating-filled-6@2x.png\",\n          alt: \"An icon with a person and a key, where the gap between the two elements is highlighted.\"\n        }), _jsx(_components.p, {\n          children: \"The minimum gap between strokes should never be less than 1px.\"\n        })]\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"title":"Creating icons","description":"Icons enhance an experience by providing intuitive and efficient navigation, conveying information concisely, and making it more visually appealing.","icon":"EditMinor","keywords":["icons","icon design","user interface design","visual navigation","consistent icon style","universally recognized symbols","icon creation","icon layout","2d icons","icon stroke weight","filled icons","outlined icons","icon navigation","iconography","icon visual weight","icon design guidelines","icon use in interface","icon and typography","icon size and weight","icon clarity","icon meaning","icon aesthetics","icon functionality","icon grid alignment","icon visual harmony."]},"scope":{"__remarkNextMdxImporter":{}}},"seoDescription":"Icons → ","editPageLinkPath":"/polaris.shopify.com/content/design/icons/creating-icons.mdx","isContentPage":true,"showTOC":false,"collapsibleTOC":false},"__N_SSG":true}