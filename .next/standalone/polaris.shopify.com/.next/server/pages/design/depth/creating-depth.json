{"pageProps":{"mdx":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    img: \"img\",\n    h2: \"h2\",\n    h4: \"h4\",\n    a: \"a\"\n  }, _provideComponents(), props.components), {Subnav, Stack, Card, Grid, Box, DoDont, Do, Dont, DirectiveCard} = _components;\n  if (!Box) _missingMdxReference(\"Box\", true);\n  if (!Card) _missingMdxReference(\"Card\", true);\n  if (!DirectiveCard) _missingMdxReference(\"DirectiveCard\", true);\n  if (!Do) _missingMdxReference(\"Do\", true);\n  if (!DoDont) _missingMdxReference(\"DoDont\", true);\n  if (!Dont) _missingMdxReference(\"Dont\", true);\n  if (!Grid) _missingMdxReference(\"Grid\", true);\n  if (!Grid.Cell) _missingMdxReference(\"Grid.Cell\", true);\n  if (!Stack) _missingMdxReference(\"Stack\", true);\n  if (!Subnav) _missingMdxReference(\"Subnav\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.h1, {\n      id: \"depth--frontmattertitle\",\n      children: [\"Depth → \", frontmatter.title]\n    }), \"\\n\", _jsx(Subnav, {}), \"\\n\", _jsxs(Stack, {\n      gap: \"800\",\n      children: [_jsx(Card, {\n        children: _jsxs(Grid, {\n          gap: \"400\",\n          areas: {\n            xs: ['a a a a a a', 'b b b b b b'],\n            lg: ['a a a a b b b b b b b b']\n          },\n          children: [_jsx(Grid.Cell, {\n            area: \"auto/a\",\n            children: _jsx(Box, {\n              padding: \"400\",\n              children: _jsx(_components.p, {\n                children: \"Use a combination of shadows and layering to create a sense of realism and hierarchy in the interface, guiding merchants' attention and indicating interactivity.\"\n              })\n            })\n          }), _jsx(Grid.Cell, {\n            area: \"auto/b\",\n            children: _jsx(_components.img, {\n              src: \"/images/design/depth/creating/depth-creating-1@2x.png\",\n              alt: \"A card with search results, overlaying the remaining interface.\"\n            })\n          })]\n        })\n      }), _jsx(Card, {\n        children: _jsxs(Grid, {\n          gap: \"400\",\n          areas: {\n            xs: ['a a a a a a ', 'b b b b b b'],\n            lg: ['a a a a b b b b b b b b']\n          },\n          children: [_jsx(Grid.Cell, {\n            area: \"a\",\n            children: _jsxs(Box, {\n              padding: \"400\",\n              children: [_jsx(_components.h2, {\n                id: \"shadows--bevels\",\n                children: \"Shadows & bevels\"\n              }), _jsx(_components.p, {\n                children: \"Shadows and bevels create the illusion that an element is raised above the rest of the interface, indicating that it's interactive or important.\"\n              })]\n            })\n          }), _jsx(Grid.Cell, {\n            area: \"b\",\n            children: _jsxs(Stack, {\n              gap: \"400\",\n              children: [_jsxs(DoDont, {\n                className: \"margin-considered-harmful\",\n                children: [_jsx(_components.h4, {\n                  id: \"do\",\n                  children: \"Do\"\n                }), _jsx(_components.img, {\n                  src: \"/images/design/depth/creating/depth-creating-2@2x.png\",\n                  alt: \"A piece of interface featuring a bevel effect on primary buttons and the main container.\"\n                }), _jsx(_components.p, {\n                  children: \"Use shadows and bevels to indicate important interactions. This will make buttons and other important interactive elements appear more tactile, obvious, and inviting to click.\"\n                }), _jsx(_components.h4, {\n                  id: \"dont\",\n                  children: \"Dont\"\n                }), _jsx(_components.img, {\n                  src: \"/images/design/depth/creating/depth-creating-3@2x.png\",\n                  alt: \"A table with a series of text fields and buttons with a notable bevel effect.\"\n                }), _jsx(_components.p, {\n                  children: \"Overuse shadows or bevels, as they will make the interface look cluttered and confusing. They’re meant to be used sparingly and consistently.\"\n                })]\n              }), _jsxs(Do, {\n                children: [_jsx(_components.img, {\n                  src: \"/images/design/depth/creating/depth-creating-4@2x.png\",\n                  alt: \"A series of cards with a consistent shadow effect.\"\n                }), _jsx(_components.p, {\n                  children: \"Use consistent shadow and bevel styles across your interface, to maintain visual harmony and make the interface feel more cohesive.\"\n                })]\n              }), _jsxs(Dont, {\n                children: [_jsx(_components.img, {\n                  src: \"/images/design/depth/creating/depth-creating-5@2x.png\",\n                  alt: \"Two cards with distinct shadows.\"\n                }), _jsx(_components.p, {\n                  children: \"Use different styles for similar elements. This can confuse merchants about the hierarchy and interactivity of the elements.\"\n                })]\n              })]\n            })\n          })]\n        })\n      }), _jsx(Card, {\n        children: _jsxs(Grid, {\n          gap: \"400\",\n          areas: {\n            xs: ['a a a a a a ', 'b b b b b b', 'c c c c c c'],\n            lg: ['a a a a b b b b c c c c']\n          },\n          children: [_jsx(Grid.Cell, {\n            area: \"a\",\n            children: _jsxs(Box, {\n              padding: \"400\",\n              children: [_jsx(_components.h2, {\n                id: \"lighting\",\n                children: \"Lighting\"\n              }), _jsx(_components.p, {\n                children: \"Lighting plays a crucial role in creating the illusion of depth. It reinforces interactivity and guides merchant's attention.\"\n              })]\n            })\n          }), _jsx(Grid.Cell, {\n            area: \"b\",\n            children: _jsxs(DirectiveCard, {\n              status: \"Do\",\n              children: [_jsx(_components.img, {\n                src: \"/images/design/depth/creating/depth-creating-6@2x.png\",\n                alt: \"Two buttons, where the one being pressed is darked than the other.\"\n              }), _jsx(_components.p, {\n                children: \"Decrease the brightness of an element when it’s being pushed down in the Z index. When a button is pressed, it goes down.\"\n              })]\n            })\n          }), _jsx(Grid.Cell, {\n            area: \"c\",\n            children: _jsxs(DirectiveCard, {\n              status: \"Do\",\n              children: [_jsx(_components.img, {\n                src: \"/images/design/depth/creating/depth-creating-7@2x.png\",\n                alt: \"A menu where the item selected featured a light background. \"\n              }), _jsx(_components.p, {\n                children: \"Increase the brightness of an element when it’s being pushed up in the Z index. When a page is active, it goes up.\"\n              })]\n            })\n          })]\n        })\n      }), _jsx(Card, {\n        children: _jsxs(Grid, {\n          gap: \"400\",\n          areas: {\n            xs: ['a a a a a a ', 'b b b b b b'],\n            lg: ['a a a a b b b b b b b b']\n          },\n          children: [_jsx(Grid.Cell, {\n            area: \"a\",\n            children: _jsxs(Box, {\n              padding: \"400\",\n              children: [_jsx(_components.h2, {\n                id: \"layering\",\n                children: \"Layering\"\n              }), _jsx(_components.p, {\n                children: \"Layering can be used to organize elements and create a sense of hierarchy. By placing elements on different layers, you can indicate which elements are in focus or interactive.\"\n              })]\n            })\n          }), _jsx(Grid.Cell, {\n            area: \"b\",\n            children: _jsxs(Stack, {\n              gap: \"400\",\n              children: [_jsxs(Do, {\n                children: [_jsx(_components.img, {\n                  src: \"/images/design/depth/creating/depth-creating-8@2x.png\",\n                  alt: \"A snapshot of Shopify’s admin page, with 4 level being highlighted. Menu (-1), Background (0) Card with metrics (1) Drop down menu (2)\"\n                }), _jsx(_components.p, {\n                  children: \"Use layering to organize the interface and guide merchant focus. Higher layers should be used for more important or interactive elements.\"\n                })]\n              }), _jsxs(Dont, {\n                children: [_jsx(_components.img, {\n                  src: \"/images/design/depth/creating/depth-creating-9@2x.png\",\n                  alt: \"A series of cards with distinct shadows.\"\n                }), _jsx(_components.p, {\n                  children: \"Use too many layers in one screen, as it can confuse merchants and make the interface difficult to navigate.\"\n                })]\n              }), _jsxs(DoDont, {\n                className: \"margin-considered-harmful\",\n                children: [_jsx(_components.h4, {\n                  id: \"do-1\",\n                  children: \"Do\"\n                }), _jsx(_components.img, {\n                  src: \"/images/design/depth/creating/depth-creating-10@2x.png\",\n                  alt: \"A card with tasks, where the task in view features a gray background.\"\n                }), _jsx(_components.p, {\n                  children: \"Keep most elements on the same layer to establish a visual baseline, and allow for purposeful use of layering, when necessary, to denote importance or interactivity.\"\n                }), _jsx(_components.h4, {\n                  id: \"dont-1\",\n                  children: \"Dont\"\n                }), _jsx(_components.img, {\n                  src: \"/images/design/depth/creating/depth-creating-11@2x.png\",\n                  alt: \"A card with tasks, where the task in view features a drop shadow and a bevel effect.\"\n                }), _jsx(_components.p, {\n                  children: \"Resort to layering as the initial tool for emphasis. Explore other visual techniques first to highlight elements without disrupting the layering system.\"\n                })]\n              })]\n            })\n          })]\n        })\n      }), _jsx(Card, {\n        children: _jsxs(Grid, {\n          gap: \"400\",\n          areas: {\n            xs: ['a a a a a a', 'b b b b b b'],\n            lg: ['a a a a b b b b b b b b']\n          },\n          children: [_jsx(Grid.Cell, {\n            area: \"a\",\n            children: _jsxs(Box, {\n              padding: \"400\",\n              children: [_jsx(_components.h2, {\n                id: \"surface-depth\",\n                children: \"Surface depth\"\n              }), _jsx(_components.p, {\n                children: \"Surfaces can enhance depth perception in an interface by establishing hierarchy and guiding attention.\"\n              }), _jsxs(_components.p, {\n                children: [\"Distinct separation between surfaces, depending on the visual boundary, can suggest an indentation or elevation, further intensifying the sense of depth and \", _jsx(_components.a, {\n                  href: \"/design/layout/spacial-organization\",\n                  children: \"spatial organization\"\n                }), \".\"]\n              })]\n            })\n          }), _jsx(Grid.Cell, {\n            area: \"b\",\n            children: _jsxs(Stack, {\n              gap: \"400\",\n              children: [_jsxs(Do, {\n                children: [_jsx(_components.img, {\n                  src: \"/images/design/depth/creating/depth-creating-14@2x.png\",\n                  alt: \"The bottom of the search results card, featuring a grey background that contains secondary information.\"\n                }), _jsx(_components.p, {\n                  children: \"Use a gray background to de-emphasize contained information. This will divert merchants’ attention towards more important information, as the muted background visually recedes, pushing the contained content into the background.\"\n                })]\n              }), _jsxs(Grid, {\n                areas: {\n                  xs: ['a a a a a a', 'b b b b b b'],\n                  lg: ['a a a a a a b b b b b b']\n                },\n                children: [_jsx(Grid.Cell, {\n                  area: \"a\",\n                  children: _jsxs(Dont, {\n                    children: [_jsx(_components.img, {\n                      src: \"/images/design/depth/creating/depth-creating-16@2x.png\",\n                      alt: \"A table with products, featuring a yellow background for the first brown, and yellow outline for the main container.\"\n                    }), _jsxs(_components.p, {\n                      children: [\"Use bright or contrasting colors for container backgrounds or borders. This distracts merchants from the main content and creates a cluttered UI. More guidance can be found under \", _jsx(_components.a, {\n                        href: \"/design/colors\",\n                        children: \"Color\"\n                      }), \".\"]\n                    })]\n                  })\n                }), _jsx(Grid.Cell, {\n                  area: \"b\",\n                  children: _jsxs(Dont, {\n                    children: [_jsx(_components.img, {\n                      src: \"/images/design/depth/creating/depth-creating-17@2x.png\",\n                      alt: \"A card with a footer with a gray background and a distinct bevel effect between the main content and the footer.\"\n                    }), _jsx(_components.p, {\n                      children: \"Use unique styles for surfaces, like inset shadows. This makes the interface noisy and creates confusing information hierarchy.\"\n                    })]\n                  })\n                })]\n              })]\n            })\n          })]\n        })\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"title":"Creating depth","icon":"VariantMajor","showTOC":true,"keywords":["depth","depth strategy","shadow use","bevel use"]},"scope":{"__remarkNextMdxImporter":{}}},"seoDescription":"Depth → ","editPageLinkPath":"/polaris.shopify.com/content/design/depth/creating-depth.mdx","isContentPage":true,"showTOC":true,"collapsibleTOC":false},"__N_SSG":true}