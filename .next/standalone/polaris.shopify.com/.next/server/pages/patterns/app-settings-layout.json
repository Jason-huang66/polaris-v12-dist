{"pageProps":{"pattern":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\"\n  }, _provideComponents(), props.components), {Variants, Stack} = _components;\n  if (!Stack) _missingMdxReference(\"Stack\", true);\n  if (!Variants) _missingMdxReference(\"Variants\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(Variants, {\n      variants: frontmatter.variants\n    }), \"\\n\", _jsxs(Stack, {\n      gap: \"400\",\n      children: [_jsx(_components.h2, {\n        id: \"related-resources\",\n        children: \"Related resources\"\n      }), _jsxs(_components.ul, {\n        children: [\"\\n\", _jsxs(_components.li, {\n          children: [\"See another two-column layout in use in the \", _jsx(_components.a, {\n            href: \"/patterns/resource-details-layout\",\n            children: \"Resource detail layout\"\n          }), \" pattern.\"]\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [\"See a single-column layout in use in the \", _jsx(_components.a, {\n            href: \"/patterns/resource-index-layout\",\n            children: \"Resource index layout\"\n          }), \" pattern.\"]\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [\"Learn more about \", _jsx(_components.a, {\n            href: \"https://shopify.dev/apps/design-guidelines/layout\",\n            children: \"Layout\"\n          }), \" in the app design guidelines.\"]\n        }), \"\\n\"]\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"title":"App settings layout","description":"Scan and find groups of settings in apps","lede":"Lets merchants scan and find groups of settings in apps.","url":"/patterns/app-settings-layout","previewImg":"/images/patterns/app-settings-layout/pattern-thumbnail-app-settings.png","githubDiscussionsLink":"https://github.com/Shopify/polaris/discussions/8217","variants":[{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\n/*prettier-ignore*/\n/*prettier-ignore*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    img: \"img\",\n    ol: \"ol\",\n    li: \"li\",\n    h3: \"h3\",\n    dl: \"dl\",\n    dt: \"dt\",\n    strong: \"strong\",\n    dd: \"dd\",\n    p: \"p\",\n    a: \"a\",\n    code: \"code\",\n    pre: \"pre\",\n    ul: \"ul\"\n  }, _provideComponents(), props.components), {HowItHelps, DefinitionTable, Usage, SideBySide} = _components;\n  if (!DefinitionTable) _missingMdxReference(\"DefinitionTable\", true);\n  if (!HowItHelps) _missingMdxReference(\"HowItHelps\", true);\n  if (!SideBySide) _missingMdxReference(\"SideBySide\", true);\n  if (!Usage) _missingMdxReference(\"Usage\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(HowItHelps, {\n      children: [_jsx(_components.h2, {\n        id: \"how-it-helps-merchants\",\n        children: \"How it helps merchants\"\n      }), _jsx(_components.img, {\n        src: \"/images/patterns/app-settings-layout/app-settings-cover-image.png\",\n        alt: \"App settings page with two columns\"\n      }), _jsxs(_components.ol, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: \"In the left column, glanceable labels and descriptions are listed to make it easier for merchants to scan the page and quickly find what they are looking for.\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"In the right column, settings are grouped in cards to make it easier for merchants to configure a setting after it's been found, or to configure multiple settings that might belong together.\"\n        }), \"\\n\"]\n      }), _jsxs(DefinitionTable, {\n        children: [_jsx(_components.h3, {\n          id: \"use-when-merchants-need-to\",\n          children: \"Use when merchants need to:\"\n        }), _jsxs(_components.dl, {\n          children: [\"\\n\", _jsx(_components.dt, {\n            children: _jsx(_components.strong, {\n              children: \"Find and change app settings\"\n            })\n          }), \"\\n\", _jsxs(_components.dd, {\n            children: [\"This pattern is used specifically for finding and updating individual app settings within the Shopify admin.\", \"\\n\"]\n          }), \"\\n\"]\n        })]\n      })]\n    }), \"\\n\", _jsxs(Usage, {\n      children: [_jsx(_components.h2, {\n        id: \"using-this-pattern\",\n        children: \"Using this pattern\"\n      }), _jsxs(_components.p, {\n        children: [\"This pattern uses the \", _jsx(_components.a, {\n          href: \"/components/layout-and-structure/block-stack\",\n          children: _jsx(_components.code, {\n            children: \"BlockStack\"\n          })\n        }), \", \", _jsx(_components.a, {\n          href: \"/components/layout-and-structure/card\",\n          children: _jsx(_components.code, {\n            children: \"Card\"\n          })\n        }), \", \", _jsx(_components.a, {\n          href: \"/components/layout-and-structure/inline-grid\",\n          children: _jsx(_components.code, {\n            children: \"InlineGrid\"\n          })\n        }), \" and \", _jsx(_components.a, {\n          href: \"/components/layout-and-structure/box\",\n          children: _jsx(_components.code, {\n            children: \"Box\"\n          })\n        }), \" components.\"]\n      }), _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-javascript\",\n          meta: \"{\\\"type\\\":\\\"livePreview\\\",\\\"id\\\":\\\"example\\\",\\\"title\\\":\\\"App settings layout\\\",\\\"sandboxContext\\\":\\\"{(____CODE____)()}\\\",\\\"previewContext\\\":\\\"<div style={{ padding: '2rem' }}>\\\\n  {(____CODE____)()}\\\\n</div>\\\"}\",\n          children: \"function AppSettingsLayoutExample() {\\n  const {smUp} = useBreakpoints();\\n  return (\\n    <Page\\n      divider\\n      primaryAction={{content: 'View on your store', disabled: true}}\\n      secondaryActions={[\\n        {\\n          content: 'Duplicate',\\n          accessibilityLabel: 'Secondary action label',\\n          onAction: () => alert('Duplicate action'),\\n        },\\n      ]}\\n    >\\n      <BlockStack gap={{xs: '800', sm: '400'}}>\\n        <InlineGrid columns={{xs: '1fr', md: '2fr 5fr'}} gap=\\\"400\\\">\\n          <Box\\n            as=\\\"section\\\"\\n            paddingInlineStart={{xs: 400, sm: 0}}\\n            paddingInlineEnd={{xs: 400, sm: 0}}\\n          >\\n            <BlockStack gap=\\\"400\\\">\\n              <Text as=\\\"h3\\\" variant=\\\"headingMd\\\">\\n                InterJambs\\n              </Text>\\n              <Text as=\\\"p\\\" variant=\\\"bodyMd\\\">\\n                Interjambs are the rounded protruding bits of your puzzlie piece\\n              </Text>\\n            </BlockStack>\\n          </Box>\\n          <Card roundedAbove=\\\"sm\\\">\\n            <BlockStack gap=\\\"400\\\">\\n              <TextField label=\\\"Interjamb style\\\" />\\n              <TextField label=\\\"Interjamb ratio\\\" />\\n            </BlockStack>\\n          </Card>\\n        </InlineGrid>\\n        {smUp ? <Divider /> : null}\\n        <InlineGrid columns={{xs: '1fr', md: '2fr 5fr'}} gap=\\\"400\\\">\\n          <Box\\n            as=\\\"section\\\"\\n            paddingInlineStart={{xs: 400, sm: 0}}\\n            paddingInlineEnd={{xs: 400, sm: 0}}\\n          >\\n            <BlockStack gap=\\\"400\\\">\\n              <Text as=\\\"h3\\\" variant=\\\"headingMd\\\">\\n                Dimensions\\n              </Text>\\n              <Text as=\\\"p\\\" variant=\\\"bodyMd\\\">\\n                Interjambs are the rounded protruding bits of your puzzlie piece\\n              </Text>\\n            </BlockStack>\\n          </Box>\\n          <Card roundedAbove=\\\"sm\\\">\\n            <BlockStack gap=\\\"400\\\">\\n              <TextField label=\\\"Horizontal\\\" />\\n              <TextField label=\\\"Interjamb ratio\\\" />\\n            </BlockStack>\\n          </Card>\\n        </InlineGrid>\\n      </BlockStack>\\n    </Page>\\n  );\\n}\\n\"\n        })\n      })]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"useful-to-know\",\n      children: \"Useful to know\"\n    }), \"\\n\", _jsx(SideBySide, {\n      children: _jsxs(_components.ul, {\n        children: [\"\\n\", _jsxs(_components.li, {\n          children: [\"\\n\", _jsx(_components.p, {\n            children: \"Don't include a description unless it's helpful.\"\n          }), \"\\n\", _jsx(_components.img, {\n            src: \"/images/patterns/app-settings-layout/app-settings-usage-1.png\",\n            alt: \"Section header with no description on an app settings page\"\n          }), \"\\n\"]\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [\"\\n\", _jsx(_components.p, {\n            children: \"Place grouped settings within cards.\"\n          }), \"\\n\", _jsx(_components.img, {\n            src: \"/images/patterns/app-settings-layout/app-settings-usage-2.png\",\n            alt: \"App settings page with section headings and grouped settings\"\n          }), \"\\n\"]\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [\"\\n\", _jsx(_components.p, {\n            children: \"Stack all setting groups vertically on the page.\"\n          }), \"\\n\", _jsx(_components.img, {\n            src: \"/images/patterns/app-settings-layout/app-settings-usage-3.png\",\n            alt: \"App settings page with two vertically stacked sections\"\n          }), \"\\n\"]\n        }), \"\\n\"]\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"hideFromNav":true},"scope":{"__remarkNextMdxImporter":{}}}],"draft":false},"scope":{"__remarkNextMdxImporter":{}}}},"__N_SSG":true}