{"pageProps":{"mdx":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    h2: \"h2\",\n    ul: \"ul\",\n    li: \"li\",\n    hr: \"hr\",\n    h3: \"h3\",\n    a: \"a\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\",\n    h4: \"h4\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components), {Lede, Examples, Props, DoDont} = _components;\n  if (!DoDont) _missingMdxReference(\"DoDont\", true);\n  if (!Examples) _missingMdxReference(\"Examples\", true);\n  if (!Lede) _missingMdxReference(\"Lede\", true);\n  if (!Props) _missingMdxReference(\"Props\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      id: \"frontmattertitle\",\n      children: frontmatter.title\n    }), \"\\n\", _jsx(Lede, {\n      children: _jsx(_components.p, {\n        children: \"Keyboard key is used to educate merchants about keyboard shortcuts.\"\n      })\n    }), \"\\n\", _jsx(Examples, {}), \"\\n\", _jsx(Props, {\n      componentName: frontmatter.title\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"best-practices\",\n      children: \"Best practices\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The keyboard key component should:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Include a heading to introduce and explain the shortcuts being described when more than one shortcut is listed\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Include an action label to describe what will happen if merchants use the key combination\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h2, {\n      id: \"content-guidelines\",\n      children: \"Content guidelines\"\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"heading\",\n      children: \"Heading\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Headings above the keyboard key should:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Label the type of keyboard shortcuts being presented\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Follow the content guidelines for \", _jsx(_components.a, {\n          href: \"https://polaris.shopify.com/content/actionable-language#headings-and-subheadings\",\n          children: \"headings and subheadings\"\n        })]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"shortcut-description\",\n      children: \"Shortcut description\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The shortcut description should describe what action is taken when merchants tap certain keys. When a hotkey combination takes merchants to a location in the interface, the format should be:\"\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Properties\"\n          }), _jsx(_components.th, {\n            children: \"Type\"\n          }), _jsx(_components.th, {\n            children: \"Description\"\n          })]\n        })\n      }), _jsx(_components.tbody, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"children\"\n          }), _jsx(_components.td, {\n            children: \"string\"\n          }), _jsx(_components.td, {\n            children: \"The content to display inside the key\"\n          })]\n        })\n      })]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h2, {\n      id: \"related-components\",\n      children: \"Related components\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"To add a tooltip for a button with an associated keyboard shortcut, \", _jsx(_components.a, {\n          href: \"https://polaris.shopify.com/components/tooltip\",\n          children: \"use the tooltip component\"\n        })]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h2, {\n      id: \"accessibility\",\n      children: \"Accessibility\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The text of the keyboard key component is read by screen readers, but the visual formatting isn’t conveyed. Ensure that merchants are able to understand information about keyboard shortcuts without relying on the visual style of the component.\"\n    }), \"\\n\", _jsxs(DoDont, {\n      children: [_jsx(_components.h4, {\n        id: \"do\",\n        children: \"Do\"\n      }), _jsxs(_components.ul, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: \"Pair lists of keyboard shortcut information with a heading that describes the section (“Keyboard shortcuts”).\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"Provide inline keyboard instructions with context.\"\n        }), \"\\n\"]\n      }), _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-JSX\",\n          children: \"Press the <KeyboardKey>Ctrl</KeyboardKey> key.\\n\"\n        })\n      }), _jsx(_components.h4, {\n        id: \"dont\",\n        children: \"Don't\"\n      }), _jsxs(_components.ul, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: \"Use the keyboard key component alone to convey keyboard instructions.\"\n        }), \"\\n\"]\n      }), _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-JSX\",\n          children: \"Use <KeyboardKey>Ctrl</KeyboardKey>\\n\"\n        })\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"title":"Keyboard key","shortDescription":"Used to educate merchants about keyboard shortcuts.","category":"Images and icons","keywords":["KeyboardKey","shortcuts","hotkey","hot key","keyboard shortcuts","keyboard letter","hotkey combinations"],"examples":[{"fileName":"keyboard-key-default.tsx","title":"Default","description":"Use to list a related set of keyboard shortcuts."}],"previewImg":"/images/components/images-and-icons/keyboard-key.png"},"scope":{"__remarkNextMdxImporter":{}}},"examples":[{"fileName":"keyboard-key-default.tsx","title":"Default","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Use to list a related set of keyboard shortcuts.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {Card, KeyboardKey} from '@shopify/polaris';\nimport React from 'react';\n\nfunction Example() {\n  return (\n    <Card>\n      <KeyboardKey>Ctrl</KeyboardKey>\n    </Card>\n  );\n}\n\n"}],"seoDescription":"Keyboard key is used to educate merchants about keyboard shortcuts.","type":{"KeyboardKeyProps":{"filePath":"polaris-react/src/components/KeyboardKey/KeyboardKey.tsx","name":"KeyboardKeyProps","description":"","members":[{"filePath":"polaris-react/src/components/KeyboardKey/KeyboardKey.tsx","syntaxKind":"PropertySignature","name":"children","value":"string","description":"","isOptional":true},{"filePath":"polaris-react/src/components/KeyboardKey/KeyboardKey.tsx","syntaxKind":"PropertySignature","name":"size","value":"\"small\"","description":"","isOptional":true}],"value":"export interface KeyboardKeyProps {\n  children?: string;\n  size?: Size;\n}"}},"editPageLinkPath":"polaris.shopify.com/content/components/images-and-icons/keyboard-key.mdx"},"__N_SSG":true}