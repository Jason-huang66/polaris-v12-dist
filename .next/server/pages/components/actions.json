{"pageProps":{"mdx":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\"\n  }, _provideComponents(), props.components), {Lede, RichCardGrid} = _components;\n  if (!Lede) _missingMdxReference(\"Lede\", true);\n  if (!RichCardGrid) _missingMdxReference(\"RichCardGrid\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      id: \"frontmattertitle\",\n      children: frontmatter.title\n    }), \"\\n\", _jsx(Lede, {\n      children: _jsx(_components.p, {\n        children: \"Perform tasks or take actions within the Shopify admin.\"\n      })\n    }), \"\\n\", _jsx(RichCardGrid, {\n      cards: posts\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"title":"Actions","shortDescription":"Perform tasks or take actions within the Shopify admin.","expanded":true,"order":1,"previewImg":"/images/components/actions.png"},"scope":{"posts":[{"url":"/components/actions/account-connection","description":"The account connection component is used so merchants can connect or disconnect their store to various accounts. For example, if merchants want to use the Facebook sales channel, they need to connect their Facebook account to their Shopify store.","title":"Account connection","shortDescription":"Used for connecting or disconnecting a store to various accounts, like Facebook for the sales channel.","category":"Actions","keywords":["AccountConnection","connect","account","sign-up","default account connection","disconnection","authorize","third-party accounts","integrate","facebook","social media"],"examples":[{"fileName":"account-connection-default.tsx","title":"Default","description":"Use to let merchants connect or disconnect their store to their third-party accounts, like Facebook."}],"previewImg":"/images/components/actions/account-connection.png","order":1000},{"url":"/components/actions/button","description":"Buttons are used primarily for actions, such as “Add”, “Close”, “Cancel”, or “Save”. Plain buttons, which look similar to links, are used for less important or less commonly used actions, such as “view shipping settings”.","title":"Button","shortDescription":"Used primarily for actions like 'Add', 'Close', 'Cancel', or 'Save'. Plain buttons are used for less important actions.","category":"Actions","keywords":["CTA","call to action","call-to-action","primary","action","basic button","outline","plain","destructive","slim","large","full-width","disabled state","disabled","button","link","click","submit"],"examples":[{"fileName":"button-default.tsx","title":"Default","description":"Used most in the interface. Only use another style if a button requires more or less visual weight."},{"fileName":"button-plain.tsx","title":"Plain","description":"Use for less important or less commonly used actions since they’re less prominent. For example, plain buttons are used as actions in cards."},{"fileName":"button-tertiary.tsx","title":"Tertiary","description":"Use for tertiary actions. Can be paired with any other button style to create visual variation."},{"fileName":"button-plain-critical.tsx","title":"Plain critical","description":"Use for actions that will delete merchant data or be otherwise difficult to recover from. Since they’re less prominent, use for less important or less commonly used critical actions. For example, plain buttons are used as actions in cards."},{"fileName":"button-primary.tsx","title":"Primary","description":"Use to highlight the most important actions in any experience. Don’t use more than one primary button in a section or screen to avoid overwhelming merchants."},{"fileName":"button-primary-critical.tsx","title":"Primary critical","description":"Use when the action will delete merchant data or be otherwise difficult to recover from. Critical buttons should trigger a confirmation dialog before the action is completed. Be thoughtful about using critical buttons because they can feel stressful for merchants."},{"fileName":"button-large.tsx","title":"Large","description":"Use for the main call to action in empty states or for calls to action shown with large illustrations."},{"fileName":"button-full-width.tsx","title":"Full-width","description":"Use for buttons placed in a narrow column (especially when stacking multiple buttons) or for creating a set of buttons of equal width. Full-width buttons should rarely exceed 320 px wide."},{"fileName":"button-text-aligned.tsx","title":"Text-aligned","description":"Use for plain or monochrome buttons that could have a long length and should be aligned when they potentially overflow onto the next line."},{"fileName":"button-pressed.tsx","title":"Pressed","description":"Buttons are sometimes used as a toggle for other parts of the user interface."},{"fileName":"button-plain-disclosure.tsx","title":"Plain disclosure","description":"Use to indicate that more content can be disclosed on click, like text in a collapsible."},{"fileName":"button-right-aligned-disclosure.tsx","title":"Right-aligned disclosure","description":"When working with `fullWidth + textAlign=\"left\"`, the `disclosure` will align itself to the far right."},{"fileName":"button-select-disclosure.tsx","title":"Select disclosure","description":"Use to indicate that multiple options are available from this control, similar to a `<select />` HTML element."},{"fileName":"button-split.tsx","title":"Split","description":"Use when there is only one primary action but other related actions can be taken."},{"fileName":"button-disabled-state.tsx","title":"Disabled state","description":"Use for actions that aren’t currently available. The surrounding interface should make it clear why the button is disabled and what needs to be done to enable it."},{"fileName":"button-loading-state.tsx","title":"Loading state","description":"Use when a button has been pressed and the associated action is in progress."}],"previewImg":"/images/components/actions/button.png","order":1000},{"url":"/components/actions/button-group","description":"Button group displays multiple related actions stacked or in a horizontal row to help with arrangement and spacing.","title":"Button group","shortDescription":"Displays multiple related actions stacked or in a horizontal row for arrangement and spacing.","category":"Actions","keywords":["ButtonGroup","choices","decision","call-to-action","CTA","segmented buttons","divided buttons","grouped actions","multiple horizontal buttons","multiple buttons","set of buttons","set of actions","horizontal arrangement of buttons","stacked","segmented control"],"examples":[{"fileName":"button-group-default.tsx","title":"Default","description":"Use when you have multiple buttons to space them out evenly."},{"fileName":"button-group-with-segmented-buttons.tsx","title":"With segmented buttons","description":"Use to emphasize several buttons as a thematically-related set among other controls."},{"fileName":"button-group-pressed-with-segmented-buttons.tsx","title":"Pressed with segmented buttons","description":"Pressed buttons can be used in combination to create a toggle for other parts of the user interface."}],"previewImg":"/images/components/actions/button-group.png","order":1000},{"url":"/components/actions/page-actions","description":"Page actions let merchants take key actions at the bottom of specific pages in the interface. This is important because sometimes the primary call to action is hard to access when merchants are at the bottom of a page.","title":"Page actions","shortDescription":"Allows merchants to take key actions at the bottom of specific pages in the interface.","category":"Actions","keywords":["PageActions","bottom of page actions","bottom page actions","primary action","primary page actions","default page actions","save delete actions","save actions","delete actions"],"examples":[{"fileName":"page-actions-default.tsx","title":"Default","description":"Used on a resource page (such as an individual order or product page) to let merchants take key actions at the bottom of the page. Usually, the primary action is Save and the secondary action is Delete."},{"fileName":"page-actions-primary-action-only.tsx","title":"Primary action only","description":"Not all page actions require a secondary action."},{"fileName":"page-actions-with-custom-primary-action.tsx","title":"With custom primary action","description":"Use to create a custom primary action."},{"fileName":"page-actions-with-custom-secondary-action.tsx","title":"With custom secondary action","description":"Use to create a custom secondary action."}],"previewImg":"/images/components/actions/page-actions.png","order":1000}],"__remarkNextMdxImporter":{}}},"seoDescription":"Perform tasks or take actions within the Shopify admin.","editPageLinkPath":"/polaris.shopify.com/content/components/actions/index.mdx","isContentPage":false,"showTOC":false,"collapsibleTOC":false},"__N_SSG":true}