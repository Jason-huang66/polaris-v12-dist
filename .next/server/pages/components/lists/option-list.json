{"pageProps":{"mdx":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    a: \"a\",\n    h2: \"h2\",\n    ul: \"ul\",\n    li: \"li\",\n    hr: \"hr\",\n    h3: \"h3\",\n    h4: \"h4\",\n    code: \"code\"\n  }, _provideComponents(), props.components), {Lede, Examples, Props, DoDont} = _components;\n  if (!DoDont) _missingMdxReference(\"DoDont\", true);\n  if (!Examples) _missingMdxReference(\"Examples\", true);\n  if (!Lede) _missingMdxReference(\"Lede\", true);\n  if (!Props) _missingMdxReference(\"Props\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      id: \"frontmattertitle\",\n      children: frontmatter.title\n    }), \"\\n\", _jsx(Lede, {\n      children: _jsxs(_components.p, {\n        children: [\"The option list component lets you create a list of grouped items that merchants can pick from. This can include single selection or multiple selection of options. Option list usually appears in a popover, and sometimes in a modal or a sidebar. Option lists are styled differently than \", _jsx(_components.a, {\n          href: \"https://polaris.shopify.com/components/choice-list\",\n          children: \"choice lists\"\n        }), \" and should not be used within a form, but as a standalone menu.\"]\n      })\n    }), \"\\n\", _jsx(Examples, {}), \"\\n\", _jsx(Props, {\n      componentName: frontmatter.title\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"best-practices\",\n      children: \"Best practices\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The option list component should:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"Be placed on its own inside a container. Usually the container behaves like a menu, as it does with \", _jsx(_components.a, {\n          href: \"https://polaris.shopify.com/components/overlays/popover\",\n          children: \"popover\"\n        }), \". Don’t place other components within the same container.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Not be used when a \", _jsx(_components.a, {\n          href: \"https://polaris.shopify.com/components/select\",\n          children: \"select component\"\n        }), \" will do.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h2, {\n      id: \"content-guidelines\",\n      children: \"Content guidelines\"\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"option-lists\",\n      children: \"Option lists\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Each item in an option list should be clear and descriptive.\"\n    }), \"\\n\", _jsxs(DoDont, {\n      children: [_jsx(_components.h4, {\n        id: \"do\",\n        children: \"Do\"\n      }), _jsxs(_components.ul, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: \"Traffic referrer source\"\n        }), \"\\n\"]\n      }), _jsx(_components.h4, {\n        id: \"dont\",\n        children: \"Don’t\"\n      }), _jsxs(_components.ul, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: \"Source\"\n        }), \"\\n\"]\n      })]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h2, {\n      id: \"related-components\",\n      children: \"Related components\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"To render a list of actions,\\n\", _jsx(_components.a, {\n          href: \"https://polaris.shopify.com/components/action-list\",\n          children: \"use the action list component\"\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"To create a list of grouped radio buttons or checkboxes,\\n\", _jsx(_components.a, {\n          href: \"https://polaris.shopify.com/components/choice-list\",\n          children: \"use the choice list component\"\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"For a basic version of option list as a single choice menu,\\n\", _jsx(_components.a, {\n          href: \"https://polaris.shopify.com/components/select\",\n          children: \"use the select component\"\n        })]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h2, {\n      id: \"accessibility\",\n      children: \"Accessibility\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Items in an option list are organized as list items (\", _jsx(_components.code, {\n        children: \"<li>\"\n      }), \") in an unordered list (\", _jsx(_components.code, {\n        children: \"<ul>\"\n      }), \") and are conveyed as a group of related elements to assistive technology users.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Controls in simple option lists are \", _jsx(_components.a, {\n        href: \"https://polaris.shopify.com/components/actions/button\",\n        children: \"buttons\"\n      }), \", and controls in multiple option lists are \", _jsx(_components.a, {\n        href: \"https://polaris.shopify.com/components/checkbox\",\n        children: \"checkboxes\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"If you customize the option list, you can provide ARIA roles that fit the context. These roles must be valid according to the \", _jsx(_components.a, {\n        href: \"https://www.w3.org/TR/wai-aria-1.1/\",\n        children: \"W3C ARIA specification\"\n      }), \" to be conveyed correctly to screen reader users.\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"The \", _jsx(_components.code, {\n          children: \"role\"\n        }), \" prop adds an ARIA role to the option list wrapper\"]\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"title":"Option list","category":"Lists","keywords":["option list","choices","decision","list","list of tags","list of collections","collections lists","collection lists","list selection"],"examples":[{"fileName":"option-list-default.tsx","title":"Default","description":"Use for a group of similar selectable items when only one should be selectable at once."},{"fileName":"option-list-multiple.tsx","title":"Multiple","description":"Use when you have a group of similar selectable items and more than one item can be selected at once."},{"fileName":"option-list-with-sections.tsx","title":"With sections","description":"Use sections when you have multiple groups of similar selectable items."},{"fileName":"option-list-in-a-popover.tsx","title":"In a popover","description":"Use when a set of selections won’t fit in the available screen space."}],"previewImg":"/images/components/lists/option-list.png"},"scope":{"__remarkNextMdxImporter":{}}},"examples":[{"fileName":"option-list-default.tsx","title":"Default","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Use for a group of similar selectable items when only one should be selectable at once.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {LegacyCard, OptionList} from '@shopify/polaris';\nimport {useState} from 'react';\n\nfunction OptionListExample() {\n  const [selected, setSelected] = useState<string[]>([]);\n\n  return (\n    <LegacyCard>\n      <OptionList\n        title=\"Inventory Location\"\n        onChange={setSelected}\n        options={[\n          {value: 'byward_market', label: 'Byward Market'},\n          {value: 'centretown', label: 'Centretown'},\n          {value: 'hintonburg', label: 'Hintonburg'},\n          {value: 'westboro', label: 'Westboro'},\n          {value: 'downtown', label: 'Downtown'},\n        ]}\n        selected={selected}\n      />\n    </LegacyCard>\n  );\n}\n\n"},{"fileName":"option-list-multiple.tsx","title":"Multiple","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Use when you have a group of similar selectable items and more than one item can be selected at once.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {LegacyCard, OptionList} from '@shopify/polaris';\nimport {useState} from 'react';\n\nfunction MultipleOptionListExample() {\n  const [selected, setSelected] = useState<string[]>([]);\n\n  return (\n    <LegacyCard>\n      <OptionList\n        title=\"Manage sales channels availability\"\n        onChange={setSelected}\n        options={[\n          {value: 'online_store', label: 'Online Store'},\n          {value: 'messenger', label: 'Messenger'},\n          {value: 'facebook', label: 'Facebook'},\n          {value: 'wholesale', label: 'Wholesale'},\n          {value: 'buzzfeed', label: 'BuzzFeed'},\n        ]}\n        selected={selected}\n        allowMultiple\n      />\n    </LegacyCard>\n  );\n}\n\n"},{"fileName":"option-list-with-sections.tsx","title":"With sections","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Use sections when you have multiple groups of similar selectable items.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {LegacyCard, OptionList} from '@shopify/polaris';\nimport {useState} from 'react';\n\nfunction OptionListWithSectionsExample() {\n  const [selected, setSelected] = useState<string[]>([]);\n\n  return (\n    <LegacyCard>\n      <OptionList\n        onChange={setSelected}\n        sections={[\n          {\n            options: [\n              {value: 'type', label: 'Sale item type'},\n              {value: 'kind', label: 'Sale kind'},\n            ],\n          },\n          {\n            title: 'Traffic',\n            options: [\n              {value: 'source', label: 'Traffic referrer source'},\n              {value: 'host', label: 'Traffic referrer host'},\n              {value: 'path', label: 'Traffic referrer path'},\n            ],\n          },\n        ]}\n        selected={selected}\n        allowMultiple\n      />\n    </LegacyCard>\n  );\n}\n\n"},{"fileName":"option-list-in-a-popover.tsx","title":"In a popover","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Use when a set of selections won’t fit in the available screen space.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {Button, Popover, OptionList} from '@shopify/polaris';\nimport {useState, useCallback} from 'react';\n\nfunction OptionListInPopoverExample() {\n  const [selected, setSelected] = useState<string[]>([]);\n  const [popoverActive, setPopoverActive] = useState(true);\n\n  const togglePopoverActive = useCallback(\n    () => setPopoverActive((popoverActive) => !popoverActive),\n    [],\n  );\n\n  const activator = (\n    <Button onClick={togglePopoverActive} disclosure>\n      Options\n    </Button>\n  );\n\n  return (\n    <div style={{height: '275px'}}>\n      <Popover\n        active={popoverActive}\n        activator={activator}\n        onClose={togglePopoverActive}\n      >\n        <OptionList\n          title=\"Inventory Location\"\n          onChange={setSelected}\n          options={[\n            {\n              value: 'byward_market',\n              label: 'Byward Market',\n              active: true,\n            },\n            {value: 'centretown', label: 'Centretown'},\n            {\n              value: 'hintonburg',\n              label: 'Hintonburg',\n              active: true,\n            },\n            {value: 'westboro', label: 'Westboro'},\n            {value: 'downtown', label: 'Downtown'},\n          ]}\n          selected={selected}\n        />\n      </Popover>\n    </div>\n  );\n}\n\n"}],"seoDescription":"The option list component lets you create a list of grouped items that merchants can pick from. This can include single selection or multiple selection of options. Option list usually appears in a popover, and sometimes in a modal or a sidebar. Option lists are styled differently than choice lists and should not be used within a form, but as a standalone menu.","type":{"OptionListProps":{"filePath":"polaris-react/src/components/OptionList/OptionList.tsx","name":"OptionListProps","description":"","members":[{"filePath":"polaris-react/src/components/OptionList/OptionList.tsx","syntaxKind":"PropertySignature","name":"id","value":"string","description":"A unique identifier for the option list","isOptional":true},{"filePath":"polaris-react/src/components/OptionList/OptionList.tsx","syntaxKind":"PropertySignature","name":"title","value":"string","description":"List title","isOptional":true},{"filePath":"polaris-react/src/components/OptionList/OptionList.tsx","syntaxKind":"PropertySignature","name":"options","value":"OptionDescriptor[]","description":"Collection of options to be listed","isOptional":true},{"filePath":"polaris-react/src/components/OptionList/OptionList.tsx","syntaxKind":"PropertySignature","name":"role","value":"string","description":"Defines a specific role attribute for the list itself","isOptional":true},{"filePath":"polaris-react/src/components/OptionList/OptionList.tsx","syntaxKind":"PropertySignature","name":"sections","value":"SectionDescriptor[]","description":"Sections containing a header and related options","isOptional":true},{"filePath":"polaris-react/src/components/OptionList/OptionList.tsx","syntaxKind":"PropertySignature","name":"selected","value":"string[]","description":"The selected options"},{"filePath":"polaris-react/src/components/OptionList/OptionList.tsx","syntaxKind":"PropertySignature","name":"allowMultiple","value":"boolean","description":"Allow more than one option to be selected","isOptional":true},{"filePath":"polaris-react/src/components/OptionList/OptionList.tsx","syntaxKind":"PropertySignature","name":"verticalAlign","value":"Alignment","description":"Vertically align child content to the center, top, or bottom.","isOptional":true},{"filePath":"polaris-react/src/components/OptionList/OptionList.tsx","syntaxKind":"MethodSignature","name":"onChange","value":"(selected: string[]) => void","description":"Callback when selection is changed"},{"filePath":"polaris-react/src/components/OptionList/OptionList.tsx","syntaxKind":"MethodSignature","name":"onPointerEnterOption","value":"(selected: string) => void","description":"Callback when pointer enters an option","isOptional":true},{"filePath":"polaris-react/src/components/OptionList/OptionList.tsx","syntaxKind":"MethodSignature","name":"onFocusOption","value":"(selected: string) => void","description":"Callback when focusing an option","isOptional":true}],"value":"export interface OptionListProps {\n  /** A unique identifier for the option list */\n  id?: string;\n  /** List title */\n  title?: string;\n  /** Collection of options to be listed */\n  options?: OptionDescriptor[];\n  /** Defines a specific role attribute for the list itself */\n  role?: 'listbox' | 'combobox' | string;\n  /** Sections containing a header and related options */\n  sections?: SectionDescriptor[];\n  /** The selected options */\n  selected: string[];\n  /** Allow more than one option to be selected */\n  allowMultiple?: boolean;\n  /** Vertically align child content to the center, top, or bottom.  */\n  verticalAlign?: Alignment;\n  /** Callback when selection is changed */\n  onChange(selected: string[]): void;\n  /** Callback when pointer enters an option */\n  onPointerEnterOption?(selected: string): void;\n  /** Callback when focusing an option */\n  onFocusOption?(selected: string): void;\n}"},"OptionDescriptor":{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"OptionDescriptor","description":"","members":[{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"value","value":"string","description":"Value of the option"},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"label","value":"React.ReactNode","description":"Display label for the option"},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"disabled","value":"boolean","description":"Whether the option is disabled or not","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"active","value":"boolean","description":"Whether the option is active or not","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"id","value":"string","description":"Unique identifier for the option","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"media","value":"React.ReactElement<IconProps | ThumbnailProps | AvatarProps>","description":"Media to display to the left of the option content","isOptional":true}],"value":"export interface OptionDescriptor {\n  /** Value of the option */\n  value: string;\n  /** Display label for the option */\n  label: React.ReactNode;\n  /** Whether the option is disabled or not */\n  disabled?: boolean;\n  /** Whether the option is active or not */\n  active?: boolean;\n  /** Unique identifier for the option */\n  id?: string;\n  /** Media to display to the left of the option content */\n  media?: React.ReactElement<IconProps | ThumbnailProps | AvatarProps>;\n}"},"IconProps":{"filePath":"polaris-react/src/components/Icon/Icon.tsx","name":"IconProps","description":"","members":[{"filePath":"polaris-react/src/components/Icon/Icon.tsx","syntaxKind":"PropertySignature","name":"source","value":"any","description":"The SVG contents to display in the icon (icons should fit in a 20 × 20 pixel viewBox)"},{"filePath":"polaris-react/src/components/Icon/Icon.tsx","syntaxKind":"PropertySignature","name":"tone","value":"Tone","description":"Set the color for the SVG fill","isOptional":true},{"filePath":"polaris-react/src/components/Icon/Icon.tsx","syntaxKind":"PropertySignature","name":"accessibilityLabel","value":"string","description":"Descriptive text to be read to screenreaders","isOptional":true}],"value":"export interface IconProps {\n  /** The SVG contents to display in the icon (icons should fit in a 20 × 20 pixel viewBox) */\n  source: IconSource;\n  /** Set the color for the SVG fill */\n  tone?: Tone;\n  /** Descriptive text to be read to screenreaders */\n  accessibilityLabel?: string;\n}"},"Tone":{"filePath":"polaris-react/src/components/Icon/Icon.tsx","syntaxKind":"TypeAliasDeclaration","name":"Tone","value":"'base' | 'subdued' | 'caution' | 'warning' | 'critical' | 'interactive' | 'info' | 'success' | 'primary' | 'emphasis' | 'magic' | 'textCaution' | 'textWarning' | 'textCritical' | 'textInfo' | 'textSuccess' | 'textPrimary' | 'textMagic'","description":""},"ThumbnailProps":{"filePath":"polaris-react/src/components/Thumbnail/Thumbnail.tsx","name":"ThumbnailProps","description":"","members":[{"filePath":"polaris-react/src/components/Thumbnail/Thumbnail.tsx","syntaxKind":"PropertySignature","name":"size","value":"Size","description":"Size of thumbnail","isOptional":true,"defaultValue":"'medium'"},{"filePath":"polaris-react/src/components/Thumbnail/Thumbnail.tsx","syntaxKind":"PropertySignature","name":"source","value":"any","description":"URL for the image"},{"filePath":"polaris-react/src/components/Thumbnail/Thumbnail.tsx","syntaxKind":"PropertySignature","name":"alt","value":"string","description":"Alt text for the thumbnail image"},{"filePath":"polaris-react/src/components/Thumbnail/Thumbnail.tsx","syntaxKind":"PropertySignature","name":"transparent","value":"boolean","description":"Transparent background","isOptional":true}],"value":"export interface ThumbnailProps {\n  /**\n   * Size of thumbnail\n   * @default 'medium'\n   */\n  size?: Size;\n  /** URL for the image */\n  source: string | React.FunctionComponent<React.SVGProps<SVGSVGElement>>;\n  /** Alt text for the thumbnail image */\n  alt: string;\n  /** Transparent background */\n  transparent?: boolean;\n}"},"Size":{"filePath":"polaris-react/src/components/Thumbnail/Thumbnail.tsx","syntaxKind":"TypeAliasDeclaration","name":"Size","value":"'extraSmall' | 'small' | 'medium' | 'large'","description":""},"AvatarProps":{"filePath":"polaris-react/src/components/Avatar/Avatar.tsx","name":"AvatarProps","description":"","members":[{"filePath":"polaris-react/src/components/Avatar/Avatar.tsx","syntaxKind":"PropertySignature","name":"size","value":"Size","description":"Size of avatar","isOptional":true,"defaultValue":"'medium'"},{"filePath":"polaris-react/src/components/Avatar/Avatar.tsx","syntaxKind":"PropertySignature","name":"name","value":"string","description":"The name of the person","isOptional":true},{"filePath":"polaris-react/src/components/Avatar/Avatar.tsx","syntaxKind":"PropertySignature","name":"initials","value":"string","description":"Initials of person to display","isOptional":true},{"filePath":"polaris-react/src/components/Avatar/Avatar.tsx","syntaxKind":"PropertySignature","name":"customer","value":"boolean","description":"Whether the avatar is for a customer","isOptional":true},{"filePath":"polaris-react/src/components/Avatar/Avatar.tsx","syntaxKind":"PropertySignature","name":"source","value":"string","description":"URL of the avatar image which falls back to initials if the image fails to load","isOptional":true},{"filePath":"polaris-react/src/components/Avatar/Avatar.tsx","syntaxKind":"MethodSignature","name":"onError","value":"() => void","description":"Callback fired when the image fails to load","isOptional":true},{"filePath":"polaris-react/src/components/Avatar/Avatar.tsx","syntaxKind":"PropertySignature","name":"accessibilityLabel","value":"string","description":"Accessible label for the avatar image","isOptional":true}],"value":"export interface AvatarProps {\n  /**\n   * Size of avatar\n   * @default 'medium'\n   */\n  size?: Size;\n  /** The name of the person */\n  name?: string;\n  /** Initials of person to display */\n  initials?: string;\n  /** Whether the avatar is for a customer */\n  customer?: boolean;\n  /** URL of the avatar image which falls back to initials if the image fails to load */\n  source?: string;\n  /** Callback fired when the image fails to load  */\n  onError?(): void;\n  /** Accessible label for the avatar image */\n  accessibilityLabel?: string;\n}"},"SectionDescriptor":{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"SectionDescriptor","description":"","members":[{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"options","value":"OptionDescriptor[]","description":"Collection of options within the section"},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"title","value":"string","description":"Section title","isOptional":true}],"value":"export interface SectionDescriptor {\n  /** Collection of options within the section */\n  options: OptionDescriptor[];\n  /** Section title */\n  title?: string;\n}"},"Alignment":{"filePath":"polaris-react/src/components/OptionList/OptionList.tsx","syntaxKind":"TypeAliasDeclaration","name":"Alignment","value":"'top' | 'center' | 'bottom'","description":""}},"editPageLinkPath":"polaris.shopify.com/content/components/lists/option-list.mdx"},"__N_SSG":true}