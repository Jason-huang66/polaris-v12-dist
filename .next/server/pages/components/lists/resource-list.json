{"pageProps":{"mdx":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\",\n    hr: \"hr\",\n    h2: \"h2\",\n    em: \"em\",\n    h3: \"h3\",\n    h4: \"h4\"\n  }, _provideComponents(), props.components), {Lede, Examples, Props, DoDont} = _components;\n  if (!DoDont) _missingMdxReference(\"DoDont\", true);\n  if (!Examples) _missingMdxReference(\"Examples\", true);\n  if (!Lede) _missingMdxReference(\"Lede\", true);\n  if (!Props) _missingMdxReference(\"Props\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      id: \"frontmattertitle\",\n      children: frontmatter.title\n    }), \"\\n\", _jsx(Lede, {\n      children: _jsx(_components.p, {\n        children: \"A resource list displays a collection of objects of the same type, like products or customers. The main job of a resource list is to help merchants find an object and navigate to a full-page representation of it.\"\n      })\n    }), \"\\n\", _jsx(Examples, {}), \"\\n\", _jsx(Props, {\n      componentName: frontmatter.title\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Resource lists can also:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"Support \", _jsx(_components.a, {\n          href: \"https://polaris.shopify.com/components/resource-item\",\n          children: \"customized list items\"\n        })]\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Include bulk actions so merchants can act on multiple objects at once\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Support sorting and \", _jsx(_components.a, {\n          href: \"https://polaris.shopify.com/components/filters\",\n          children: \"filtering\"\n        }), \" of long lists\"]\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Be paired with pagination to make long lists digestible\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h2, {\n      id: \"build\",\n      children: \"Build\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Using a resource list in a project involves combining the following components and subcomponents:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"ResourceList\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.a, {\n          href: \"https://polaris.shopify.com/components/resource-item\",\n          children: \"ResourceItem\"\n        }), \" or a customized list item\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.a, {\n          href: \"https://polaris.shopify.com/components/filters\",\n          children: \"Filters\"\n        }), \" (optional)\"]\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Pagination component (optional)\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The resource list component provides the UI elements for list sorting, filtering, and pagination, but doesn’t provide the logic for these operations. When a sort option is changed, filter added, or second page requested, you’ll need to handle that event (including any network requests) and then update the component with new props.\"\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h2, {\n      id: \"purpose\",\n      children: \"Purpose\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Shopify is organized around objects that represent merchants businesses, like customers, products, and orders. Each individual order, for example, is given a dedicated page that can be linked to. In Shopify, we call these types of objects \", _jsx(_components.em, {\n        children: \"resources\"\n      }), \", and we call the object’s dedicated page its \", _jsx(_components.em, {\n        children: \"details page\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"problem\",\n      children: \"Problem\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Take orders as an example. Merchants may have a lot of them. They need a way to scan their orders, see what state they’re in and find out which ones need action first. In other words, they need a way find an individual order, call up more information about it, and take action on it.\"\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"solution\",\n      children: \"Solution\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Resource lists function as:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"A content format, presenting a set of individual resources in a compact form\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"A system for taking action on one or more individual resources\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"A way to navigate to an individual resource’s details page\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Because a details page displays all the content and actions for an individual resource, you can think of a resource list as a summary of these details pages. In this way resource lists bridge a middle level in Shopify’s navigation hierarchy.\"\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"a-resource-list-isnt-a-data-table\",\n      children: \"A resource list isn’t a data table\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"On wide screens, a resource list often looks like a table, especially if some content is aligned in columns. Despite this, resource lists and data tables have different purposes.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"A data table is a form of data visualization. It works best to present highly structured data for comparison and analysis.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"If your use case is more about visualizing or analyzing data, use the \", _jsx(_components.a, {\n        href: \"https://polaris.shopify.com/components/data-table\",\n        children: \"data table component\"\n      }), \". If your use case is more about finding and taking action on objects, use a resource list.\"]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h2, {\n      id: \"best-practices\",\n      children: \"Best practices\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Resource lists can live in many places in Shopify. You could include a short resource list in a card summarizing recent marketing activities. You could also dedicate an entire page to a resource list like Shopify’s main products list.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Resource lists should:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Have items that perform an action when clicked. The action should navigate to the resource’s details page or otherwise provide more detail about the item.\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.a, {\n          href: \"https://polaris.shopify.com/components/resource-item\",\n          children: \"Customize the content and layout\"\n        }), \" of their list items to support merchants’ needs.\"]\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Support sorting if the list can be long, and especially if different merchant tasks benefit from different sort orders.\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Support \", _jsx(_components.a, {\n          href: \"https://polaris.shopify.com/components/filters\",\n          children: \"filtering\"\n        }), \" if the list can be long.\"]\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Paginate when the current list contains more than 50 items.\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Use the \", _jsx(_components.a, {\n          href: \"https://polaris.shopify.com/components/skeleton-page\",\n          children: \"skeleton page\"\n        }), \" component on initial page load for the rest of the page if the loading prop is true and items are processing.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Resource lists can optionally:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Provide bulk actions for tasks that are often applied to many list items at once. For example, merchants may want to add the same tag to a large number of products.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h2, {\n      id: \"content-guidelines\",\n      children: \"Content guidelines\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Resource lists should:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Identify the type of resource, usually with a heading\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(DoDont, {\n      children: [_jsx(_components.h4, {\n        id: \"do\",\n        children: \"Do\"\n      }), _jsxs(_components.ul, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: \"Products\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"Showing 50 products\"\n        }), \"\\n\"]\n      }), _jsx(_components.h4, {\n        id: \"dont\",\n        children: \"Don’t\"\n      }), _jsxs(_components.ul, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: _jsx(_components.em, {\n            children: \"No heading\"\n          })\n        }), \"\\n\"]\n      })]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Indicate when not all members of a resource are being shown. For a card summarizing and linking to recently purchased products:\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(DoDont, {\n      children: [_jsx(_components.h4, {\n        id: \"do-1\",\n        children: \"Do\"\n      }), _jsxs(_components.ul, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: \"Popular products this week\"\n        }), \"\\n\"]\n      }), _jsx(_components.h4, {\n        id: \"dont-1\",\n        children: \"Don’t\"\n      }), _jsxs(_components.ul, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: \"Products\"\n        }), \"\\n\"]\n      })]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"Follow the verb + noun formula for bulk actions\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsxs(_components.p, {\n          children: [\"Follow the \", _jsx(_components.a, {\n            href: \"https://polaris.shopify.com/components/filters#content-guidelines\",\n            children: \"content guidelines for filter options and applied filters\"\n          })]\n        }), \"\\n\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h2, {\n      id: \"related-components\",\n      children: \"Related components\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"To present structured data for comparison and analysis, like when helping merchants to gain insights or review analytics, use the \", _jsx(_components.a, {\n          href: \"https://polaris.shopify.com/components/tables/data-table\",\n          children: \"data table component\"\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"To display a simple list of related content, \", _jsx(_components.a, {\n          href: \"https://polaris.shopify.com/components/lists/list\",\n          children: \"use the list component\"\n        })]\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"title":"Resource list","category":"Lists","keywords":["ResourceList","collections","items","objects","list of products","list of orders","product lists","order lists","collections lists","collection lists","list of collections","product listings list","channel lists","resource list attributes","list attributes","exceptions list","list secondary actions","secondary actions in a list","list of resources","filter","sort"],"examples":[{"fileName":"resource-list-default.tsx","title":"Default","description":"A resource list with simple items and no bulk actions, sorting, or filtering."},{"fileName":"resource-list-with-empty-state.tsx","title":"With empty state","description":"Use to explain the purpose of a list of resources when no resources exist yet. This allows a smooth transition from a list in a loading state to a list where zero, one, or many resources exist."},{"fileName":"resource-list-with-selection-and-no-bulk-actions.tsx","title":"With selection and no bulk actions","description":"A resource list with simple items and selection."},{"fileName":"resource-list-with-bulk-actions.tsx","title":"With bulk actions","description":"Allows merchants to select items and perform an action on the selection."},{"fileName":"resource-list-with-loading-state.tsx","title":"With loading state","description":"Notifies merchants that list items are being processed."},{"fileName":"resource-list-with-total-count.tsx","title":"With total count","description":"Use to indicate that the number of resources shown is a subset of the total number of resources in the list."},{"fileName":"resource-list-with-sorting.tsx","title":"With sorting","description":"Allows merchants to change the way the list is sorted by selecting one of several options from a [Select](https://polaris.shopify.com/components/select) control."},{"fileName":"resource-list-with-alternate-tool.tsx","title":"With alternate tool","description":"Allows merchants to add an alternate tool in the current sort option location when sort may not be the most relevant action for the current list."},{"fileName":"resource-list-with-filtering.tsx","title":"With filtering","description":"Allows merchants to narrow the resource list to a subset of the original items."},{"fileName":"resource-list-with-a-custom-empty-search-result-state.tsx","title":"With a custom empty search result state","description":"Allows merchants to narrow the resource list to a subset of the original items. If the filters or search applied return no results, then display a custom empty search state."},{"fileName":"resource-list-with-item-shortcut-actions.tsx","title":"With item shortcut actions","description":"Shortcut actions are intended to provide quick access to popular actions from the resource’s details page. They are shown when the mouse is hovered over the list item, and are not shown on small screen devices, so the action must also be accessible in another way."},{"fileName":"resource-list-with-persistent-item-shortcut-actions.tsx","title":"With persistent item shortcut actions","description":"Use persistent shortcut actions in rare cases when the action cannot be made available on the item’s details page. Persistent shortcut actions roll up into an overflow menu on small screens."},{"fileName":"resource-list-with-multiselect.tsx","title":"With multiselect","description":"Allows merchants to select or deselect multiple items at once."},{"fileName":"resource-list-with-all-of-its-elements.tsx","title":"With all of its elements","description":"Use as a broad example that includes most props available to resource list."},{"fileName":"resource-list-with-pagination.tsx","title":"With pagination","description":"Use when the list contains many rows and they need paginating."}],"previewImg":"/images/components/lists/resource-list.png"},"scope":{"__remarkNextMdxImporter":{}}},"examples":[{"fileName":"resource-list-default.tsx","title":"Default","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"A resource list with simple items and no bulk actions, sorting, or filtering.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {\n  LegacyCard,\n  ResourceList,\n  Avatar,\n  ResourceItem,\n  Text,\n} from '@shopify/polaris';\nimport React from 'react';\n\nfunction ResourceListExample() {\n  return (\n    <LegacyCard>\n      <ResourceList\n        resourceName={{singular: 'customer', plural: 'customers'}}\n        items={[\n          {\n            id: '100',\n            url: '#',\n            name: 'Mae Jemison',\n            location: 'Decatur, USA',\n          },\n          {\n            id: '200',\n            url: '#',\n            name: 'Ellen Ochoa',\n            location: 'Los Angeles, USA',\n          },\n        ]}\n        renderItem={(item) => {\n          const {id, url, name, location} = item;\n          const media = <Avatar customer size=\"md\" name={name} />;\n\n          return (\n            <ResourceItem\n              id={id}\n              url={url}\n              media={media}\n              accessibilityLabel={`View details for ${name}`}\n            >\n              <Text variant=\"bodyMd\" fontWeight=\"bold\" as=\"h3\">\n                {name}\n              </Text>\n              <div>{location}</div>\n            </ResourceItem>\n          );\n        }}\n      />\n    </LegacyCard>\n  );\n}\n\n"},{"fileName":"resource-list-with-empty-state.tsx","title":"With empty state","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Use to explain the purpose of a list of resources when no resources exist yet. This allows a smooth transition from a list in a loading state to a list where zero, one, or many resources exist.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {\n  LegacyFilters,\n  EmptyState,\n  Page,\n  Layout,\n  LegacyCard,\n  ResourceList,\n} from '@shopify/polaris';\nimport React from 'react';\n\nfunction ResourceListWithEmptyStateExample() {\n  const items: any[] = [];\n  const appliedFilters: any[] = [];\n  const filters: any[] = [];\n\n  const filterControl = (\n    <LegacyFilters\n      disabled={!items.length}\n      queryValue=\"\"\n      filters={filters}\n      appliedFilters={appliedFilters}\n      onClearAll={() => undefined}\n      onQueryChange={() => undefined}\n      onQueryClear={() => undefined}\n    />\n  );\n\n  const emptyStateMarkup =\n    !appliedFilters.length && !items.length ? (\n      <EmptyState\n        heading=\"Upload a file to get started\"\n        action={{content: 'Upload files'}}\n        image=\"https://cdn.shopify.com/s/files/1/2376/3301/products/emptystate-files.png\"\n      >\n        <p>\n          You can use the Files section to upload images, videos, and other\n          documents\n        </p>\n      </EmptyState>\n    ) : undefined;\n\n  return (\n    <Page title=\"Files\">\n      <Layout>\n        <Layout.Section>\n          <LegacyCard>\n            <ResourceList\n              emptyState={emptyStateMarkup}\n              items={items}\n              renderItem={() => <></>}\n              filterControl={filterControl}\n              resourceName={{singular: 'file', plural: 'files'}}\n            />\n          </LegacyCard>\n        </Layout.Section>\n      </Layout>\n    </Page>\n  );\n}\n\n"},{"fileName":"resource-list-with-selection-and-no-bulk-actions.tsx","title":"With selection and no bulk actions","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"A resource list with simple items and selection.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {\n  LegacyCard,\n  ResourceList,\n  Avatar,\n  ResourceItem,\n  Text,\n} from '@shopify/polaris';\nimport type {ResourceListProps} from '@shopify/polaris';\nimport {useState} from 'react';\n\nfunction ResourceListWithSelectionExample() {\n  const [selectedItems, setSelectedItems] = useState<\n    ResourceListProps['selectedItems']\n  >([]);\n\n  const resourceName = {\n    singular: 'customer',\n    plural: 'customers',\n  };\n\n  const items = [\n    {\n      id: '101',\n      url: '#',\n      name: 'Mae Jemison',\n      location: 'Decatur, USA',\n    },\n    {\n      id: '201',\n      url: '#',\n      name: 'Ellen Ochoa',\n      location: 'Los Angeles, USA',\n    },\n  ];\n\n  return (\n    <LegacyCard>\n      <ResourceList\n        resourceName={resourceName}\n        items={items}\n        renderItem={renderItem}\n        selectedItems={selectedItems}\n        onSelectionChange={setSelectedItems}\n        selectable\n      />\n    </LegacyCard>\n  );\n\n  function renderItem(item: typeof items[number]) {\n    const {id, url, name, location} = item;\n    const media = <Avatar customer size=\"md\" name={name} />;\n\n    return (\n      <ResourceItem\n        id={id}\n        url={url}\n        media={media}\n        accessibilityLabel={`View details for ${name}`}\n      >\n        <Text variant=\"bodyMd\" fontWeight=\"bold\" as=\"h3\">\n          {name}\n        </Text>\n        <div>{location}</div>\n      </ResourceItem>\n    );\n  }\n}\n\n"},{"fileName":"resource-list-with-bulk-actions.tsx","title":"With bulk actions","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Allows merchants to select items and perform an action on the selection.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {\n  LegacyCard,\n  ResourceList,\n  Avatar,\n  ResourceItem,\n  Text,\n} from '@shopify/polaris';\nimport type {ResourceListProps} from '@shopify/polaris';\nimport {useState} from 'react';\n\nfunction ResourceListWithBulkActionsExample() {\n  const [selectedItems, setSelectedItems] = useState<\n    ResourceListProps['selectedItems']\n  >([]);\n\n  const resourceName = {\n    singular: 'customer',\n    plural: 'customers',\n  };\n\n  const items = [\n    {\n      id: '103',\n      url: '#',\n      name: 'Mae Jemison',\n      location: 'Decatur, USA',\n    },\n    {\n      id: '203',\n      url: '#',\n      name: 'Ellen Ochoa',\n      location: 'Los Angeles, USA',\n    },\n  ];\n\n  const promotedBulkActions = [\n    {\n      content: 'Edit customers',\n      onAction: () => console.log('Todo: implement bulk edit'),\n    },\n  ];\n\n  const bulkActions = [\n    {\n      content: 'Add tags',\n      onAction: () => console.log('Todo: implement bulk add tags'),\n    },\n    {\n      content: 'Remove tags',\n      onAction: () => console.log('Todo: implement bulk remove tags'),\n    },\n    {\n      content: 'Delete customers',\n      onAction: () => console.log('Todo: implement bulk delete'),\n    },\n  ];\n\n  return (\n    <LegacyCard>\n      <ResourceList\n        resourceName={resourceName}\n        items={items}\n        renderItem={renderItem}\n        selectedItems={selectedItems}\n        onSelectionChange={setSelectedItems}\n        promotedBulkActions={promotedBulkActions}\n        bulkActions={bulkActions}\n      />\n    </LegacyCard>\n  );\n\n  function renderItem(item: typeof items[number]) {\n    const {id, url, name, location} = item;\n    const media = <Avatar customer size=\"md\" name={name} />;\n\n    return (\n      <ResourceItem\n        id={id}\n        url={url}\n        media={media}\n        accessibilityLabel={`View details for ${name}`}\n      >\n        <Text variant=\"bodyMd\" fontWeight=\"bold\" as=\"h3\">\n          {name}\n        </Text>\n        <div>{location}</div>\n      </ResourceItem>\n    );\n  }\n}\n\n"},{"fileName":"resource-list-with-loading-state.tsx","title":"With loading state","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Notifies merchants that list items are being processed.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {\n  LegacyCard,\n  ResourceList,\n  Avatar,\n  ResourceItem,\n  Text,\n} from '@shopify/polaris';\nimport type {ResourceListProps} from '@shopify/polaris';\nimport {useState} from 'react';\n\nfunction ResourceListWithLoadingExample() {\n  const [selectedItems, setSelectedItems] = useState<\n    ResourceListProps['selectedItems']\n  >([]);\n\n  const resourceName = {\n    singular: 'customer',\n    plural: 'customers',\n  };\n\n  const items = [\n    {\n      id: '104',\n      url: '#',\n      name: 'Mae Jemison',\n      location: 'Decatur, USA',\n    },\n    {\n      id: '204',\n      url: '#',\n      name: 'Ellen Ochoa',\n      location: 'Los Angeles, USA',\n    },\n  ];\n\n  const promotedBulkActions = [\n    {\n      content: 'Edit customers',\n      onAction: () => console.log('Todo: implement bulk edit'),\n    },\n  ];\n\n  const bulkActions = [\n    {\n      content: 'Add tags',\n      onAction: () => console.log('Todo: implement bulk add tags'),\n    },\n    {\n      content: 'Remove tags',\n      onAction: () => console.log('Todo: implement bulk remove tags'),\n    },\n    {\n      content: 'Delete customers',\n      onAction: () => console.log('Todo: implement bulk delete'),\n    },\n  ];\n\n  return (\n    <LegacyCard>\n      <ResourceList\n        resourceName={resourceName}\n        items={items}\n        renderItem={renderItem}\n        selectedItems={selectedItems}\n        onSelectionChange={setSelectedItems}\n        promotedBulkActions={promotedBulkActions}\n        bulkActions={bulkActions}\n        loading\n      />\n    </LegacyCard>\n  );\n\n  function renderItem(item: {\n    id: string;\n    url: string;\n    name: string;\n    location: string;\n  }) {\n    const {id, url, name, location} = item;\n    const media = <Avatar customer size=\"md\" name={name} />;\n\n    return (\n      <ResourceItem\n        id={id}\n        url={url}\n        media={media}\n        accessibilityLabel={`View details for ${name}`}\n      >\n        <Text variant=\"bodyMd\" fontWeight=\"bold\" as=\"h3\">\n          {name}\n        </Text>\n        <div>{location}</div>\n      </ResourceItem>\n    );\n  }\n}\n\n"},{"fileName":"resource-list-with-total-count.tsx","title":"With total count","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Use to indicate that the number of resources shown is a subset of the total number of resources in the list.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {\n  LegacyCard,\n  ResourceList,\n  Avatar,\n  ResourceItem,\n  Text,\n} from '@shopify/polaris';\nimport React from 'react';\n\nfunction ResourceListWithTotalItemsCount() {\n  return (\n    <LegacyCard>\n      <ResourceList\n        resourceName={{singular: 'customer', plural: 'customers'}}\n        items={[\n          {\n            id: '105',\n            url: '#',\n            name: 'Mae Jemison',\n            location: 'Decatur, USA',\n          },\n          {\n            id: '205',\n            url: '#',\n            name: 'Ellen Ochoa',\n            location: 'Los Angeles, USA',\n          },\n        ]}\n        renderItem={(item) => {\n          const {id, url, name, location} = item;\n          const media = <Avatar customer size=\"md\" name={name} />;\n\n          return (\n            <ResourceItem\n              id={id}\n              url={url}\n              media={media}\n              accessibilityLabel={`View details for ${name}`}\n            >\n              <Text variant=\"bodyMd\" fontWeight=\"bold\" as=\"h3\">\n                {name}\n              </Text>\n              <div>{location}</div>\n            </ResourceItem>\n          );\n        }}\n        showHeader\n        totalItemsCount={50}\n      />\n    </LegacyCard>\n  );\n}\n\n"},{"fileName":"resource-list-with-sorting.tsx","title":"With sorting","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_components.p, {\n    children: [\"Allows merchants to change the way the list is sorted by selecting one of several options from a \", _jsx(_components.a, {\n      href: \"https://polaris.shopify.com/components/select\",\n      children: \"Select\"\n    }), \" control.\"]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {\n  LegacyCard,\n  ResourceList,\n  Avatar,\n  ResourceItem,\n  Text,\n} from '@shopify/polaris';\nimport {useState} from 'react';\n\nfunction ResourceListWithSortingExample() {\n  const [sortValue, setSortValue] = useState('DATE_MODIFIED_DESC');\n\n  const resourceName = {\n    singular: 'customer',\n    plural: 'customers',\n  };\n\n  const items = [\n    {\n      id: '106',\n      url: '#',\n      name: 'Mae Jemison',\n      location: 'Decatur, USA',\n    },\n    {\n      id: '206',\n      url: '#',\n      name: 'Ellen Ochoa',\n      location: 'Los Angeles, USA',\n    },\n  ];\n\n  return (\n    <LegacyCard>\n      <ResourceList\n        resourceName={resourceName}\n        items={items}\n        renderItem={renderItem}\n        sortValue={sortValue}\n        sortOptions={[\n          {label: 'Newest update', value: 'DATE_MODIFIED_DESC'},\n          {label: 'Oldest update', value: 'DATE_MODIFIED_ASC'},\n        ]}\n        onSortChange={(selected) => {\n          setSortValue(selected);\n          console.log(`Sort option changed to ${selected}.`);\n        }}\n      />\n    </LegacyCard>\n  );\n\n  function renderItem(item: typeof items[number]) {\n    const {id, url, name, location} = item;\n    const media = <Avatar customer size=\"md\" name={name} />;\n\n    return (\n      <ResourceItem\n        id={id}\n        url={url}\n        media={media}\n        accessibilityLabel={`View details for ${name}`}\n      >\n        <Text variant=\"bodyMd\" fontWeight=\"bold\" as=\"h3\">\n          {name}\n        </Text>\n        <div>{location}</div>\n      </ResourceItem>\n    );\n  }\n}\n\n"},{"fileName":"resource-list-with-alternate-tool.tsx","title":"With alternate tool","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Allows merchants to add an alternate tool in the current sort option location when sort may not be the most relevant action for the current list.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {\n  LegacyCard,\n  ResourceList,\n  Button,\n  Avatar,\n  ResourceItem,\n  Text,\n} from '@shopify/polaris';\nimport React from 'react';\n\nfunction ResourceListWithAlternateToolExample() {\n  const resourceName = {\n    singular: 'Customer',\n    plural: 'Customers',\n  };\n\n  const items = [\n    {\n      id: '107',\n      url: '#',\n      name: 'Mae Jemison',\n      location: 'Decatur, USA',\n    },\n    {\n      id: '207',\n      url: '#',\n      name: 'Ellen Ochoa',\n      location: 'Los Angeles, USA',\n    },\n  ];\n\n  return (\n    <LegacyCard>\n      <ResourceList\n        items={items}\n        renderItem={renderItem}\n        resourceName={resourceName}\n        alternateTool={<Button>Email customers</Button>}\n      />\n    </LegacyCard>\n  );\n\n  function renderItem(item: typeof items[number]) {\n    const {id, url, name, location} = item;\n    const media = <Avatar customer size=\"md\" name={name} />;\n\n    return (\n      <ResourceItem\n        id={id}\n        url={url}\n        media={media}\n        accessibilityLabel={`View details for ${name}`}\n      >\n        <Text variant=\"bodyMd\" fontWeight=\"bold\" as=\"h3\">\n          {name}\n        </Text>\n        <div>{location}</div>\n      </ResourceItem>\n    );\n  }\n}\n\n"},{"fileName":"resource-list-with-filtering.tsx","title":"With filtering","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Allows merchants to narrow the resource list to a subset of the original items.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {\n  TextField,\n  LegacyFilters,\n  Button,\n  LegacyCard,\n  ResourceList,\n  Avatar,\n  ResourceItem,\n  Text,\n} from '@shopify/polaris';\nimport {useState, useCallback} from 'react';\n\nfunction ResourceListWithFilteringExample() {\n  const [taggedWith, setTaggedWith] = useState<string | undefined>('VIP');\n  const [queryValue, setQueryValue] = useState<string | undefined>(undefined);\n\n  const handleTaggedWithChange = useCallback(\n    (value: any) => setTaggedWith(value),\n    [],\n  );\n  const handleTaggedWithRemove = useCallback(\n    () => setTaggedWith(undefined),\n    [],\n  );\n  const handleQueryValueRemove = useCallback(\n    () => setQueryValue(undefined),\n    [],\n  );\n  const handleClearAll = useCallback(() => {\n    handleTaggedWithRemove();\n    handleQueryValueRemove();\n  }, [handleQueryValueRemove, handleTaggedWithRemove]);\n\n  const resourceName = {\n    singular: 'customer',\n    plural: 'customers',\n  };\n\n  const items = [\n    {\n      id: '108',\n      url: '#',\n      name: 'Mae Jemison',\n      location: 'Decatur, USA',\n    },\n    {\n      id: '208',\n      url: '#',\n      name: 'Ellen Ochoa',\n      location: 'Los Angeles, USA',\n    },\n  ];\n\n  const filters = [\n    {\n      key: 'taggedWith1',\n      label: 'Tagged with',\n      filter: (\n        <TextField\n          label=\"Tagged with\"\n          value={taggedWith}\n          onChange={handleTaggedWithChange}\n          autoComplete=\"off\"\n          labelHidden\n        />\n      ),\n      shortcut: true,\n    },\n  ];\n\n  const appliedFilters =\n    taggedWith && !isEmpty(taggedWith)\n      ? [\n          {\n            key: 'taggedWith1',\n            label: disambiguateLabel('taggedWith1', taggedWith),\n            onRemove: handleTaggedWithRemove,\n          },\n        ]\n      : [];\n\n  const filterControl = (\n    <LegacyFilters\n      queryValue={queryValue}\n      filters={filters}\n      appliedFilters={appliedFilters}\n      onQueryChange={setQueryValue}\n      onQueryClear={handleQueryValueRemove}\n      onClearAll={handleClearAll}\n    >\n      <div style={{paddingLeft: '8px'}}>\n        <Button onClick={() => console.log('New filter saved')}>Save</Button>\n      </div>\n    </LegacyFilters>\n  );\n\n  return (\n    <LegacyCard>\n      <ResourceList\n        resourceName={resourceName}\n        items={items}\n        renderItem={renderItem}\n        filterControl={filterControl}\n      />\n    </LegacyCard>\n  );\n\n  function renderItem(item: typeof items[number]) {\n    const {id, url, name, location} = item;\n    const media = <Avatar customer size=\"md\" name={name} />;\n\n    return (\n      <ResourceItem id={id} url={url} media={media}>\n        <Text variant=\"bodyMd\" fontWeight=\"bold\" as=\"h3\">\n          {name}\n        </Text>\n        <div>{location}</div>\n      </ResourceItem>\n    );\n  }\n\n  function disambiguateLabel(key: string, value: string): string {\n    switch (key) {\n      case 'taggedWith1':\n        return `Tagged with ${value}`;\n      default:\n        return value;\n    }\n  }\n\n  function isEmpty(value: string): boolean {\n    if (Array.isArray(value)) {\n      return value.length === 0;\n    } else {\n      return value === '' || value == null;\n    }\n  }\n}\n\n"},{"fileName":"resource-list-with-a-custom-empty-search-result-state.tsx","title":"With a custom empty search result state","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Allows merchants to narrow the resource list to a subset of the original items. If the filters or search applied return no results, then display a custom empty search state.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {\n  TextField,\n  LegacyFilters,\n  Button,\n  LegacyCard,\n  ResourceList,\n  Avatar,\n  ResourceItem,\n  Text,\n} from '@shopify/polaris';\nimport {useState, useCallback} from 'react';\n\nfunction ResourceListWithFilteringExample() {\n  const [taggedWith, setTaggedWith] = useState<string | undefined>('VIP');\n  const [queryValue, setQueryValue] = useState<string | undefined>(undefined);\n  const [items, setItems] = useState([]);\n\n  const handleTaggedWithChange = useCallback(\n    (value: string) => setTaggedWith(value),\n    [],\n  );\n  const handleQueryValueChange = useCallback((value: string) => {\n    setQueryValue(value);\n    setItems([]);\n  }, []);\n  const handleTaggedWithRemove = useCallback(\n    () => setTaggedWith(undefined),\n    [],\n  );\n  const handleQueryValueRemove = useCallback(\n    () => setQueryValue(undefined),\n    [],\n  );\n  const handleClearAll = useCallback(() => {\n    handleTaggedWithRemove();\n    handleQueryValueRemove();\n  }, [handleQueryValueRemove, handleTaggedWithRemove]);\n\n  const resourceName = {\n    singular: 'customer',\n    plural: 'customers',\n  };\n\n  const filters = [\n    {\n      key: 'taggedWith2',\n      label: 'Tagged with',\n      filter: (\n        <TextField\n          label=\"Tagged with\"\n          value={taggedWith}\n          onChange={handleTaggedWithChange}\n          autoComplete=\"off\"\n          labelHidden\n        />\n      ),\n      shortcut: true,\n    },\n  ];\n\n  const appliedFilters =\n    taggedWith && !isEmpty(taggedWith)\n      ? [\n          {\n            key: 'taggedWith2',\n            label: disambiguateLabel('taggedWith2', taggedWith),\n            onRemove: handleTaggedWithRemove,\n          },\n        ]\n      : [];\n\n  const filterControl = (\n    <LegacyFilters\n      queryValue={queryValue}\n      filters={filters}\n      appliedFilters={appliedFilters}\n      onQueryChange={handleQueryValueChange}\n      onQueryClear={handleQueryValueRemove}\n      onClearAll={handleClearAll}\n    >\n      <div style={{paddingLeft: '8px'}}>\n        <Button onClick={() => console.log('New filter saved')}>Save</Button>\n      </div>\n    </LegacyFilters>\n  );\n\n  return (\n    <LegacyCard>\n      <ResourceList\n        resourceName={resourceName}\n        items={items}\n        renderItem={renderItem}\n        filterControl={filterControl}\n        emptySearchState={<div>This is a custom empty state</div>}\n      />\n    </LegacyCard>\n  );\n\n  function renderItem(item: {\n    id: string;\n    url: string;\n    name: string;\n    location: string;\n  }) {\n    const {id, url, name, location} = item;\n    const media = <Avatar customer size=\"md\" name={name} />;\n\n    return (\n      <ResourceItem id={id} url={url} media={media}>\n        <Text variant=\"bodyMd\" fontWeight=\"bold\" as=\"h3\">\n          {name}\n        </Text>\n        <div>{location}</div>\n      </ResourceItem>\n    );\n  }\n\n  function disambiguateLabel(key: string, value: string): string {\n    switch (key) {\n      case 'taggedWith2':\n        return `Tagged with ${value}`;\n      default:\n        return value;\n    }\n  }\n\n  function isEmpty(value: string): boolean {\n    if (Array.isArray(value)) {\n      return value.length === 0;\n    } else {\n      return value === '' || value == null;\n    }\n  }\n}\n\n"},{"fileName":"resource-list-with-item-shortcut-actions.tsx","title":"With item shortcut actions","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Shortcut actions are intended to provide quick access to popular actions from the resource’s details page. They are shown when the mouse is hovered over the list item, and are not shown on small screen devices, so the action must also be accessible in another way.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {\n  LegacyCard,\n  ResourceList,\n  Avatar,\n  ResourceItem,\n  Text,\n} from '@shopify/polaris';\nimport React from 'react';\n\nfunction ResourceListExample() {\n  return (\n    <LegacyCard>\n      <ResourceList\n        resourceName={{singular: 'customer', plural: 'customers'}}\n        items={[\n          {\n            id: '109',\n            url: '#',\n            name: 'Mae Jemison',\n            location: 'Decatur, USA',\n            latestOrderUrl: '#',\n          },\n          {\n            id: '209',\n            url: '#',\n            name: 'Ellen Ochoa',\n            location: 'Los Angeles, USA',\n            latestOrderUrl: '#',\n          },\n        ]}\n        renderItem={(item) => {\n          const {id, url, name, location, latestOrderUrl} = item;\n          const media = <Avatar customer size=\"md\" name={name} />;\n          const shortcutActions = latestOrderUrl\n            ? [\n                {\n                  content: 'View latest order',\n                  accessibilityLabel: `View ${name}’s latest order`,\n                  url: latestOrderUrl,\n                },\n              ]\n            : undefined;\n\n          return (\n            <ResourceItem\n              id={id}\n              url={url}\n              media={media}\n              accessibilityLabel={`View details for ${name}`}\n              shortcutActions={shortcutActions}\n            >\n              <Text variant=\"bodyMd\" fontWeight=\"bold\" as=\"h3\">\n                {name}\n              </Text>\n              <div>{location}</div>\n            </ResourceItem>\n          );\n        }}\n      />\n    </LegacyCard>\n  );\n}\n\n"},{"fileName":"resource-list-with-persistent-item-shortcut-actions.tsx","title":"With persistent item shortcut actions","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Use persistent shortcut actions in rare cases when the action cannot be made available on the item’s details page. Persistent shortcut actions roll up into an overflow menu on small screens.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {\n  LegacyCard,\n  ResourceList,\n  Avatar,\n  ResourceItem,\n  Text,\n} from '@shopify/polaris';\nimport React from 'react';\n\nfunction ResourceListExample() {\n  return (\n    <LegacyCard>\n      <ResourceList\n        resourceName={{singular: 'customer', plural: 'customers'}}\n        items={[\n          {\n            id: '110',\n            url: '#',\n            name: 'Mae Jemison',\n            location: 'Decatur, USA',\n            latestOrderUrl: '#',\n          },\n          {\n            id: '210',\n            url: '#',\n            name: 'Ellen Ochoa',\n            location: 'Los Angeles, USA',\n            latestOrderUrl: '#',\n          },\n        ]}\n        renderItem={(item) => {\n          const {id, url, name, location, latestOrderUrl} = item;\n          const media = <Avatar customer size=\"md\" name={name} />;\n          const shortcutActions = latestOrderUrl\n            ? [\n                {\n                  content: 'View latest order',\n                  accessibilityLabel: `View ${name}’s latest order`,\n                  url: latestOrderUrl,\n                },\n              ]\n            : undefined;\n\n          return (\n            <ResourceItem\n              id={id}\n              url={url}\n              media={media}\n              accessibilityLabel={`View details for ${name}`}\n              shortcutActions={shortcutActions}\n              persistActions\n            >\n              <Text variant=\"bodyMd\" fontWeight=\"bold\" as=\"h3\">\n                {name}\n              </Text>\n              <div>{location}</div>\n            </ResourceItem>\n          );\n        }}\n      />\n    </LegacyCard>\n  );\n}\n\n"},{"fileName":"resource-list-with-multiselect.tsx","title":"With multiselect","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Allows merchants to select or deselect multiple items at once.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {\n  LegacyCard,\n  ResourceList,\n  Avatar,\n  ResourceItem,\n  Text,\n} from '@shopify/polaris';\nimport type {ResourceListProps} from '@shopify/polaris';\nimport {useState} from 'react';\n\nfunction ResourceListExample() {\n  const [selectedItems, setSelectedItems] = useState<\n    ResourceListProps['selectedItems']\n  >([]);\n\n  const resourceName = {\n    singular: 'customer',\n    plural: 'customers',\n  };\n\n  const items = [\n    {\n      id: '111',\n      url: '#',\n      name: 'Mae Jemison',\n      location: 'Decatur, USA',\n    },\n    {\n      id: '211',\n      url: '#',\n      name: 'Ellen Ochoa',\n      location: 'Los Angeles, USA',\n    },\n    {\n      id: '311',\n      url: '#',\n      name: 'Joe Smith',\n      location: 'Arizona, USA',\n    },\n    {\n      id: '411',\n      url: '#',\n      name: 'Haden Jerado',\n      location: 'Decatur, USA',\n    },\n    {\n      id: '511',\n      url: '#',\n      name: 'Tom Thommas',\n      location: 'Florida, USA',\n    },\n    {\n      id: '611',\n      url: '#',\n      name: 'Emily Amrak',\n      location: 'Texas, USA',\n    },\n  ];\n\n  const promotedBulkActions = [\n    {\n      content: 'Edit customers',\n      onAction: () => console.log('Todo: implement bulk edit'),\n    },\n  ];\n\n  const bulkActions = [\n    {\n      content: 'Add tags',\n      onAction: () => console.log('Todo: implement bulk add tags'),\n    },\n    {\n      content: 'Remove tags',\n      onAction: () => console.log('Todo: implement bulk remove tags'),\n    },\n    {\n      content: 'Delete customers',\n      onAction: () => console.log('Todo: implement bulk delete'),\n    },\n  ];\n\n  return (\n    <LegacyCard>\n      <ResourceList\n        resourceName={resourceName}\n        items={items}\n        renderItem={renderItem}\n        selectedItems={selectedItems}\n        onSelectionChange={setSelectedItems}\n        promotedBulkActions={promotedBulkActions}\n        bulkActions={bulkActions}\n        resolveItemId={resolveItemIds}\n      />\n    </LegacyCard>\n  );\n\n  function renderItem(item: typeof items[number], _: string, index: number) {\n    const {id, url, name, location} = item;\n    const media = <Avatar customer size=\"md\" name={name} />;\n\n    return (\n      <ResourceItem\n        id={id}\n        url={url}\n        media={media}\n        sortOrder={index}\n        accessibilityLabel={`View details for ${name}`}\n      >\n        <Text variant=\"bodyMd\" fontWeight=\"bold\" as=\"h3\">\n          {name}\n        </Text>\n        <div>{location}</div>\n      </ResourceItem>\n    );\n  }\n\n  function resolveItemIds({id}: {id: string}) {\n    return id;\n  }\n}\n\n"},{"fileName":"resource-list-with-all-of-its-elements.tsx","title":"With all of its elements","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Use as a broad example that includes most props available to resource list.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {\n  TextField,\n  LegacyFilters,\n  Button,\n  LegacyCard,\n  ResourceList,\n  Avatar,\n  ResourceItem,\n  Text,\n} from '@shopify/polaris';\nimport type {ResourceListProps} from '@shopify/polaris';\nimport {useState, useCallback} from 'react';\n\nfunction ResourceListExample() {\n  const [selectedItems, setSelectedItems] = useState<\n    ResourceListProps['selectedItems']\n  >([]);\n  const [sortValue, setSortValue] = useState('DATE_MODIFIED_DESC');\n  const [taggedWith, setTaggedWith] = useState<string | undefined>('VIP');\n  const [queryValue, setQueryValue] = useState<string | undefined>(undefined);\n\n  const handleTaggedWithChange = useCallback(\n    (value: string) => setTaggedWith(value),\n    [],\n  );\n  const handleQueryValueChange = useCallback(\n    (value: string) => setQueryValue(value),\n    [],\n  );\n  const handleTaggedWithRemove = useCallback(\n    () => setTaggedWith(undefined),\n    [],\n  );\n  const handleQueryValueRemove = useCallback(\n    () => setQueryValue(undefined),\n    [],\n  );\n  const handleClearAll = useCallback(() => {\n    handleTaggedWithRemove();\n    handleQueryValueRemove();\n  }, [handleQueryValueRemove, handleTaggedWithRemove]);\n\n  const resourceName = {\n    singular: 'customer',\n    plural: 'customers',\n  };\n\n  const items = [\n    {\n      id: '112',\n      url: '#',\n      name: 'Mae Jemison',\n      location: 'Decatur, USA',\n      latestOrderUrl: 'orders/1456',\n    },\n    {\n      id: '212',\n      url: '#',\n      name: 'Ellen Ochoa',\n      location: 'Los Angeles, USA',\n      latestOrderUrl: 'orders/1457',\n    },\n  ];\n\n  const promotedBulkActions = [\n    {\n      content: 'Edit customers',\n      onAction: () => console.log('Todo: implement bulk edit'),\n    },\n  ];\n\n  const bulkActions = [\n    {\n      content: 'Add tags',\n      onAction: () => console.log('Todo: implement bulk add tags'),\n    },\n    {\n      content: 'Remove tags',\n      onAction: () => console.log('Todo: implement bulk remove tags'),\n    },\n    {\n      content: 'Delete customers',\n      onAction: () => console.log('Todo: implement bulk delete'),\n    },\n  ];\n\n  const filters = [\n    {\n      key: 'taggedWith3',\n      label: 'Tagged with',\n      filter: (\n        <TextField\n          label=\"Tagged with\"\n          value={taggedWith}\n          onChange={handleTaggedWithChange}\n          autoComplete=\"off\"\n          labelHidden\n        />\n      ),\n      shortcut: true,\n    },\n  ];\n\n  const appliedFilters =\n    taggedWith && !isEmpty(taggedWith)\n      ? [\n          {\n            key: 'taggedWith3',\n            label: disambiguateLabel('taggedWith3', taggedWith),\n            onRemove: handleTaggedWithRemove,\n          },\n        ]\n      : [];\n\n  const filterControl = (\n    <LegacyFilters\n      queryValue={queryValue}\n      filters={filters}\n      appliedFilters={appliedFilters}\n      onQueryChange={handleQueryValueChange}\n      onQueryClear={handleQueryValueRemove}\n      onClearAll={handleClearAll}\n    >\n      <div style={{paddingLeft: '8px'}}>\n        <Button onClick={() => console.log('New filter saved')}>Save</Button>\n      </div>\n    </LegacyFilters>\n  );\n\n  return (\n    <LegacyCard>\n      <ResourceList\n        resourceName={resourceName}\n        items={items}\n        renderItem={renderItem}\n        selectedItems={selectedItems}\n        onSelectionChange={setSelectedItems}\n        promotedBulkActions={promotedBulkActions}\n        bulkActions={bulkActions}\n        sortValue={sortValue}\n        sortOptions={[\n          {label: 'Newest update', value: 'DATE_MODIFIED_DESC'},\n          {label: 'Oldest update', value: 'DATE_MODIFIED_ASC'},\n        ]}\n        onSortChange={(selected) => {\n          setSortValue(selected);\n          console.log(`Sort option changed to ${selected}.`);\n        }}\n        filterControl={filterControl}\n      />\n    </LegacyCard>\n  );\n\n  function renderItem(item: typeof items[number]) {\n    const {id, url, name, location, latestOrderUrl} = item;\n    const media = <Avatar customer size=\"md\" name={name} />;\n    const shortcutActions = latestOrderUrl\n      ? [{content: 'View latest order', url: latestOrderUrl}]\n      : undefined;\n    return (\n      <ResourceItem\n        id={id}\n        url={url}\n        media={media}\n        accessibilityLabel={`View details for ${name}`}\n        shortcutActions={shortcutActions}\n        persistActions\n      >\n        <Text variant=\"bodyMd\" fontWeight=\"bold\" as=\"h3\">\n          {name}\n        </Text>\n        <div>{location}</div>\n      </ResourceItem>\n    );\n  }\n\n  function disambiguateLabel(key: string, value: string): string {\n    switch (key) {\n      case 'taggedWith3':\n        return `Tagged with ${value}`;\n      default:\n        return value;\n    }\n  }\n\n  function isEmpty(value: string): boolean {\n    if (Array.isArray(value)) {\n      return value.length === 0;\n    } else {\n      return value === '' || value == null;\n    }\n  }\n}\n\n"},{"fileName":"resource-list-with-pagination.tsx","title":"With pagination","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Use when the list contains many rows and they need paginating.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {\n  LegacyCard,\n  ResourceList,\n  Avatar,\n  ResourceItem,\n  Text,\n} from '@shopify/polaris';\nimport React from 'react';\n\nfunction ResourceListWithPaginationExample() {\n  return (\n    <LegacyCard>\n      <ResourceList\n        resourceName={{singular: 'customer', plural: 'customers'}}\n        items={[\n          {\n            id: '100',\n            url: '#',\n            name: 'Mae Jemison',\n            location: 'Decatur, USA',\n          },\n          {\n            id: '200',\n            url: '#',\n            name: 'Ellen Ochoa',\n            location: 'Los Angeles, USA',\n          },\n        ]}\n        pagination={{\n          hasNext: true,\n          onNext: () => {},\n        }}\n        renderItem={(item) => {\n          const {id, url, name, location} = item;\n          const media = <Avatar customer size=\"md\" name={name} />;\n\n          return (\n            <ResourceItem\n              id={id}\n              url={url}\n              media={media}\n              accessibilityLabel={`View details for ${name}`}\n            >\n              <Text variant=\"bodyMd\" fontWeight=\"bold\" as=\"h3\">\n                {name}\n              </Text>\n              <div>{location}</div>\n            </ResourceItem>\n          );\n        }}\n      />\n    </LegacyCard>\n  );\n}\n\n"}],"seoDescription":"A resource list displays a collection of objects of the same type, like products or customers. The main job of a resource list is to help merchants find an object and navigate to a full-page representation of it.","type":{"ResourceListProps":{"filePath":"polaris-react/src/components/ResourceList/ResourceList.tsx","name":"ResourceListProps","description":"","members":[{"filePath":"polaris-react/src/components/ResourceList/ResourceList.tsx","syntaxKind":"PropertySignature","name":"items","value":"TItemType[]","description":"Item data; each item is passed to renderItem"},{"filePath":"polaris-react/src/components/ResourceList/ResourceList.tsx","syntaxKind":"PropertySignature","name":"filterControl","value":"React.ReactNode","description":"","isOptional":true},{"filePath":"polaris-react/src/components/ResourceList/ResourceList.tsx","syntaxKind":"PropertySignature","name":"flushFilters","value":"boolean","description":"Whether to remove all padding around the filter controls. Should be true if using Filters, and false if using LegacyFilters.","isOptional":true},{"filePath":"polaris-react/src/components/ResourceList/ResourceList.tsx","syntaxKind":"PropertySignature","name":"emptyState","value":"React.ReactNode","description":"The markup to display when no resources exist yet. Renders when set and items is empty.","isOptional":true},{"filePath":"polaris-react/src/components/ResourceList/ResourceList.tsx","syntaxKind":"PropertySignature","name":"emptySearchState","value":"React.ReactNode","description":"The markup to display when no results are returned on search or filter of the list. Renders when `filterControl` is set, items are empty, and `emptyState` is not set.","isOptional":true,"defaultValue":"EmptySearchResult"},{"filePath":"polaris-react/src/components/ResourceList/ResourceList.tsx","syntaxKind":"PropertySignature","name":"resourceName","value":"{ singular: string; plural: string; }","description":"Name of the resource, such as customers or products","isOptional":true},{"filePath":"polaris-react/src/components/ResourceList/ResourceList.tsx","syntaxKind":"PropertySignature","name":"promotedBulkActions","value":"(MenuGroupDescriptor | BulkAction)[]","description":"Up to 2 bulk actions that will be given more prominence","isOptional":true},{"filePath":"polaris-react/src/components/ResourceList/ResourceList.tsx","syntaxKind":"PropertySignature","name":"bulkActions","value":"(ActionListSection | BulkAction)[]","description":"Actions available on the currently selected items","isOptional":true},{"filePath":"polaris-react/src/components/ResourceList/ResourceList.tsx","syntaxKind":"PropertySignature","name":"selectedItems","value":"ResourceListSelectedItems","description":"Collection of IDs for the currently selected items","isOptional":true},{"filePath":"polaris-react/src/components/ResourceList/ResourceList.tsx","syntaxKind":"PropertySignature","name":"isFiltered","value":"boolean","description":"Whether or not the list has filter(s) applied","isOptional":true},{"filePath":"polaris-react/src/components/ResourceList/ResourceList.tsx","syntaxKind":"PropertySignature","name":"selectable","value":"boolean","description":"Renders a Select All button at the top of the list and checkboxes in front of each list item. For use when bulkActions aren't provided. *","isOptional":true},{"filePath":"polaris-react/src/components/ResourceList/ResourceList.tsx","syntaxKind":"PropertySignature","name":"hasMoreItems","value":"boolean","description":"Whether or not there are more items than currently set on the items prop. Determines whether or not to set the paginatedSelectAllAction and paginatedSelectAllText props on the BulkActions component.","isOptional":true},{"filePath":"polaris-react/src/components/ResourceList/ResourceList.tsx","syntaxKind":"PropertySignature","name":"loading","value":"boolean","description":"Overlays item list with a spinner while a background action is being performed","isOptional":true},{"filePath":"polaris-react/src/components/ResourceList/ResourceList.tsx","syntaxKind":"PropertySignature","name":"showHeader","value":"boolean","description":"Boolean to show or hide the header","isOptional":true},{"filePath":"polaris-react/src/components/ResourceList/ResourceList.tsx","syntaxKind":"PropertySignature","name":"totalItemsCount","value":"number","description":"Total number of resources","isOptional":true},{"filePath":"polaris-react/src/components/ResourceList/ResourceList.tsx","syntaxKind":"PropertySignature","name":"sortValue","value":"string","description":"Current value of the sort control","isOptional":true},{"filePath":"polaris-react/src/components/ResourceList/ResourceList.tsx","syntaxKind":"PropertySignature","name":"sortOptions","value":"SelectOption[]","description":"Collection of sort options to choose from","isOptional":true},{"filePath":"polaris-react/src/components/ResourceList/ResourceList.tsx","syntaxKind":"PropertySignature","name":"alternateTool","value":"React.ReactNode","description":"ReactNode to display instead of the sort control","isOptional":true},{"filePath":"polaris-react/src/components/ResourceList/ResourceList.tsx","syntaxKind":"PropertySignature","name":"headerContent","value":"string","description":"Custom header text displayed above the list instead of the resource count.","isOptional":true},{"filePath":"polaris-react/src/components/ResourceList/ResourceList.tsx","syntaxKind":"MethodSignature","name":"onSortChange","value":"(selected: string, id: string) => void","description":"Callback when sort option is changed","isOptional":true},{"filePath":"polaris-react/src/components/ResourceList/ResourceList.tsx","syntaxKind":"MethodSignature","name":"onSelectionChange","value":"(selectedItems: ResourceListSelectedItems) => void","description":"Callback when selection is changed","isOptional":true},{"filePath":"polaris-react/src/components/ResourceList/ResourceList.tsx","syntaxKind":"MethodSignature","name":"renderItem","value":"(item: TItemType, id: string, index: number) => React.ReactNode","description":"Function to render each list item, must return a ResourceItem component"},{"filePath":"polaris-react/src/components/ResourceList/ResourceList.tsx","syntaxKind":"MethodSignature","name":"idForItem","value":"(item: TItemType, index: number) => string","description":"Function to customize the unique ID for each item","isOptional":true},{"filePath":"polaris-react/src/components/ResourceList/ResourceList.tsx","syntaxKind":"MethodSignature","name":"resolveItemId","value":"(item: TItemType) => string","description":"Function to resolve the ids of items","isOptional":true},{"filePath":"polaris-react/src/components/ResourceList/ResourceList.tsx","syntaxKind":"PropertySignature","name":"pagination","value":"ResourceListPaginationProps","description":"Properties to enable pagination at the bottom of the list.","isOptional":true}],"value":"export interface ResourceListProps<\n  TItemType extends ResourceListItemData = ResourceListItemData,\n> {\n  /** Item data; each item is passed to renderItem */\n  items: TItemType[];\n  filterControl?: React.ReactNode;\n  /** Whether to remove all padding around the filter controls. Should be true if using Filters, and false if using LegacyFilters.  */\n  flushFilters?: boolean;\n  /** The markup to display when no resources exist yet. Renders when set and items is empty. */\n  emptyState?: React.ReactNode;\n  /** The markup to display when no results are returned on search or filter of the list. Renders when `filterControl` is set, items are empty, and `emptyState` is not set.\n   * @default EmptySearchResult\n   */\n  emptySearchState?: React.ReactNode;\n  /** Name of the resource, such as customers or products */\n  resourceName?: {\n    singular: string;\n    plural: string;\n  };\n  /** Up to 2 bulk actions that will be given more prominence */\n  promotedBulkActions?: BulkActionsProps['promotedActions'];\n  /** Actions available on the currently selected items */\n  bulkActions?: BulkActionsProps['actions'];\n  /** Collection of IDs for the currently selected items */\n  selectedItems?: ResourceListSelectedItems;\n  /** Whether or not the list has filter(s) applied */\n  isFiltered?: boolean;\n  /** Renders a Select All button at the top of the list and checkboxes in front of each list item. For use when bulkActions aren't provided. **/\n  selectable?: boolean;\n  /** Whether or not there are more items than currently set on the items prop. Determines whether or not to set the paginatedSelectAllAction and paginatedSelectAllText props on the BulkActions component. */\n  hasMoreItems?: boolean;\n  /** Overlays item list with a spinner while a background action is being performed */\n  loading?: boolean;\n  /** Boolean to show or hide the header */\n  showHeader?: boolean;\n  /** Total number of resources */\n  totalItemsCount?: number;\n  /** Current value of the sort control */\n  sortValue?: string;\n  /** Collection of sort options to choose from */\n  sortOptions?: SelectOption[];\n  /** ReactNode to display instead of the sort control */\n  alternateTool?: React.ReactNode;\n  /** Custom header text displayed above the list instead of the resource count. */\n  headerContent?: string;\n  /** Callback when sort option is changed */\n  onSortChange?(selected: string, id: string): void;\n  /** Callback when selection is changed */\n  onSelectionChange?(selectedItems: ResourceListSelectedItems): void;\n  /** Function to render each list item, must return a ResourceItem component */\n  renderItem(item: TItemType, id: string, index: number): React.ReactNode;\n  /** Function to customize the unique ID for each item */\n  idForItem?(item: TItemType, index: number): string;\n  /** Function to resolve the ids of items */\n  resolveItemId?(item: TItemType): string;\n  /** Properties to enable pagination at the bottom of the list. */\n  pagination?: ResourceListPaginationProps;\n}"},"MenuGroupDescriptor":{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"MenuGroupDescriptor","description":"","members":[{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"title","value":"string","description":"Menu group title"},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"actions","value":"ActionListItemDescriptor[]","description":"List of actions"},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"icon","value":"any","description":"Icon to display","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"details","value":"React.ReactNode","description":"Action details","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"disabled","value":"boolean","description":"Disables action button","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"index","value":"number","description":"Zero-indexed numerical position. Overrides the group's order in the menu.","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"onActionAnyItem","value":"() => void","description":"Callback when any action takes place","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"MethodSignature","name":"onClick","value":"(openActions: () => void) => void","description":"Callback when the menu is clicked","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"badge","value":"{ tone: \"new\"; content: string; }","description":"","isOptional":true}],"value":"export interface MenuGroupDescriptor extends BadgeAction {\n  /** Menu group title */\n  title: string;\n  /** List of actions */\n  actions: ActionListItemDescriptor[];\n  /** Icon to display */\n  icon?: IconableAction['icon'];\n  /** Action details */\n  details?: React.ReactNode;\n  /** Disables action button */\n  disabled?: boolean;\n  /** Zero-indexed numerical position. Overrides the group's order in the menu. */\n  index?: number;\n  /** Callback when any action takes place */\n  onActionAnyItem?: ActionListItemDescriptor['onAction'];\n  /** Callback when the menu is clicked */\n  onClick?(openActions: () => void): void;\n}"},"ActionListItemDescriptor":{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"ActionListItemDescriptor","description":"","members":[{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"accessibilityLabel","value":"string","description":"Visually hidden text for screen readers","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"badge","value":"{ tone: \"new\"; content: string; }","description":"","isOptional":true,"deprecationMessage":"Badge component"},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"helpText","value":"React.ReactNode","description":"Additional hint text to display with item","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"icon","value":"any","description":"","isOptional":true,"deprecationMessage":"Source of the icon"},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"image","value":"string","description":"","isOptional":true,"deprecationMessage":"Image source"},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"prefix","value":"React.ReactNode","description":"Prefix source","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"suffix","value":"React.ReactNode","description":"Suffix source","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"ellipsis","value":"boolean","description":"","isOptional":true,"deprecationMessage":"Add an ellipsis suffix to action content. ellipsis appends `...` without truncating. Use truncate instead."},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"truncate","value":"boolean","description":"Truncate the action content either at the beginning or at the end","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"active","value":"boolean","description":"Whether the action is active or not","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"variant","value":"\"default\" | \"menu\" | \"indented\"","description":"The item variations","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"role","value":"string","description":"Defines a role for the action","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"disabled","value":"boolean","description":"Whether or not the action is disabled","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"id","value":"string","description":"A unique identifier for the action","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"content","value":"string","description":"Content the action displays","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"url","value":"string","description":"A destination to link to, rendered in the action","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"external","value":"boolean","description":"Forces url to open in a new tab","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"target","value":"Target","description":"Where to display the url","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"MethodSignature","name":"onAction","value":"() => void","description":"Callback when an action takes place","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"MethodSignature","name":"onMouseEnter","value":"() => void","description":"Callback when mouse enter","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"MethodSignature","name":"onTouchStart","value":"() => void","description":"Callback when element is touched","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"destructive","value":"boolean","description":"Destructive action","isOptional":true}],"value":"export interface ActionListItemDescriptor\n  extends DisableableAction,\n    DestructableAction {\n  /** Visually hidden text for screen readers */\n  accessibilityLabel?: string;\n  /** @deprecated Badge component */\n  badge?: {\n    tone: 'new';\n    content: string;\n  };\n  /** Additional hint text to display with item */\n  helpText?: React.ReactNode;\n  /** @deprecated Source of the icon */\n  icon?: IconSource;\n  /** @deprecated Image source */\n  image?: string;\n  /** Prefix source */\n  prefix?: React.ReactNode;\n  /** Suffix source */\n  suffix?: React.ReactNode;\n  /** @deprecated Add an ellipsis suffix to action content. ellipsis appends `...` without truncating. Use truncate instead. */\n  ellipsis?: boolean;\n  /** Truncate the action content either at the beginning or at the end */\n  truncate?: boolean;\n  /** Whether the action is active or not */\n  active?: boolean;\n  /** The item variations */\n  variant?: 'default' | 'menu' | 'indented';\n  /** Defines a role for the action */\n  role?: string;\n}"},"Target":{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"TypeAliasDeclaration","name":"Target","value":"'_blank' | '_self' | '_parent' | '_top'","description":""},"BulkAction":{"filePath":"polaris-react/src/components/BulkActions/BulkActions.tsx","syntaxKind":"TypeAliasDeclaration","name":"BulkAction","value":"DisableableAction & BadgeAction","description":""},"DisableableAction":{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"DisableableAction","description":"","members":[{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"disabled","value":"boolean","description":"Whether or not the action is disabled","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"id","value":"string","description":"A unique identifier for the action","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"content","value":"string","description":"Content the action displays","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"accessibilityLabel","value":"string","description":"Visually hidden text for screen readers","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"url","value":"string","description":"A destination to link to, rendered in the action","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"external","value":"boolean","description":"Forces url to open in a new tab","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"target","value":"Target","description":"Where to display the url","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"MethodSignature","name":"onAction","value":"() => void","description":"Callback when an action takes place","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"MethodSignature","name":"onMouseEnter","value":"() => void","description":"Callback when mouse enter","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"MethodSignature","name":"onTouchStart","value":"() => void","description":"Callback when element is touched","isOptional":true}],"value":"export interface DisableableAction extends Action {\n  /** Whether or not the action is disabled */\n  disabled?: boolean;\n}"},"BadgeAction":{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"BadgeAction","description":"","members":[{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"badge","value":"{ tone: \"new\"; content: string; }","description":"","isOptional":true}],"value":"export interface BadgeAction {\n  badge?: {\n    tone: 'new';\n    content: string;\n  };\n}"},"ActionListSection":{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"ActionListSection","description":"","members":[{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"title","value":"any","description":"Section title","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"items","value":"readonly ActionListItemDescriptor[]","description":"Collection of action items for the list"}],"value":"export interface ActionListSection {\n  /** Section title */\n  title?: string | React.ReactNode;\n  /** Collection of action items for the list */\n  items: readonly ActionListItemDescriptor[];\n}"},"ResourceListSelectedItems":{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/utilities/resource-list/types.ts","syntaxKind":"TypeAliasDeclaration","name":"ResourceListSelectedItems","value":"string[] | 'All'","description":""},"SelectOption":{"filePath":"polaris-react/src/components/Select/Select.tsx","syntaxKind":"TypeAliasDeclaration","name":"SelectOption","value":"string | StrictOption","description":""},"StrictOption":{"filePath":"polaris-react/src/components/Select/Select.tsx","name":"StrictOption","description":"","members":[{"filePath":"polaris-react/src/components/Select/Select.tsx","syntaxKind":"PropertySignature","name":"value","value":"string","description":"Machine value of the option; this is the value passed to `onChange`"},{"filePath":"polaris-react/src/components/Select/Select.tsx","syntaxKind":"PropertySignature","name":"label","value":"string","description":"Human-readable text for the option"},{"filePath":"polaris-react/src/components/Select/Select.tsx","syntaxKind":"PropertySignature","name":"disabled","value":"boolean","description":"Option will be visible, but not selectable","isOptional":true},{"filePath":"polaris-react/src/components/Select/Select.tsx","syntaxKind":"PropertySignature","name":"prefix","value":"React.ReactNode","description":"Element to display to the left of the option label. Does not show in the dropdown.","isOptional":true}],"value":"interface StrictOption {\n  /** Machine value of the option; this is the value passed to `onChange` */\n  value: string;\n  /** Human-readable text for the option */\n  label: string;\n  /** Option will be visible, but not selectable */\n  disabled?: boolean;\n  /** Element to display to the left of the option label. Does not show in the dropdown. */\n  prefix?: React.ReactNode;\n}"},"ResourceListPaginationProps":{"filePath":"polaris-react/src/components/ResourceList/ResourceList.tsx","syntaxKind":"TypeAliasDeclaration","name":"ResourceListPaginationProps","value":"Omit<PaginationProps, 'type'>","description":""},"PaginationProps":{"filePath":"polaris-react/src/components/Pagination/Pagination.tsx","name":"PaginationProps","description":"","members":[{"filePath":"polaris-react/src/components/Pagination/Pagination.tsx","syntaxKind":"PropertySignature","name":"nextKeys","value":"Key[]","description":"Keyboard shortcuts for the next button","isOptional":true},{"filePath":"polaris-react/src/components/Pagination/Pagination.tsx","syntaxKind":"PropertySignature","name":"previousKeys","value":"Key[]","description":"Keyboard shortcuts for the previous button","isOptional":true},{"filePath":"polaris-react/src/components/Pagination/Pagination.tsx","syntaxKind":"PropertySignature","name":"nextTooltip","value":"string","description":"Tooltip for the next button","isOptional":true},{"filePath":"polaris-react/src/components/Pagination/Pagination.tsx","syntaxKind":"PropertySignature","name":"previousTooltip","value":"string","description":"Tooltip for the previous button","isOptional":true},{"filePath":"polaris-react/src/components/Pagination/Pagination.tsx","syntaxKind":"PropertySignature","name":"nextURL","value":"string","description":"The URL of the next page","isOptional":true},{"filePath":"polaris-react/src/components/Pagination/Pagination.tsx","syntaxKind":"PropertySignature","name":"previousURL","value":"string","description":"The URL of the previous page","isOptional":true},{"filePath":"polaris-react/src/components/Pagination/Pagination.tsx","syntaxKind":"PropertySignature","name":"hasNext","value":"boolean","description":"Whether there is a next page to show","isOptional":true},{"filePath":"polaris-react/src/components/Pagination/Pagination.tsx","syntaxKind":"PropertySignature","name":"hasPrevious","value":"boolean","description":"Whether there is a previous page to show","isOptional":true},{"filePath":"polaris-react/src/components/Pagination/Pagination.tsx","syntaxKind":"PropertySignature","name":"accessibilityLabel","value":"string","description":"Accessible label for the pagination","isOptional":true},{"filePath":"polaris-react/src/components/Pagination/Pagination.tsx","syntaxKind":"PropertySignature","name":"accessibilityLabels","value":"AccessibilityLabels","description":"Accessible labels for the buttons and UnstyledLinks","isOptional":true},{"filePath":"polaris-react/src/components/Pagination/Pagination.tsx","syntaxKind":"MethodSignature","name":"onNext","value":"() => void","description":"Callback when next button is clicked","isOptional":true},{"filePath":"polaris-react/src/components/Pagination/Pagination.tsx","syntaxKind":"MethodSignature","name":"onPrevious","value":"() => void","description":"Callback when previous button is clicked","isOptional":true},{"filePath":"polaris-react/src/components/Pagination/Pagination.tsx","syntaxKind":"PropertySignature","name":"label","value":"React.ReactNode","description":"Text to provide more context in between the arrow buttons","isOptional":true},{"filePath":"polaris-react/src/components/Pagination/Pagination.tsx","syntaxKind":"PropertySignature","name":"type","value":"\"table\" | \"page\"","description":"Layout structure of the component","isOptional":true}],"value":"export interface PaginationProps {\n  /** Keyboard shortcuts for the next button */\n  nextKeys?: Key[];\n  /** Keyboard shortcuts for the previous button */\n  previousKeys?: Key[];\n  /** Tooltip for the next button */\n  nextTooltip?: string;\n  /** Tooltip for the previous button */\n  previousTooltip?: string;\n  /** The URL of the next page */\n  nextURL?: string;\n  /** The URL of the previous page */\n  previousURL?: string;\n  /** Whether there is a next page to show */\n  hasNext?: boolean;\n  /** Whether there is a previous page to show */\n  hasPrevious?: boolean;\n  /** Accessible label for the pagination */\n  accessibilityLabel?: string;\n  /** Accessible labels for the buttons and UnstyledLinks */\n  accessibilityLabels?: AccessibilityLabels;\n  /** Callback when next button is clicked */\n  onNext?(): void;\n  /** Callback when previous button is clicked */\n  onPrevious?(): void;\n  /** Text to provide more context in between the arrow buttons */\n  label?: React.ReactNode;\n  /** Layout structure of the component */\n  type?: 'page' | 'table';\n}"},"Key":{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"EnumDeclaration","name":"Key","value":"export enum Key {\n  Backspace = 8,\n  Tab = 9,\n  Enter = 13,\n  Shift = 16,\n  Ctrl = 17,\n  Alt = 18,\n  Pause = 19,\n  CapsLock = 20,\n  Escape = 27,\n  Space = 32,\n  PageUp = 33,\n  PageDown = 34,\n  End = 35,\n  Home = 36,\n  LeftArrow = 37,\n  UpArrow = 38,\n  RightArrow = 39,\n  DownArrow = 40,\n  Insert = 45,\n  Delete = 46,\n  Key0 = 48,\n  Key1 = 49,\n  Key2 = 50,\n  Key3 = 51,\n  Key4 = 52,\n  Key5 = 53,\n  Key6 = 54,\n  Key7 = 55,\n  Key8 = 56,\n  Key9 = 57,\n  KeyA = 65,\n  KeyB = 66,\n  KeyC = 67,\n  KeyD = 68,\n  KeyE = 69,\n  KeyF = 70,\n  KeyG = 71,\n  KeyH = 72,\n  KeyI = 73,\n  KeyJ = 74,\n  KeyK = 75,\n  KeyL = 76,\n  KeyM = 77,\n  KeyN = 78,\n  KeyO = 79,\n  KeyP = 80,\n  KeyQ = 81,\n  KeyR = 82,\n  KeyS = 83,\n  KeyT = 84,\n  KeyU = 85,\n  KeyV = 86,\n  KeyW = 87,\n  KeyX = 88,\n  KeyY = 89,\n  KeyZ = 90,\n  LeftMeta = 91,\n  RightMeta = 92,\n  Select = 93,\n  Numpad0 = 96,\n  Numpad1 = 97,\n  Numpad2 = 98,\n  Numpad3 = 99,\n  Numpad4 = 100,\n  Numpad5 = 101,\n  Numpad6 = 102,\n  Numpad7 = 103,\n  Numpad8 = 104,\n  Numpad9 = 105,\n  Multiply = 106,\n  Add = 107,\n  Subtract = 109,\n  Decimal = 110,\n  Divide = 111,\n  F1 = 112,\n  F2 = 113,\n  F3 = 114,\n  F4 = 115,\n  F5 = 116,\n  F6 = 117,\n  F7 = 118,\n  F8 = 119,\n  F9 = 120,\n  F10 = 121,\n  F11 = 122,\n  F12 = 123,\n  NumLock = 144,\n  ScrollLock = 145,\n  Semicolon = 186,\n  Equals = 187,\n  Comma = 188,\n  Dash = 189,\n  Period = 190,\n  ForwardSlash = 191,\n  GraveAccent = 192,\n  OpenBracket = 219,\n  BackSlash = 220,\n  CloseBracket = 221,\n  SingleQuote = 222,\n}","members":[{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Backspace","value":8},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Tab","value":9},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Enter","value":13},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Shift","value":16},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Ctrl","value":17},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Alt","value":18},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Pause","value":19},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"CapsLock","value":20},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Escape","value":27},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Space","value":32},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"PageUp","value":33},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"PageDown","value":34},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"End","value":35},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Home","value":36},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"LeftArrow","value":37},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"UpArrow","value":38},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"RightArrow","value":39},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"DownArrow","value":40},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Insert","value":45},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Delete","value":46},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Key0","value":48},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Key1","value":49},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Key2","value":50},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Key3","value":51},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Key4","value":52},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Key5","value":53},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Key6","value":54},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Key7","value":55},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Key8","value":56},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Key9","value":57},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"KeyA","value":65},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"KeyB","value":66},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"KeyC","value":67},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"KeyD","value":68},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"KeyE","value":69},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"KeyF","value":70},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"KeyG","value":71},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"KeyH","value":72},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"KeyI","value":73},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"KeyJ","value":74},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"KeyK","value":75},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"KeyL","value":76},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"KeyM","value":77},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"KeyN","value":78},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"KeyO","value":79},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"KeyP","value":80},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"KeyQ","value":81},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"KeyR","value":82},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"KeyS","value":83},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"KeyT","value":84},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"KeyU","value":85},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"KeyV","value":86},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"KeyW","value":87},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"KeyX","value":88},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"KeyY","value":89},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"KeyZ","value":90},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"LeftMeta","value":91},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"RightMeta","value":92},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Select","value":93},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Numpad0","value":96},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Numpad1","value":97},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Numpad2","value":98},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Numpad3","value":99},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Numpad4","value":100},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Numpad5","value":101},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Numpad6","value":102},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Numpad7","value":103},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Numpad8","value":104},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Numpad9","value":105},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Multiply","value":106},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Add","value":107},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Subtract","value":109},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Decimal","value":110},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Divide","value":111},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"F1","value":112},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"F2","value":113},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"F3","value":114},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"F4","value":115},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"F5","value":116},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"F6","value":117},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"F7","value":118},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"F8","value":119},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"F9","value":120},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"F10","value":121},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"F11","value":122},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"F12","value":123},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"NumLock","value":144},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"ScrollLock","value":145},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Semicolon","value":186},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Equals","value":187},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Comma","value":188},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Dash","value":189},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Period","value":190},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"ForwardSlash","value":191},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"GraveAccent","value":192},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"OpenBracket","value":219},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"BackSlash","value":220},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"CloseBracket","value":221},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"SingleQuote","value":222}]},"AccessibilityLabels":{"filePath":"polaris-react/src/components/Pagination/Pagination.tsx","name":"AccessibilityLabels","description":"","members":[{"filePath":"polaris-react/src/components/Pagination/Pagination.tsx","syntaxKind":"PropertySignature","name":"previous","value":"string","description":""},{"filePath":"polaris-react/src/components/Pagination/Pagination.tsx","syntaxKind":"PropertySignature","name":"next","value":"string","description":""}],"value":"interface AccessibilityLabels {\n  previous: string;\n  next: string;\n}"}},"editPageLinkPath":"polaris.shopify.com/content/components/lists/resource-list.mdx"},"__N_SSG":true}