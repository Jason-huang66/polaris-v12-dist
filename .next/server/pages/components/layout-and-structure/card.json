{"pageProps":{"mdx":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    h2: \"h2\",\n    ul: \"ul\",\n    li: \"li\",\n    hr: \"hr\",\n    a: \"a\"\n  }, _provideComponents(), props.components), {Lede, Examples, Props} = _components;\n  if (!Examples) _missingMdxReference(\"Examples\", true);\n  if (!Lede) _missingMdxReference(\"Lede\", true);\n  if (!Props) _missingMdxReference(\"Props\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      id: \"frontmattertitle\",\n      children: frontmatter.title\n    }), \"\\n\", _jsx(Lede, {\n      children: _jsx(_components.p, {\n        children: \"Cards are used to group similar concepts and tasks together for merchants to scan, read, and get things done. It displays content in a familiar and recognizable style.\"\n      })\n    }), \"\\n\", _jsx(Examples, {}), \"\\n\", _jsx(Props, {\n      componentName: frontmatter.title\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"best-practices\",\n      children: \"Best practices\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Cards should:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Group related information\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Display information in a way that prioritizes what the merchant needs to know most first\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Use headings that set clear expectations about the card’s purpose\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Stick to single user flows or break more complicated flows into multiple sections\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Avoid too many call-to-action buttons or links and only one primary call to action per card\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Use calls to action on the bottom of the card for next steps and use the space in the upper right corner of the card for persistent, optional actions (such as Edit)\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h2, {\n      id: \"related-components\",\n      children: \"Related components\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"For more flexibility on styling, \", _jsx(_components.a, {\n          href: \"https://polaris.shopify.com/components/layout-and-structure/box\",\n          children: \"use the Box component\"\n        })]\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"title":"Card","shortDescription":"Used to group similar concepts and tasks together for easier scanning and reading.","category":"Layout and structure","keywords":["layout","card","responsive","container","box","grid","panel","card with call to action in the footer","card with call to action in the heading","card with call to action in a section","card with button in the footer","card with button in the heading","card with multiple sections","card with subsections","sectioned card","card with a subdued section","subdued card for secondary content","callout","call out"],"examples":[{"fileName":"card-default.tsx","title":"Default","description":"By default, cards have an 8px border radius and uses `--p-color-bg-surface` as the background and `--p-shadow-300` as the shadow. There is padding of `space-5` (20px) around children and `space-4` (16px) for small screens."},{"fileName":"card-with-subdued-background.tsx","title":"With subdued background","description":"Use for content that you want to deprioritize. Subdued cards don’t stand out as much as cards with white backgrounds so don’t use them for information or actions that are critical to merchants."},{"fileName":"card-with-varying-padding.tsx","title":"With varying padding","description":"Use the `padding` property to adjust the spacing within a card. You can also specify spacing values at different breakpoints."},{"fileName":"card-with-rounded-corners.tsx","title":"Rounded corners","description":"Use the `padding` property to adjust the spacing of content within a card. The `padding` prop supports responsive spacing with the [Breakpoints tokens](https://polaris.shopify.com/tokens/breakpoints)."}],"previewImg":"/images/components/layout-and-structure/card.png"},"scope":{"__remarkNextMdxImporter":{}}},"examples":[{"fileName":"card-default.tsx","title":"Default","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_components.p, {\n    children: [\"By default, cards have an 8px border radius and uses \", _jsx(_components.code, {\n      children: \"--p-color-bg-surface\"\n    }), \" as the background and \", _jsx(_components.code, {\n      children: \"--p-shadow-300\"\n    }), \" as the shadow. There is padding of \", _jsx(_components.code, {\n      children: \"space-5\"\n    }), \" (20px) around children and \", _jsx(_components.code, {\n      children: \"space-4\"\n    }), \" (16px) for small screens.\"]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {Card, Text} from '@shopify/polaris';\nimport React from 'react';\n\nfunction CardExample() {\n  return (\n    <Card>\n      <Text as=\"h2\" variant=\"bodyMd\">\n        Content inside a card\n      </Text>\n    </Card>\n  );\n}\n\n"},{"fileName":"card-with-subdued-background.tsx","title":"With subdued background","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Use for content that you want to deprioritize. Subdued cards don’t stand out as much as cards with white backgrounds so don’t use them for information or actions that are critical to merchants.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {Card, Text} from '@shopify/polaris';\nimport React from 'react';\n\nfunction CardExample() {\n  return (\n    <Card background=\"bg-surface-secondary\">\n      <Text as=\"h2\" variant=\"bodyMd\">\n        Content inside a card\n      </Text>\n    </Card>\n  );\n}\n\n"},{"fileName":"card-with-varying-padding.tsx","title":"With varying padding","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_components.p, {\n    children: [\"Use the \", _jsx(_components.code, {\n      children: \"padding\"\n    }), \" property to adjust the spacing within a card. You can also specify spacing values at different breakpoints.\"]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {Card, Text, BlockStack} from '@shopify/polaris';\nimport React from 'react';\n\nfunction CardExample() {\n  return (\n    <BlockStack gap=\"400\">\n      <Card>\n        <Placeholder label=\"Content inside a card\" />\n      </Card>\n      <Card padding=\"400\">\n        <Placeholder label=\"Content inside a card\" />\n      </Card>\n      <Card padding=\"200\">\n        <Placeholder label=\"Content inside a card\" />\n      </Card>\n      <Card padding=\"0\">\n        <Placeholder label=\"Content inside a card\" />\n      </Card>\n    </BlockStack>\n  );\n}\n\nconst Placeholder = ({label = '', height = 'auto', width = 'auto'}) => {\n  return (\n    <div\n      style={{\n        background: 'var(--p-color-text-info)',\n        height: height,\n        width: width,\n      }}\n    >\n      <div\n        style={{\n          color: 'var(--p-color-text-info-on-bg-fill)',\n        }}\n      >\n        <Text as=\"h2\" variant=\"bodyMd\">\n          {label}\n        </Text>\n      </div>\n    </div>\n  );\n};\n\n"},{"fileName":"card-with-rounded-corners.tsx","title":"Rounded corners","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    code: \"code\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_components.p, {\n    children: [\"Use the \", _jsx(_components.code, {\n      children: \"padding\"\n    }), \" property to adjust the spacing of content within a card. The \", _jsx(_components.code, {\n      children: \"padding\"\n    }), \" prop supports responsive spacing with the \", _jsx(_components.a, {\n      href: \"https://polaris.shopify.com/tokens/breakpoints\",\n      children: \"Breakpoints tokens\"\n    }), \".\"]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {Card, Text} from '@shopify/polaris';\nimport React from 'react';\n\nfunction CardExample() {\n  return (\n    <Card roundedAbove=\"md\" background=\"bg-surface-secondary\">\n      <Text as=\"h2\" variant=\"bodyMd\">\n        Content inside a card\n      </Text>\n    </Card>\n  );\n}\n\n"}],"seoDescription":"Cards are used to group similar concepts and tasks together for merchants to scan, read, and get things done. It displays content in a familiar and recognizable style.","type":{"CardProps":{"filePath":"polaris-react/src/components/Card/Card.tsx","name":"CardProps","description":"","members":[{"filePath":"polaris-react/src/components/Card/Card.tsx","syntaxKind":"PropertySignature","name":"children","value":"React.ReactNode","description":"","isOptional":true},{"filePath":"polaris-react/src/components/Card/Card.tsx","syntaxKind":"PropertySignature","name":"background","value":"ColorBackgroundAlias","description":"Background color","isOptional":true,"defaultValue":"'bg-surface'"},{"filePath":"polaris-react/src/components/Card/Card.tsx","syntaxKind":"PropertySignature","name":"padding","value":"Spacing","description":"The spacing around the card","isOptional":true,"defaultValue":"{xs: '400', sm: '500'}"},{"filePath":"polaris-react/src/components/Card/Card.tsx","syntaxKind":"PropertySignature","name":"roundedAbove","value":"\"xs\" | \"sm\" | \"md\" | \"lg\" | \"xl\"","description":"Border radius value above a set breakpoint","isOptional":true}],"value":"export interface CardProps {\n  children?: React.ReactNode;\n  /** Background color\n   * @default 'bg-surface'\n   */\n  background?: ColorBackgroundAlias;\n  /** The spacing around the card\n   * @default {xs: '400', sm: '500'}\n   * @example\n   * padding='400'\n   * padding={{xs: '200', sm: '300', md: '400', lg: '500', xl: '600'}}\n   */\n  padding?: Spacing;\n  /** Border radius value above a set breakpoint */\n  roundedAbove?: BreakpointsAlias;\n}"},"Spacing":{"filePath":"polaris-react/src/components/Card/Card.tsx","syntaxKind":"TypeAliasDeclaration","name":"Spacing","value":"ResponsiveProp<SpaceScale>","description":""},"ResponsiveProp":{"filePath":"polaris-react/src/utilities/css.ts","syntaxKind":"TypeAliasDeclaration","name":"ResponsiveProp","value":"T | ResponsivePropConfig<T>","description":""},"ResponsivePropConfig":{"filePath":"polaris-react/src/utilities/css.ts","syntaxKind":"TypeAliasDeclaration","name":"ResponsivePropConfig","value":"{\n  [Breakpoint in BreakpointsAlias]?: T;\n}","description":""}},"editPageLinkPath":"polaris.shopify.com/content/components/layout-and-structure/card.mdx"},"__N_SSG":true}