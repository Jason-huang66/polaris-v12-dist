{"pageProps":{"mdx":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    a: \"a\",\n    h2: \"h2\",\n    ul: \"ul\",\n    li: \"li\",\n    code: \"code\"\n  }, _provideComponents(), props.components), {Lede, Examples, Props} = _components;\n  if (!Examples) _missingMdxReference(\"Examples\", true);\n  if (!Lede) _missingMdxReference(\"Lede\", true);\n  if (!Props) _missingMdxReference(\"Props\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      id: \"frontmattertitle\",\n      children: frontmatter.title\n    }), \"\\n\", _jsx(Lede, {\n      children: _jsxs(_components.p, {\n        children: [\"Use to lay out children horizontally with equal gap between columns. Based on \", _jsx(_components.a, {\n          href: \"https://developer.mozilla.org/en-US/docs/Web/CSS/grid\",\n          children: \"CSS Grid\"\n        }), \".\"]\n      })\n    }), \"\\n\", _jsx(Examples, {}), \"\\n\", _jsx(Props, {\n      componentName: frontmatter.title\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"related-components\",\n      children: \"Related components\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"For more control over padding and widths, \", _jsx(_components.a, {\n          href: \"https://polaris.shopify.com/components/box\",\n          children: \"use the Box component\"\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"To lay out a set of smaller components horizontally, \", _jsx(_components.a, {\n          href: \"https://polaris.shopify.com/components/layout-and-structure/inline-stack\",\n          children: \"use the InlineStack component\"\n        })]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"related-resources\",\n      children: \"Related resources\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"InlineGrid props are named following the convention of CSS logical properties, such as \", _jsx(_components.code, {\n          children: \"alignItems=\\\"start\\\"\"\n        }), \" vs. \", _jsx(_components.code, {\n          children: \"alignItems=\\\"left\\\"\"\n        }), \". Learn more about \", _jsx(_components.a, {\n          href: \"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Logical_Properties\",\n          children: \"CSS logicial properties\"\n        }), \".\"]\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"title":"Inline grid","category":"Layout and structure","keywords":["layout","columns","grid","responsive"],"examples":[{"fileName":"inline-grid-with-varying-gap.tsx","title":"Gap","description":"Use the `gap` prop to set the amount of space between columns. The `gap` prop supports responsive spacing with the [Breakpoints tokens](https://polaris.shopify.com/tokens/breakpoints)."},{"fileName":"inline-grid-with-fixed-widths.tsx","title":"Column width","description":"The `columns` property accepts CSS column shorthand syntax, or an array of strings mapping to common widths in the admin such as `oneThird`, `oneHalf`, and `twoThirds`. For responsive columns, use the same syntax passed into an object with the breakpoints."},{"fileName":"inline-grid-with-set-number.tsx","title":"Number of columns","description":"Control the number of columns using the `columns` prop. Column numbers can be responsively set using the [Breakpoints tokens](https://polaris.shopify.com/tokens/breakpoints)."}],"previewImg":"/images/components/layout-and-structure/inline-grid.png"},"scope":{"__remarkNextMdxImporter":{}}},"examples":[{"fileName":"inline-grid-with-varying-gap.tsx","title":"Gap","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    code: \"code\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_components.p, {\n    children: [\"Use the \", _jsx(_components.code, {\n      children: \"gap\"\n    }), \" prop to set the amount of space between columns. The \", _jsx(_components.code, {\n      children: \"gap\"\n    }), \" prop supports responsive spacing with the \", _jsx(_components.a, {\n      href: \"https://polaris.shopify.com/tokens/breakpoints\",\n      children: \"Breakpoints tokens\"\n    }), \".\"]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import React from 'react';\nimport {InlineGrid} from '@shopify/polaris';\n\n\nfunction InlineGridWithVaryingGapExample() {\n  return (\n    <SpacingBackground>\n      <InlineGrid gap=\"400\" columns={3}>\n        <Placeholder height=\"320px\" />\n        <Placeholder height=\"320px\" />\n        <Placeholder height=\"320px\" />\n      </InlineGrid>\n    </SpacingBackground>\n  );\n}\n\nconst SpacingBackground = ({\n  children,\n  width = '100%',\n}: {\n  children: React.ReactNode;\n  width?: string;\n}) => {\n  return (\n    <div\n      style={{\n        background: 'var(--p-color-bg-surface-success)',\n        width,\n        height: 'auto',\n      }}\n    >\n      {children}\n    </div>\n  );\n};\n\nconst Placeholder = ({height = 'auto', width = 'auto'}) => {\n  return (\n    <div\n      style={{\n        display: 'inherit',\n        background: 'var(--p-color-text-info)',\n        height: height ?? undefined,\n        width: width ?? undefined,\n      }}\n    />\n  );\n};\n\n"},{"fileName":"inline-grid-with-fixed-widths.tsx","title":"Column width","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_components.p, {\n    children: [\"The \", _jsx(_components.code, {\n      children: \"columns\"\n    }), \" property accepts CSS column shorthand syntax, or an array of strings mapping to common widths in the admin such as \", _jsx(_components.code, {\n      children: \"oneThird\"\n    }), \", \", _jsx(_components.code, {\n      children: \"oneHalf\"\n    }), \", and \", _jsx(_components.code, {\n      children: \"twoThirds\"\n    }), \". For responsive columns, use the same syntax passed into an object with the breakpoints.\"]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import React from 'react';\nimport {InlineGrid, Text, InlineStack} from '@shopify/polaris';\n\n\nfunction InlineGridWithFreeAndFixedWidthsExample() {\n  return (\n    <InlineGrid columns={['oneThird', 'twoThirds']}>\n      <Placeholder height=\"320px\" label=\"oneThird\" />\n      <Placeholder height=\"320px\" label=\"twoThirds\" showBorder />\n    </InlineGrid>\n  );\n}\n\nconst Placeholder = ({\n  label = '',\n  height = 'auto',\n  width = 'auto',\n  showBorder = false,\n}) => {\n  return (\n    <div\n      style={{\n        display: 'inherit',\n        background: 'var(--p-color-text-info)',\n        height: height ?? undefined,\n        width: width ?? undefined,\n        borderInlineStart: showBorder\n          ? '1px dashed var(--p-color-bg-surface-success)'\n          : 'none',\n      }}\n    >\n      <InlineStack gap=\"400\" align=\"center\" blockAlign=\"center\">\n        <div\n          style={{\n            color: 'var(--p-color-text-info-on-bg-fill)',\n            width: width ?? undefined,\n          }}\n        >\n          <Text as=\"h2\" variant=\"bodyMd\" fontWeight=\"medium\" alignment=\"center\">\n            {label}\n          </Text>\n        </div>\n      </InlineStack>\n    </div>\n  );\n};\n\n"},{"fileName":"inline-grid-with-set-number.tsx","title":"Number of columns","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    code: \"code\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_components.p, {\n    children: [\"Control the number of columns using the \", _jsx(_components.code, {\n      children: \"columns\"\n    }), \" prop. Column numbers can be responsively set using the \", _jsx(_components.a, {\n      href: \"https://polaris.shopify.com/tokens/breakpoints\",\n      children: \"Breakpoints tokens\"\n    }), \".\"]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import React from 'react';\nimport {InlineGrid} from '@shopify/polaris';\n\n\nfunction InlineGridWithSetNumberExample() {\n  return (\n    <InlineGrid columns={2}>\n      <Placeholder height=\"320px\" />\n      <Placeholder height=\"320px\" showBorder />\n    </InlineGrid>\n  );\n}\n\nconst Placeholder = ({height = 'auto', width = 'auto', showBorder = false}) => {\n  return (\n    <div\n      style={{\n        display: 'inherit',\n        background: 'var(--p-color-text-info)',\n        height: height ?? undefined,\n        width: width ?? undefined,\n        borderInlineStart: showBorder\n          ? '1px dashed var(--p-color-bg-surface-success)'\n          : 'none',\n      }}\n    />\n  );\n};\n\n"}],"seoDescription":"Use to lay out children horizontally with equal gap between columns. Based on CSS Grid.","type":{"InlineGridProps":{"filePath":"polaris-react/src/components/InlineGrid/InlineGrid.tsx","name":"InlineGridProps","description":"","members":[{"filePath":"polaris-react/src/components/InlineGrid/InlineGrid.tsx","syntaxKind":"PropertySignature","name":"children","value":"React.ReactNode","description":"","isOptional":true},{"filePath":"polaris-react/src/components/InlineGrid/InlineGrid.tsx","syntaxKind":"PropertySignature","name":"columns","value":"Columns","description":"The number of columns to display. Accepts either a single value or an object of values for different screen sizes.","isOptional":true},{"filePath":"polaris-react/src/components/InlineGrid/InlineGrid.tsx","syntaxKind":"PropertySignature","name":"gap","value":"Gap","description":"The spacing between children. Accepts a spacing token or an object of spacing tokens for different screen sizes.","isOptional":true},{"filePath":"polaris-react/src/components/InlineGrid/InlineGrid.tsx","syntaxKind":"PropertySignature","name":"alignItems","value":"InlineGridAlignItems","description":"Vertical alignment of children. If not set, inline elements will stretch to the height of the parent.","isOptional":true}],"value":"export interface InlineGridProps extends React.AriaAttributes {\n  children?: React.ReactNode;\n  /** The number of columns to display. Accepts either a single value or an object of values for different screen sizes.\n   * @example\n   * columns={6}\n   * columns={{xs: 1, sm: 2, md: 3, lg: 4, xl: 6}}\n   */\n  columns?: Columns;\n  /** The spacing between children. Accepts a spacing token or an object of spacing tokens for different screen sizes.\n   * @example\n   * gap='200'\n   * gap={{xs: '100', sm: '200', md: '300', lg: '400', xl: '500'}}\n   */\n  gap?: Gap;\n  /** Vertical alignment of children. If not set, inline elements will stretch to the height of the parent.\n   * @example\n   * alignItems='start'\n   */\n  alignItems?: InlineGridAlignItems;\n}"},"Columns":{"filePath":"polaris-react/src/components/InlineGrid/InlineGrid.tsx","syntaxKind":"TypeAliasDeclaration","name":"Columns","value":"ResponsiveProp<ColumnsType>","description":""},"ResponsiveProp":{"filePath":"polaris-react/src/utilities/css.ts","syntaxKind":"TypeAliasDeclaration","name":"ResponsiveProp","value":"T | ResponsivePropConfig<T>","description":""},"ResponsivePropConfig":{"filePath":"polaris-react/src/utilities/css.ts","syntaxKind":"TypeAliasDeclaration","name":"ResponsivePropConfig","value":"{\n  [Breakpoint in BreakpointsAlias]?: T;\n}","description":""},"ColumnsType":{"filePath":"polaris-react/src/components/InlineGrid/InlineGrid.tsx","syntaxKind":"TypeAliasDeclaration","name":"ColumnsType","value":"number | string | ColumnsAlias[]","description":""},"ColumnsAlias":{"filePath":"polaris-react/src/components/InlineGrid/InlineGrid.tsx","syntaxKind":"TypeAliasDeclaration","name":"ColumnsAlias","value":"'oneThird' | 'oneHalf' | 'twoThirds'","description":""},"Gap":{"filePath":"polaris-react/src/components/InlineGrid/InlineGrid.tsx","syntaxKind":"TypeAliasDeclaration","name":"Gap","value":"ResponsiveProp<SpaceScale>","description":""},"InlineGridAlignItems":{"filePath":"polaris-react/src/components/InlineGrid/InlineGrid.tsx","syntaxKind":"TypeAliasDeclaration","name":"InlineGridAlignItems","value":"'start' | 'end' | 'center'","description":""}},"editPageLinkPath":"polaris.shopify.com/content/components/layout-and-structure/inline-grid.mdx"},"__N_SSG":true}