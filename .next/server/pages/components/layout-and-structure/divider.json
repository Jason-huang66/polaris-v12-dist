{"pageProps":{"mdx":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\"\n  }, _provideComponents(), props.components), {Lede, Examples, Props} = _components;\n  if (!Examples) _missingMdxReference(\"Examples\", true);\n  if (!Lede) _missingMdxReference(\"Lede\", true);\n  if (!Props) _missingMdxReference(\"Props\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      id: \"frontmattertitle\",\n      children: frontmatter.title\n    }), \"\\n\", _jsx(Lede, {\n      children: _jsx(_components.p, {\n        children: \"Use to separate or group content.\"\n      })\n    }), \"\\n\", _jsx(Examples, {}), \"\\n\", _jsx(Props, {\n      componentName: frontmatter.title\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"title":"Divider","category":"Layout and structure","keywords":["layout","divider","border"],"examples":[{"fileName":"divider-with-border-color.tsx","title":"Color","description":"Divider border color can be adjusted using the [Color tokens](https://polaris.shopify.com/tokens/color)."}],"previewImg":"/images/components/layout-and-structure/divider.png"},"scope":{"__remarkNextMdxImporter":{}}},"examples":[{"fileName":"divider-with-border-color.tsx","title":"Color","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_components.p, {\n    children: [\"Divider border color can be adjusted using the \", _jsx(_components.a, {\n      href: \"https://polaris.shopify.com/tokens/color\",\n      children: \"Color tokens\"\n    }), \".\"]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import React from 'react';\n\nimport {Card, Divider, Text, BlockStack} from '@shopify/polaris';\n\n\nfunction DividerWithBorderColorExample() {\n  return (\n    <Card>\n      <BlockStack gap=\"500\">\n        <Text as=\"h1\" variant=\"headingSm\">\n          Default\n        </Text>\n        <Divider />\n        <Text as=\"h1\" variant=\"headingSm\">\n          Border\n        </Text>\n        <Divider borderColor=\"border\" />\n        <Text as=\"h1\" variant=\"headingSm\">\n          Border inverse\n        </Text>\n        <Divider borderColor=\"border-inverse\" />\n        <Text as=\"h1\" variant=\"headingSm\">\n          Transparent\n        </Text>\n        <Divider borderColor=\"transparent\" />\n      </BlockStack>\n    </Card>\n  );\n}\n\n"}],"seoDescription":"Use to separate or group content.","type":{"DividerProps":{"filePath":"polaris-react/src/components/Divider/Divider.tsx","name":"DividerProps","description":"","members":[{"filePath":"polaris-react/src/components/Divider/Divider.tsx","syntaxKind":"PropertySignature","name":"borderColor","value":"ColorBorderAlias | \"transparent\"","description":"Divider border color","isOptional":true,"defaultValue":"'border-secondary'"},{"filePath":"polaris-react/src/components/Divider/Divider.tsx","syntaxKind":"PropertySignature","name":"borderWidth","value":"BorderWidthScale","description":"Divider border width","isOptional":true,"defaultValue":"'025'"}],"value":"export interface DividerProps {\n  /**\n   * Divider border color\n   * @default 'border-secondary'\n   */\n  borderColor?: ColorBorderAlias | 'transparent';\n  /**\n   * Divider border width\n   * @default '025'\n   */\n  borderWidth?: BorderWidthScale;\n}"}},"editPageLinkPath":"polaris.shopify.com/content/components/layout-and-structure/divider.mdx"},"__N_SSG":true}