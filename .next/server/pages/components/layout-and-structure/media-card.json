{"pageProps":{"mdx":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    h2: \"h2\",\n    ul: \"ul\",\n    li: \"li\",\n    hr: \"hr\",\n    h3: \"h3\",\n    a: \"a\",\n    h4: \"h4\",\n    code: \"code\"\n  }, _provideComponents(), props.components), {Lede, Examples, Props, DoDont} = _components;\n  if (!DoDont) _missingMdxReference(\"DoDont\", true);\n  if (!Examples) _missingMdxReference(\"Examples\", true);\n  if (!Lede) _missingMdxReference(\"Lede\", true);\n  if (!Props) _missingMdxReference(\"Props\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      id: \"frontmattertitle\",\n      children: frontmatter.title\n    }), \"\\n\", _jsx(Lede, {\n      children: _jsx(_components.p, {\n        children: \"Media cards provide a consistent layout to present visual information to merchants. Visual media is used to provide additional context to the written information it's paired with.\"\n      })\n    }), \"\\n\", _jsx(Examples, {}), \"\\n\", _jsx(Props, {\n      componentName: frontmatter.title\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"best-practices\",\n      children: \"Best practices\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Media cards should:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Provide merchants with a clear call to action.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Always pair text with a visual component, for example, body text paired with an image, video, etc.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Use media to enhance the written content. The written content should be able to stand alone without an explanation from the paired media.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Show targeted content toward specific audiences to maximize relevance.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Be dismissable.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h2, {\n      id: \"content-guidelines\",\n      children: \"Content guidelines\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Don’t use media cards as advertisements for your feature. Instead they should educate the merchant about how to accomplish tasks related to the section they’re in.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"title\",\n      children: \"Title\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Media card titles should follow the content guidelines for \", _jsx(_components.a, {\n        href: \"https://polaris.shopify.com/content/actionable-language#headings-and-subheadings\",\n        children: \"headings and subheadings\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"body-content\",\n      children: \"Body content\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Body content should be:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Actionable: start sentences with imperative verbs when telling merchants what actions are available to them, especially something new. Don’t use permissive language like “you can”.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(DoDont, {\n      children: [_jsx(_components.h4, {\n        id: \"do\",\n        children: \"Do\"\n      }), _jsx(_components.p, {\n        children: \"Get performance data for all of your sales channels.\"\n      }), _jsx(_components.h4, {\n        id: \"dont\",\n        children: \"Don’t\"\n      }), _jsx(_components.p, {\n        children: \"Now you can get performance data for all of your sales channels.\"\n      })]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Structured for merchant success: always put the most critical information first\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Clear: use the verb “need” to help merchants understand when they’re required to do something\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(DoDont, {\n      children: [_jsx(_components.h4, {\n        id: \"do-1\",\n        children: \"Do\"\n      }), _jsx(_components.p, {\n        children: \"To buy a shipping label, you need to enter the total weight of your shipment, including packaging.\"\n      }), _jsx(_components.h4, {\n        id: \"dont-1\",\n        children: \"Don’t\"\n      }), _jsx(_components.p, {\n        children: \"To buy a shipping label, you must enter the total weight of your shipment, including packaging.\"\n      })]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"call-to-action\",\n      children: \"Call to action\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Buttons should be:\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Clear and predictable: merchants should be able to anticipate what will happen when they click a button. Never deceive merchants by mislabeling a button.\"\n    }), \"\\n\", _jsxs(DoDont, {\n      children: [_jsx(_components.h4, {\n        id: \"do-2\",\n        children: \"Do\"\n      }), _jsx(_components.p, {\n        children: \"Buy shipping label\"\n      }), _jsx(_components.h4, {\n        id: \"dont-2\",\n        children: \"Don’t\"\n      }), _jsx(_components.p, {\n        children: \"Buy\"\n      })]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Action-led: buttons should always lead with a strong verb that encourages action. To provide enough context to merchants use the {verb}+{noun} format on buttons except in the case of common actions like Save, Close, Cancel, or OK.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(DoDont, {\n      children: [_jsx(_components.h4, {\n        id: \"do-3\",\n        children: \"Do\"\n      }), _jsx(_components.p, {\n        children: \"View shipping settings\"\n      }), _jsx(_components.h4, {\n        id: \"dont-3\",\n        children: \"Don’t\"\n      }), _jsx(_components.p, {\n        children: \"View your settings\"\n      })]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Scannable: avoid unnecessary words and articles such as the, an, or a.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(DoDont, {\n      children: [_jsx(_components.h4, {\n        id: \"do-4\",\n        children: \"Do\"\n      }), _jsx(_components.p, {\n        children: \"Add menu item\"\n      }), _jsx(_components.h4, {\n        id: \"dont-4\",\n        children: \"Don’t\"\n      }), _jsx(_components.p, {\n        children: \"Add a menu item\"\n      })]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h2, {\n      id: \"related-components\",\n      children: \"Related components\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"To create a video card, \", _jsx(_components.a, {\n          href: \"https://polaris.shopify.com/components/video-thumbnail\",\n          children: \"use the video thumbnail component\"\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"To group similar concepts and tasks together, \", _jsx(_components.a, {\n          href: \"https://polaris.shopify.com/components/layout-and-structure/card\",\n          children: \"use the card component\"\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"To create page-level layout, \", _jsx(_components.a, {\n          href: \"https://polaris.shopify.com/components/layout-and-structure/layout\",\n          children: \"use the layout component\"\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"To explain a feature that merchants haven’t tried yet, \", _jsx(_components.a, {\n          href: \"https://polaris.shopify.com/components/layout-and-structure/empty-state\",\n          children: \"use the empty state component\"\n        })]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h2, {\n      id: \"accessibility\",\n      children: \"Accessibility\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The required \", _jsx(_components.code, {\n        children: \"title\"\n      }), \" prop gives the media card a level 2 heading (\", _jsx(_components.code, {\n        children: \"<h2>\"\n      }), \"). This helps with readability and provides structure to screen reader users. It can also accept a ReactNode.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use \", _jsx(_components.a, {\n        href: \"https://polaris.shopify.com/content/actionable-language#navigation\",\n        children: \"actionable language\"\n      }), \" to ensure that the purpose of the media card is clear to all merchants, including those with issues related to reading and language.\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"title":"Media card","shortDescription":"Provides a container for introductory or highlight information. Often used in a grid to present related content.","category":"Layout and structure","keywords":["MediaCard","actionable","updates","new features","Media card","image card","feature card","card with thumbnail","thumbnail card"],"examples":[{"fileName":"media-card-default.tsx","title":"Default","description":"Use to surface educational information about a feature or opportunity."},{"fileName":"media-card-with-small-visual.tsx","title":"With small visual","description":"Use when there are limited vertical space, or when the card should be less prominent."},{"fileName":"media-card-with-secondary-action.tsx","title":"With secondary action","description":"Use when there are two distinct actions merchants can take on the information in the card."},{"fileName":"media-card-with-no-actions.tsx","title":"With no actions","description":"Use when media card does not require any actions."},{"fileName":"media-card-video-card.tsx","title":"Video card","description":"Use to provide a consistent layout for contextual learning content. Use to wrap thumbnails of educational videos about Shopify features in context."},{"fileName":"media-card-portrait-video-card.tsx","title":"Portrait video card","description":"Use when vertical screen space is not limited or when the video card is the page’s primary content. For example, in an empty state."}],"previewImg":"/images/components/layout-and-structure/media-card.png"},"scope":{"__remarkNextMdxImporter":{}}},"examples":[{"fileName":"media-card-default.tsx","title":"Default","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Use to surface educational information about a feature or opportunity.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {MediaCard} from '@shopify/polaris';\nimport React from 'react';\n\nfunction MediaCardExample() {\n  return (\n    <MediaCard\n      title=\"Getting Started\"\n      primaryAction={{\n        content: 'Learn about getting started',\n        onAction: () => {},\n      }}\n      description=\"Discover how Shopify can power up your entrepreneurial journey.\"\n      popoverActions={[{content: 'Dismiss', onAction: () => {}}]}\n    >\n      <img\n        alt=\"\"\n        width=\"100%\"\n        height=\"100%\"\n        style={{\n          objectFit: 'cover',\n          objectPosition: 'center',\n        }}\n        src=\"https://burst.shopifycdn.com/photos/business-woman-smiling-in-office.jpg?width=1850\"\n      />\n    </MediaCard>\n  );\n}\n\n"},{"fileName":"media-card-with-small-visual.tsx","title":"With small visual","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Use when there are limited vertical space, or when the card should be less prominent.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {MediaCard} from '@shopify/polaris';\nimport React from 'react';\n\nfunction MediaCardExample() {\n  return (\n    <MediaCard\n      title=\"Getting Started\"\n      primaryAction={{\n        content: 'Learn about getting started',\n        onAction: () => {},\n      }}\n      description=\"Discover how Shopify can power up your entrepreneurial journey.\"\n      popoverActions={[{content: 'Dismiss', onAction: () => {}}]}\n      size=\"small\"\n    >\n      <img\n        alt=\"\"\n        width=\"100%\"\n        height=\"100%\"\n        style={{\n          objectFit: 'cover',\n          objectPosition: 'center',\n        }}\n        src=\"https://burst.shopifycdn.com/photos/business-woman-smiling-in-office.jpg?width=1850\"\n      />\n    </MediaCard>\n  );\n}\n\n"},{"fileName":"media-card-with-secondary-action.tsx","title":"With secondary action","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Use when there are two distinct actions merchants can take on the information in the card.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {MediaCard} from '@shopify/polaris';\nimport React from 'react';\n\nfunction MediaCardExample() {\n  return (\n    <MediaCard\n      title=\"Get closer to launching your store\"\n      primaryAction={{\n        content: 'Add a product',\n        onAction: () => {},\n      }}\n      secondaryAction={{\n        content: 'Learn more',\n        onAction: () => {},\n      }}\n      description=\"Start your business with eye-catching inventory.\"\n      popoverActions={[{content: 'Dismiss', onAction: () => {}}]}\n    >\n      <img\n        alt=\"\"\n        width=\"100%\"\n        height=\"100%\"\n        style={{objectFit: 'cover', objectPosition: 'center'}}\n        src=\"https://burst.shopifycdn.com/photos/business-woman-smiling-in-office.jpg?width=1850\"\n      />\n    </MediaCard>\n  );\n}\n\n"},{"fileName":"media-card-with-no-actions.tsx","title":"With no actions","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Use when media card does not require any actions.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {MediaCard} from '@shopify/polaris';\nimport React from 'react';\n\nfunction MediaCardExample() {\n  return (\n    <MediaCard\n      title=\"Getting Started\"\n      description=\"Discover how Shopify can power up your entrepreneurial journey.\"\n      popoverActions={[{content: 'Dismiss', onAction: () => {}}]}\n    >\n      <img\n        alt=\"\"\n        width=\"100%\"\n        height=\"100%\"\n        style={{objectFit: 'cover', objectPosition: 'center'}}\n        src=\"https://burst.shopifycdn.com/photos/business-woman-smiling-in-office.jpg?width=1850\"\n      />\n    </MediaCard>\n  );\n}\n\n"},{"fileName":"media-card-video-card.tsx","title":"Video card","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Use to provide a consistent layout for contextual learning content. Use to wrap thumbnails of educational videos about Shopify features in context.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {MediaCard, VideoThumbnail} from '@shopify/polaris';\nimport React from 'react';\n\nfunction MediaCardExample() {\n  return (\n    <MediaCard\n      title=\"Turn your side-project into a business\"\n      primaryAction={{\n        content: 'Learn more',\n        onAction: () => {},\n      }}\n      description={`In this course, you’ll learn how the Kular family turned their mom’s recipe book into a global business.`}\n      popoverActions={[{content: 'Dismiss', onAction: () => {}}]}\n    >\n      <VideoThumbnail\n        videoLength={80}\n        thumbnailUrl=\"https://burst.shopifycdn.com/photos/business-woman-smiling-in-office.jpg?width=1850\"\n        onClick={() => console.log('clicked')}\n      />\n    </MediaCard>\n  );\n}\n\n"},{"fileName":"media-card-portrait-video-card.tsx","title":"Portrait video card","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Use when vertical screen space is not limited or when the video card is the page’s primary content. For example, in an empty state.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {MediaCard, VideoThumbnail} from '@shopify/polaris';\nimport React from 'react';\n\nfunction MediaCardExample() {\n  return (\n    <MediaCard\n      portrait\n      title=\"Turn your side-project into a business\"\n      primaryAction={{\n        content: 'Learn more',\n        onAction: () => {},\n      }}\n      description=\"In this course, you’ll learn how the Kular family turned their mom’s recipe book into a global business.\"\n      popoverActions={[{content: 'Dismiss', onAction: () => {}}]}\n    >\n      <VideoThumbnail\n        videoLength={80}\n        thumbnailUrl=\"https://burst.shopifycdn.com/photos/business-woman-smiling-in-office.jpg?width=1850\"\n        onClick={() => console.log('clicked')}\n      />\n    </MediaCard>\n  );\n}\n\n"}],"seoDescription":"Media cards provide a consistent layout to present visual information to merchants. Visual media is used to provide additional context to the written information it's paired with.","type":{"MediaCardProps":{"filePath":"polaris-react/src/components/MediaCard/MediaCard.tsx","name":"MediaCardProps","description":"","members":[{"filePath":"polaris-react/src/components/MediaCard/MediaCard.tsx","syntaxKind":"PropertySignature","name":"children","value":"React.ReactNode","description":"The visual media to display in the card"},{"filePath":"polaris-react/src/components/MediaCard/MediaCard.tsx","syntaxKind":"PropertySignature","name":"title","value":"React.ReactNode","description":"Heading content"},{"filePath":"polaris-react/src/components/MediaCard/MediaCard.tsx","syntaxKind":"PropertySignature","name":"description","value":"string","description":"Body content"},{"filePath":"polaris-react/src/components/MediaCard/MediaCard.tsx","syntaxKind":"PropertySignature","name":"primaryAction","value":"ComplexAction","description":"Main call to action, rendered as a basic button","isOptional":true},{"filePath":"polaris-react/src/components/MediaCard/MediaCard.tsx","syntaxKind":"PropertySignature","name":"secondaryAction","value":"ComplexAction","description":"Secondary call to action, rendered as a plain button","isOptional":true},{"filePath":"polaris-react/src/components/MediaCard/MediaCard.tsx","syntaxKind":"PropertySignature","name":"popoverActions","value":"ActionListItemDescriptor[]","description":"Action list items to render in ellipsis popover","isOptional":true},{"filePath":"polaris-react/src/components/MediaCard/MediaCard.tsx","syntaxKind":"PropertySignature","name":"portrait","value":"boolean","description":"Whether or not card content should be laid out vertically","isOptional":true,"defaultValue":"false"},{"filePath":"polaris-react/src/components/MediaCard/MediaCard.tsx","syntaxKind":"PropertySignature","name":"size","value":"Size","description":"Size of the visual media in the card","isOptional":true,"defaultValue":"'medium'"},{"filePath":"polaris-react/src/components/MediaCard/MediaCard.tsx","syntaxKind":"PropertySignature","name":"onDismiss","value":"() => void","description":"Callback when MediaCard is dismissed","isOptional":true}],"value":"interface MediaCardProps {\n  /** The visual media to display in the card */\n  children: React.ReactNode;\n  /** Heading content */\n  title: React.ReactNode;\n  /** Body content */\n  description: string;\n  /** Main call to action, rendered as a basic button */\n  primaryAction?: ComplexAction;\n  /** Secondary call to action, rendered as a plain button */\n  secondaryAction?: ComplexAction;\n  /** Action list items to render in ellipsis popover */\n  popoverActions?: ActionListItemDescriptor[];\n  /** Whether or not card content should be laid out vertically\n   * @default false\n   */\n  portrait?: boolean;\n  /** Size of the visual media in the card\n   * @default 'medium'\n   */\n  size?: Size;\n  /** Callback when MediaCard is dismissed */\n  onDismiss?: () => void;\n}"},"ComplexAction":{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"ComplexAction","description":"","members":[{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"id","value":"string","description":"A unique identifier for the action","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"content","value":"string","description":"Content the action displays","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"accessibilityLabel","value":"string","description":"Visually hidden text for screen readers","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"url","value":"string","description":"A destination to link to, rendered in the action","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"external","value":"boolean","description":"Forces url to open in a new tab","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"target","value":"Target","description":"Where to display the url","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"MethodSignature","name":"onAction","value":"() => void","description":"Callback when an action takes place","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"MethodSignature","name":"onMouseEnter","value":"() => void","description":"Callback when mouse enter","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"MethodSignature","name":"onTouchStart","value":"() => void","description":"Callback when element is touched","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"disabled","value":"boolean","description":"Whether or not the action is disabled","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"destructive","value":"boolean","description":"Destructive action","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"icon","value":"any","description":"Source of the icon","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"outline","value":"boolean","description":"Should action be displayed as an outlined button","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"loading","value":"boolean","description":"Should a spinner be displayed","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"plain","value":"boolean","description":"Should action be displayed as a plain link","isOptional":true}],"value":"export interface ComplexAction\n  extends Action,\n    DisableableAction,\n    DestructableAction,\n    IconableAction,\n    OutlineableAction,\n    LoadableAction,\n    PlainAction {}"},"Target":{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"TypeAliasDeclaration","name":"Target","value":"'_blank' | '_self' | '_parent' | '_top'","description":""},"ActionListItemDescriptor":{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"ActionListItemDescriptor","description":"","members":[{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"accessibilityLabel","value":"string","description":"Visually hidden text for screen readers","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"badge","value":"{ tone: \"new\"; content: string; }","description":"","isOptional":true,"deprecationMessage":"Badge component"},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"helpText","value":"React.ReactNode","description":"Additional hint text to display with item","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"icon","value":"any","description":"","isOptional":true,"deprecationMessage":"Source of the icon"},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"image","value":"string","description":"","isOptional":true,"deprecationMessage":"Image source"},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"prefix","value":"React.ReactNode","description":"Prefix source","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"suffix","value":"React.ReactNode","description":"Suffix source","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"ellipsis","value":"boolean","description":"","isOptional":true,"deprecationMessage":"Add an ellipsis suffix to action content. ellipsis appends `...` without truncating. Use truncate instead."},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"truncate","value":"boolean","description":"Truncate the action content either at the beginning or at the end","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"active","value":"boolean","description":"Whether the action is active or not","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"variant","value":"\"default\" | \"menu\" | \"indented\"","description":"The item variations","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"role","value":"string","description":"Defines a role for the action","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"disabled","value":"boolean","description":"Whether or not the action is disabled","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"id","value":"string","description":"A unique identifier for the action","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"content","value":"string","description":"Content the action displays","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"url","value":"string","description":"A destination to link to, rendered in the action","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"external","value":"boolean","description":"Forces url to open in a new tab","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"target","value":"Target","description":"Where to display the url","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"MethodSignature","name":"onAction","value":"() => void","description":"Callback when an action takes place","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"MethodSignature","name":"onMouseEnter","value":"() => void","description":"Callback when mouse enter","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"MethodSignature","name":"onTouchStart","value":"() => void","description":"Callback when element is touched","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"destructive","value":"boolean","description":"Destructive action","isOptional":true}],"value":"export interface ActionListItemDescriptor\n  extends DisableableAction,\n    DestructableAction {\n  /** Visually hidden text for screen readers */\n  accessibilityLabel?: string;\n  /** @deprecated Badge component */\n  badge?: {\n    tone: 'new';\n    content: string;\n  };\n  /** Additional hint text to display with item */\n  helpText?: React.ReactNode;\n  /** @deprecated Source of the icon */\n  icon?: IconSource;\n  /** @deprecated Image source */\n  image?: string;\n  /** Prefix source */\n  prefix?: React.ReactNode;\n  /** Suffix source */\n  suffix?: React.ReactNode;\n  /** @deprecated Add an ellipsis suffix to action content. ellipsis appends `...` without truncating. Use truncate instead. */\n  ellipsis?: boolean;\n  /** Truncate the action content either at the beginning or at the end */\n  truncate?: boolean;\n  /** Whether the action is active or not */\n  active?: boolean;\n  /** The item variations */\n  variant?: 'default' | 'menu' | 'indented';\n  /** Defines a role for the action */\n  role?: string;\n}"},"Size":{"filePath":"polaris-react/src/components/MediaCard/MediaCard.tsx","syntaxKind":"TypeAliasDeclaration","name":"Size","value":"'small' | 'medium'","description":""}},"editPageLinkPath":"polaris.shopify.com/content/components/layout-and-structure/media-card.mdx"},"__N_SSG":true}