{"pageProps":{"mdx":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    h2: \"h2\",\n    ul: \"ul\",\n    li: \"li\",\n    hr: \"hr\",\n    h3: \"h3\",\n    h4: \"h4\",\n    a: \"a\"\n  }, _provideComponents(), props.components), {Lede, Examples, Props, DoDont} = _components;\n  if (!DoDont) _missingMdxReference(\"DoDont\", true);\n  if (!Examples) _missingMdxReference(\"Examples\", true);\n  if (!Lede) _missingMdxReference(\"Lede\", true);\n  if (!Props) _missingMdxReference(\"Props\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      id: \"frontmattertitle\",\n      children: frontmatter.title\n    }), \"\\n\", _jsx(Lede, {\n      children: _jsx(_components.p, {\n        children: \"The account connection component is used so merchants can connect or disconnect their store to various accounts. For example, if merchants want to use the Facebook sales channel, they need to connect their Facebook account to their Shopify store.\"\n      })\n    }), \"\\n\", _jsx(Examples, {}), \"\\n\", _jsx(Props, {\n      componentName: frontmatter.title\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"best-practices\",\n      children: \"Best practices\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The account component should:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Be placed at the top of the Account page for the relevant sales channel\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Identify the name of the platform or service merchants can connect to\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Show whether the account is connected or disconnected so that merchants can easily connect or disconnect an account\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Include a link to the relevant sales channel or platform terms and conditions, including information about any charges or fees that merchants may incur by using the channel or platform\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Link to terms and conditions, which should open up on the sales channel developer’s website in a new browser window\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h2, {\n      id: \"content-guidelines\",\n      children: \"Content guidelines\"\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"title\",\n      children: \"Title\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The account connection title should be the name of the platform or service that merchants can connect to, followed by the word “account”. Write account connection titles in sentence case (capitalize the first word and proper nouns only).\"\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"for-example\",\n      children: \"For example:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Facebook account\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Mailchimp account\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Instagram account\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(DoDont, {\n      children: [_jsx(_components.h4, {\n        id: \"do\",\n        children: \"Do\"\n      }), _jsxs(_components.ul, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: \"Facebook account\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"Instagram account\"\n        }), \"\\n\"]\n      }), _jsx(_components.h4, {\n        id: \"dont\",\n        children: \"Don’t\"\n      }), _jsxs(_components.ul, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: \"Connect your Account\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"Instagram Account\"\n        }), \"\\n\"]\n      })]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"terms-and-conditions\",\n      children: \"Terms and conditions\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Clearly link to your terms and conditions and let merchants know about any additional costs of your service.\"\n    }), \"\\n\", _jsxs(DoDont, {\n      children: [_jsx(_components.h4, {\n        id: \"do-1\",\n        children: \"Do\"\n      }), _jsxs(_components.ul, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: \"By clicking Connect, you agree to accept Sample’s terms and conditions.\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"You’ll pay a commission rate of 15% on sales made through Sample.\"\n        }), \"\\n\"]\n      }), _jsx(_components.h4, {\n        id: \"dont-1\",\n        children: \"Don’t\"\n      }), _jsx(_components.p, {\n        children: \"Learn about terms, conditions, and payment details.\"\n      })]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"connect-button\",\n      children: \"Connect button\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Always use the verb Connect in the button of the account connection component. When merchants click or tap “Connect” it should open up your platform or service’s authorization page in a new browser window.\"\n    }), \"\\n\", _jsxs(DoDont, {\n      children: [_jsx(_components.h4, {\n        id: \"do-2\",\n        children: \"Do\"\n      }), _jsx(_components.p, {\n        children: \"Connect\"\n      }), _jsx(_components.h4, {\n        id: \"dont-2\",\n        children: \"Don’t\"\n      }), _jsx(_components.p, {\n        children: \"Connect to app\"\n      })]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h2, {\n      id: \"accessibility\",\n      children: \"Accessibility\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"See accessibility guidance for the \", _jsx(_components.a, {\n        href: \"https://polaris.shopify.com/components/deprecated/setting-toggle\",\n        children: \"setting toggle component\"\n      }), \" to turn connections on and off.\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"title":"Account connection","shortDescription":"Used for connecting or disconnecting a store to various accounts, like Facebook for the sales channel.","category":"Actions","keywords":["AccountConnection","connect","account","sign-up","default account connection","disconnection","authorize","third-party accounts","integrate","facebook","social media"],"examples":[{"fileName":"account-connection-default.tsx","title":"Default","description":"Use to let merchants connect or disconnect their store to their third-party accounts, like Facebook."}],"previewImg":"/images/components/actions/account-connection.png"},"scope":{"__remarkNextMdxImporter":{}}},"examples":[{"fileName":"account-connection-default.tsx","title":"Default","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Use to let merchants connect or disconnect their store to their third-party accounts, like Facebook.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {Link, AccountConnection} from '@shopify/polaris';\nimport {useState, useCallback} from 'react';\n\nfunction AccountConnectionExample() {\n  const [connected, setConnected] = useState(false);\n  const accountName = connected ? 'Jane Appleseed' : '';\n\n  const handleAction = useCallback(() => {\n    setConnected((connected) => !connected);\n  }, []);\n\n  const buttonText = connected ? 'Disconnect' : 'Connect';\n  const details = connected ? 'Account connected' : 'No account connected';\n  const terms = connected ? null : (\n    <p>\n      By clicking <strong>Connect</strong>, you agree to accept Sample App’s{' '}\n      <Link url=\"Example App\">terms and conditions</Link>. You’ll pay a\n      commission rate of 15% on sales made through Sample App.\n    </p>\n  );\n\n  return (\n    <AccountConnection\n      accountName={accountName}\n      connected={connected}\n      title=\"Example App\"\n      action={{\n        content: buttonText,\n        onAction: handleAction,\n      }}\n      details={details}\n      termsOfService={terms}\n    />\n  );\n}\n\n"}],"seoDescription":"The account connection component is used so merchants can connect or disconnect their store to various accounts. For example, if merchants want to use the Facebook sales channel, they need to connect their Facebook account to their Shopify store.","type":{"AccountConnectionProps":{"filePath":"polaris-react/src/components/AccountConnection/AccountConnection.tsx","name":"AccountConnectionProps","description":"","members":[{"filePath":"polaris-react/src/components/AccountConnection/AccountConnection.tsx","syntaxKind":"PropertySignature","name":"title","value":"React.ReactNode","description":"Content to display as title","isOptional":true},{"filePath":"polaris-react/src/components/AccountConnection/AccountConnection.tsx","syntaxKind":"PropertySignature","name":"details","value":"React.ReactNode","description":"Content to display as additional details","isOptional":true},{"filePath":"polaris-react/src/components/AccountConnection/AccountConnection.tsx","syntaxKind":"PropertySignature","name":"termsOfService","value":"React.ReactNode","description":"Content to display as terms of service","isOptional":true},{"filePath":"polaris-react/src/components/AccountConnection/AccountConnection.tsx","syntaxKind":"PropertySignature","name":"accountName","value":"string","description":"The name of the service","isOptional":true},{"filePath":"polaris-react/src/components/AccountConnection/AccountConnection.tsx","syntaxKind":"PropertySignature","name":"avatarUrl","value":"string","description":"URL for the user’s avatar image","isOptional":true},{"filePath":"polaris-react/src/components/AccountConnection/AccountConnection.tsx","syntaxKind":"PropertySignature","name":"connected","value":"boolean","description":"Set if the account is connected","isOptional":true},{"filePath":"polaris-react/src/components/AccountConnection/AccountConnection.tsx","syntaxKind":"PropertySignature","name":"action","value":"Action","description":"Action for account connection","isOptional":true}],"value":"export interface AccountConnectionProps {\n  /** Content to display as title */\n  title?: React.ReactNode;\n  /** Content to display as additional details */\n  details?: React.ReactNode;\n  /** Content to display as terms of service */\n  termsOfService?: React.ReactNode;\n  /** The name of the service */\n  accountName?: string;\n  /** URL for the user’s avatar image */\n  avatarUrl?: string;\n  /** Set if the account is connected */\n  connected?: boolean;\n  /** Action for account connection */\n  action?: Action;\n}"},"Action":{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Action","description":"","members":[{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"id","value":"string","description":"A unique identifier for the action","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"content","value":"string","description":"Content the action displays","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"accessibilityLabel","value":"string","description":"Visually hidden text for screen readers","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"url","value":"string","description":"A destination to link to, rendered in the action","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"external","value":"boolean","description":"Forces url to open in a new tab","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"PropertySignature","name":"target","value":"Target","description":"Where to display the url","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"MethodSignature","name":"onAction","value":"() => void","description":"Callback when an action takes place","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"MethodSignature","name":"onMouseEnter","value":"() => void","description":"Callback when mouse enter","isOptional":true},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"MethodSignature","name":"onTouchStart","value":"() => void","description":"Callback when element is touched","isOptional":true}],"value":"export interface Action {\n  /** A unique identifier for the action */\n  id?: string;\n  /** Content the action displays */\n  content?: string;\n  /** Visually hidden text for screen readers */\n  accessibilityLabel?: string;\n  /** A destination to link to, rendered in the action */\n  url?: string;\n  /** Forces url to open in a new tab */\n  external?: boolean;\n  /** Where to display the url */\n  target?: Target;\n  /** Callback when an action takes place */\n  onAction?(): void;\n  /** Callback when mouse enter */\n  onMouseEnter?(): void;\n  /** Callback when element is touched */\n  onTouchStart?(): void;\n}"},"Target":{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"TypeAliasDeclaration","name":"Target","value":"'_blank' | '_self' | '_parent' | '_top'","description":""}},"editPageLinkPath":"polaris.shopify.com/content/components/actions/account-connection.mdx"},"__N_SSG":true}