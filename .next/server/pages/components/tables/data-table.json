{"pageProps":{"mdx":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    h2: \"h2\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\",\n    h3: \"h3\",\n    hr: \"hr\",\n    h4: \"h4\",\n    code: \"code\"\n  }, _provideComponents(), props.components), {Lede, Examples, Props, DoDont} = _components;\n  if (!DoDont) _missingMdxReference(\"DoDont\", true);\n  if (!Examples) _missingMdxReference(\"Examples\", true);\n  if (!Lede) _missingMdxReference(\"Lede\", true);\n  if (!Props) _missingMdxReference(\"Props\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      id: \"frontmattertitle\",\n      children: frontmatter.title\n    }), \"\\n\", _jsx(Lede, {\n      children: _jsx(_components.p, {\n        children: \"Data tables are used to organize and display all information from a data set. While a data visualization represents part of data set, a data table lets merchants view details from the entire set. This helps merchants compare and analyze the data.\"\n      })\n    }), \"\\n\", _jsx(Examples, {}), \"\\n\", _jsx(Props, {\n      componentName: frontmatter.title\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"best-practices\",\n      children: \"Best practices\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Data tables should:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Show values across multiple categories and measures.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Allow for filtering and ordering when comparison is not a priority.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Help merchants visualize and scan many values from an entire data set.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Help merchants find other values in the data hierarchy through use of links.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Minimize clutter by only including values that supports the data’s purpose.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Include a summary row to surface the column totals.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Not include calculations within the summary row.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Wrap instead of truncate content. This is because if row titles start with the same word, they’ll all appear the same when truncated.\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Not to be used for an actionable list of items that link to details pages. For this functionality, use the \", _jsx(_components.a, {\n          href: \"https://polaris.shopify.com/components/resource-list\",\n          children: \"resource list component\"\n        }), \".\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"alignment\",\n      children: \"Alignment\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Column content types are built into the component props so the following alignment rules are followed:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Numerical = Right aligned\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Textual data = Left aligned\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Align headers with their related data\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Don’t center align\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h2, {\n      id: \"content-guidelines\",\n      children: \"Content guidelines\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Headers should:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Be informative and descriptive\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Concise and scannable\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Include units of measurement symbols so they aren’t repeated throughout the columns\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Use sentence case (first word capitalized, rest lowercase)\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(DoDont, {\n      children: [_jsx(_components.h4, {\n        id: \"do\",\n        children: \"Do\"\n      }), _jsx(_components.p, {\n        children: \"Temperature °C\"\n      }), _jsx(_components.h4, {\n        id: \"dont\",\n        children: \"Don’t\"\n      }), _jsx(_components.p, {\n        children: \"Temperature\"\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Column content should:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Be concise and scannable\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Not include units of measurement symbols (put those symbols in the headers)\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Use sentence case (first word capitalized, rest lowercase)\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"decimals\",\n      children: \"Decimals\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Keep decimals consistent. For example, don’t use 3 decimals in one row and 2 in others.\"\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h2, {\n      id: \"related-components\",\n      children: \"Related components\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"To create an actionable list of related items that link to details pages, such as a list of customers, use the \", _jsx(_components.a, {\n          href: \"https://polaris.shopify.com/components/resource-list\",\n          children: \"resource list component\"\n        }), \".\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h2, {\n      id: \"accessibility\",\n      children: \"Accessibility\"\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"structure\",\n      children: \"Structure\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Native HTML tables provide a large amount of structural information to screen reader users. Merchants who rely on screen readers can navigate tables and identify relationships between data cells (\", _jsx(_components.code, {\n        children: \"<td>\"\n      }), \") and headers (\", _jsx(_components.code, {\n        children: \"<th>\"\n      }), \") using keys specific to their screen reader.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Sortable tables use the \", _jsx(_components.code, {\n        children: \"aria-sort\"\n      }), \" attribute to convey which columns are sortable (and in what direction). They also use \", _jsx(_components.code, {\n        children: \"aria-label\"\n      }), \" on sorting buttons to convey what activating the button will do.\"]\n    }), \"\\n\", _jsxs(DoDont, {\n      children: [_jsx(_components.h4, {\n        id: \"do-1\",\n        children: \"Do\"\n      }), _jsx(_components.p, {\n        children: \"Use tables for tabular data.\"\n      }), _jsx(_components.h4, {\n        id: \"dont-1\",\n        children: \"Don’t\"\n      }), _jsxs(_components.p, {\n        children: [\"Use tables for layout. For a table-like layout that doesn’t use table HTML elements, use the \", _jsx(_components.a, {\n          href: \"https://polaris.shopify.com/components/resource-list\",\n          children: \"resource list component\"\n        }), \".\"]\n      })]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"keyboard-support\",\n      children: \"Keyboard support\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Sorting controls for the data table component are implemented with native HTML buttons.\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"Give buttons keyboard focus with the \", _jsx(\"kbd\", {\n          children: \"tab\"\n        }), \" key (or \", _jsx(\"kbd\", {\n          children: \"shift\"\n        }), \" + \", _jsx(\"kbd\", {\n          children: \"tab\"\n        }), \" when tabbing backwards)\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Activate buttons with the \", _jsx(\"kbd\", {\n          children: \"enter\"\n        }), \"/\", _jsx(\"kbd\", {\n          children: \"return\"\n        }), \" and \", _jsx(\"kbd\", {\n          children: \"space\"\n        }), \" keys\"]\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"title":"Data table","shortDescription":"Used to organize and display all information from a data set. Aimed to be as simple as possible for merchants.","category":"Tables","keywords":["DataTable","data","table","tabular","index"],"examples":[{"fileName":"data-table-default.tsx","title":"Default","description":"Use to present small amounts of data for merchants to view statically."},{"fileName":"data-table-sortable.tsx","title":"Sortable","description":"Use when clarity of the table’s content is needed. For example, to note the number of rows currently shown in a data table with pagination."},{"fileName":"data-table-with-footer.tsx","title":"With footer","description":"Use when clarity of the table’s content is needed. For example, to note the number of rows currently shown in a data table with pagination."},{"fileName":"data-table-with-custom-totals-heading.tsx","title":"With custom totals heading","description":"Use to provide a custom heading for the totals row."},{"fileName":"data-table-with-totals-in-footer.tsx","title":"With totals in footer","description":"Use to reposition the totals row in a more appropriate location based on the data stored in the table for merchants to better understand its meaning."},{"fileName":"data-table-with-row-heading-links.tsx","title":"With row heading links","description":"Use to help merchants find relevant, finer grained data sets."},{"fileName":"data-table-with-all-of-its-elements.tsx","title":"With all of its elements","description":"Use as a broad example that includes most props available to data table."},{"fileName":"data-table-with-fixed-first-columns.tsx","title":"With fixed first columns","description":"Use when the table contains many columns and it would benefit the merchant to see a set number of columns when scrolling to the right. For example, the first column in the \"Sales by Product\" report table is fixed because the product names are important to reference while analyzing the sales data in other columns.\n\nWhen fixing multiple columns, ensure other data within the table is visible and not limited on smaller screens."},{"fileName":"data-table-with-increased-density-and-zebra-striping.tsx","title":"With increased density and zebra striping","description":"Use as a broad example that includes most props available to data table."},{"fileName":"data-table-with-sticky-header-enabled.tsx","title":"With sticky header enabled","description":"Use as a broad example that includes most props available to data table."},{"fileName":"data-table-with-pagination.tsx","title":"With pagination","description":"Use when the table contains many rows and they need paginating."}],"previewImg":"/images/components/tables/data-table.png"},"scope":{"__remarkNextMdxImporter":{}}},"examples":[{"fileName":"data-table-default.tsx","title":"Default","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Use to present small amounts of data for merchants to view statically.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {Page, LegacyCard, DataTable} from '@shopify/polaris';\nimport React from 'react';\n\nfunction DataTableExample() {\n  const rows = [\n    ['Emerald Silk Gown', '$875.00', 124689, 140, '$122,500.00'],\n    ['Mauve Cashmere Scarf', '$230.00', 124533, 83, '$19,090.00'],\n    [\n      'Navy Merino Wool Blazer with khaki chinos and yellow belt',\n      '$445.00',\n      124518,\n      32,\n      '$14,240.00',\n    ],\n  ];\n\n  return (\n    <Page title=\"Sales by product\">\n      <LegacyCard>\n        <DataTable\n          columnContentTypes={[\n            'text',\n            'numeric',\n            'numeric',\n            'numeric',\n            'numeric',\n          ]}\n          headings={[\n            'Product',\n            'Price',\n            'SKU Number',\n            'Net quantity',\n            'Net sales',\n          ]}\n          rows={rows}\n          totals={['', '', '', 255, '$155,830.00']}\n        />\n      </LegacyCard>\n    </Page>\n  );\n}\n\n"},{"fileName":"data-table-sortable.tsx","title":"Sortable","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Use when clarity of the table’s content is needed. For example, to note the number of rows currently shown in a data table with pagination.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {Page, LegacyCard, DataTable, TableData} from '@shopify/polaris';\nimport {useState, useCallback} from 'react';\n\nfunction SortableDataTableExample() {\n  const [sortedRows, setSortedRows] = useState<TableData[][] | null>(null);\n\n  const initiallySortedRows: TableData[][] = [\n    ['Emerald Silk Gown', '$875.00', 124689, 140, '$122,500.00'],\n    ['Mauve Cashmere Scarf', '$230.00', 124533, 83, '$19,090.00'],\n    [\n      'Navy Merino Wool Blazer with khaki chinos and yellow belt',\n      '$445.00',\n      124518,\n      32,\n      '$14,240.00',\n    ],\n  ];\n  const rows = sortedRows ? sortedRows : initiallySortedRows;\n\n  const handleSort = useCallback(\n    (index: number, direction: 'ascending' | 'descending') =>\n      setSortedRows(sortCurrency(rows, index, direction)),\n    [rows],\n  );\n\n  return (\n    <Page title=\"Sales by product\">\n      <LegacyCard>\n        <DataTable\n          columnContentTypes={[\n            'text',\n            'numeric',\n            'numeric',\n            'numeric',\n            'numeric',\n          ]}\n          headings={[\n            'Product',\n            'Price',\n            'SKU Number',\n            'Net quantity',\n            'Net sales',\n          ]}\n          rows={rows}\n          totals={['', '', '', 255, '$155,830.00']}\n          sortable={[false, true, false, false, true]}\n          defaultSortDirection=\"descending\"\n          initialSortColumnIndex={4}\n          onSort={handleSort}\n        />\n      </LegacyCard>\n    </Page>\n  );\n\n  function sortCurrency(\n    rows: TableData[][],\n    index: number,\n    direction: 'ascending' | 'descending',\n  ): TableData[][] {\n    return [...rows].sort((rowA, rowB) => {\n      const amountA = parseFloat((rowA[index] || 0).toString().substring(1));\n      const amountB = parseFloat((rowB[index] || 0).toString().substring(1));\n\n      return direction === 'descending' ? amountB - amountA : amountA - amountB;\n    });\n  }\n}\n\n"},{"fileName":"data-table-with-footer.tsx","title":"With footer","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Use when clarity of the table’s content is needed. For example, to note the number of rows currently shown in a data table with pagination.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {Page, LegacyCard, DataTable} from '@shopify/polaris';\nimport React from 'react';\n\nfunction DataTableFooterExample() {\n  const rows = [\n    ['Emerald Silk Gown', '$875.00', 124689, 140, '$122,500.00'],\n    ['Mauve Cashmere Scarf', '$230.00', 124533, 83, '$19,090.00'],\n    [\n      'Navy Merino Wool Blazer with khaki chinos and yellow belt',\n      '$445.00',\n      124518,\n      32,\n      '$14,240.00',\n    ],\n  ];\n\n  return (\n    <Page title=\"Sales by product\">\n      <LegacyCard>\n        <DataTable\n          columnContentTypes={[\n            'text',\n            'numeric',\n            'numeric',\n            'numeric',\n            'numeric',\n          ]}\n          headings={[\n            'Product',\n            'Price',\n            'SKU Number',\n            'Net quantity',\n            'Net sales',\n          ]}\n          rows={rows}\n          totals={['', '', '', 255, '$155,830.00']}\n          footerContent={`Showing ${rows.length} of ${rows.length} results`}\n        />\n      </LegacyCard>\n    </Page>\n  );\n}\n\n"},{"fileName":"data-table-with-custom-totals-heading.tsx","title":"With custom totals heading","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Use to provide a custom heading for the totals row.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {Page, LegacyCard, DataTable} from '@shopify/polaris';\nimport React from 'react';\n\nfunction DataTableExample() {\n  const rows = [\n    ['Emerald Silk Gown', '$875.00', 124689, 140, '$122,500.00'],\n    ['Mauve Cashmere Scarf', '$230.00', 124533, 83, '$19,090.00'],\n    [\n      'Navy Merino Wool Blazer with khaki chinos and yellow belt',\n      '$445.00',\n      124518,\n      32,\n      '$14,240.00',\n    ],\n  ];\n\n  return (\n    <Page title=\"Sales by product\">\n      <LegacyCard>\n        <DataTable\n          showTotalsInFooter\n          columnContentTypes={[\n            'text',\n            'numeric',\n            'numeric',\n            'numeric',\n            'numeric',\n          ]}\n          headings={[\n            'Product',\n            'Price',\n            'SKU Number',\n            'Net quantity',\n            'Net sales',\n          ]}\n          rows={rows}\n          totals={['', '', '', '', '$155,830.00']}\n          totalsName={{\n            singular: 'Total net sales',\n            plural: 'Total net sales',\n          }}\n        />\n      </LegacyCard>\n    </Page>\n  );\n}\n\n"},{"fileName":"data-table-with-totals-in-footer.tsx","title":"With totals in footer","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Use to reposition the totals row in a more appropriate location based on the data stored in the table for merchants to better understand its meaning.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {Page, LegacyCard, DataTable} from '@shopify/polaris';\nimport React from 'react';\n\nfunction DataTableExample() {\n  const rows = [\n    ['Emerald Silk Gown', '$875.00', 124689, 140, '$122,500.00'],\n    ['Mauve Cashmere Scarf', '$230.00', 124533, 83, '$19,090.00'],\n    [\n      'Navy Merino Wool Blazer with khaki chinos and yellow belt',\n      '$445.00',\n      124518,\n      32,\n      '$14,240.00',\n    ],\n  ];\n\n  return (\n    <Page title=\"Sales by product\">\n      <LegacyCard>\n        <DataTable\n          columnContentTypes={[\n            'text',\n            'numeric',\n            'numeric',\n            'numeric',\n            'numeric',\n          ]}\n          headings={[\n            'Product',\n            'Price',\n            'SKU Number',\n            'Net quantity',\n            'Net sales',\n          ]}\n          rows={rows}\n          totals={['', '', '', 255, '$155,830.00']}\n          showTotalsInFooter\n        />\n      </LegacyCard>\n    </Page>\n  );\n}\n\n"},{"fileName":"data-table-with-row-heading-links.tsx","title":"With row heading links","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Use to help merchants find relevant, finer grained data sets.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {Link, Page, LegacyCard, DataTable} from '@shopify/polaris';\nimport React from 'react';\n\nfunction DataTableLinkExample() {\n  const rows = [\n    [\n      <Link\n        removeUnderline\n        url=\"https://www.example.com\"\n        key=\"emerald-silk-gown\"\n      >\n        Emerald Silk Gown\n      </Link>,\n      '$875.00',\n      124689,\n      140,\n      '$122,500.00',\n    ],\n    [\n      <Link\n        removeUnderline\n        url=\"https://www.example.com\"\n        key=\"mauve-cashmere-scarf\"\n      >\n        Mauve Cashmere Scarf\n      </Link>,\n      '$230.00',\n      124533,\n      83,\n      '$19,090.00',\n    ],\n    [\n      <Link\n        removeUnderline\n        url=\"https://www.example.com\"\n        key=\"navy-merino-wool\"\n      >\n        Navy Merino Wool Blazer with khaki chinos and yellow belt\n      </Link>,\n      '$445.00',\n      124518,\n      32,\n      '$14,240.00',\n    ],\n  ];\n\n  return (\n    <Page title=\"Sales by product\">\n      <LegacyCard>\n        <DataTable\n          columnContentTypes={[\n            'text',\n            'numeric',\n            'numeric',\n            'numeric',\n            'numeric',\n          ]}\n          headings={['Product', 'Price', 'SKU Number', 'Quantity', 'Net sales']}\n          rows={rows}\n          totals={['', '', '', 255, '$155,830.00']}\n        />\n      </LegacyCard>\n    </Page>\n  );\n}\n\n"},{"fileName":"data-table-with-all-of-its-elements.tsx","title":"With all of its elements","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Use as a broad example that includes most props available to data table.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {Link, Page, LegacyCard, DataTable, TableData} from '@shopify/polaris';\nimport {useState, useCallback} from 'react';\n\nfunction FullDataTableExample() {\n  const [sortedRows, setSortedRows] = useState<TableData[][] | null>(null);\n\n  const initiallySortedRows: TableData[][] = [\n    [\n      <Link\n        removeUnderline\n        url=\"https://www.example.com\"\n        key=\"emerald-silk-gown\"\n      >\n        Emerald Silk Gown\n      </Link>,\n      '$875.00',\n      124689,\n      140,\n      '$121,500.00',\n    ],\n    [\n      <Link\n        removeUnderline\n        url=\"https://www.example.com\"\n        key=\"mauve-cashmere-scarf\"\n      >\n        Mauve Cashmere Scarf\n      </Link>,\n      '$230.00',\n      124533,\n      83,\n      '$19,090.00',\n    ],\n    [\n      <Link\n        removeUnderline\n        url=\"https://www.example.com\"\n        key=\"navy-merino-wool\"\n      >\n        Navy Merino Wool Blazer with khaki chinos and yellow belt\n      </Link>,\n      '$445.00',\n      124518,\n      32,\n      '$14,240.00',\n    ],\n  ];\n\n  const rows = sortedRows ? sortedRows : initiallySortedRows;\n  const handleSort = useCallback(\n    (index: number, direction: 'ascending' | 'descending') =>\n      setSortedRows(sortCurrency(rows, index, direction)),\n    [rows],\n  );\n\n  return (\n    <Page title=\"Sales by product\">\n      <LegacyCard>\n        <DataTable\n          columnContentTypes={[\n            'text',\n            'numeric',\n            'numeric',\n            'numeric',\n            'numeric',\n          ]}\n          headings={[\n            'Product',\n            'Price',\n            'SKU Number',\n            'Net quantity',\n            'Net sales',\n          ]}\n          rows={rows}\n          totals={['', '', '', 255, '$155,830.00']}\n          sortable={[false, true, false, false, true]}\n          defaultSortDirection=\"descending\"\n          initialSortColumnIndex={4}\n          onSort={handleSort}\n          footerContent={`Showing ${rows.length} of ${rows.length} results`}\n        />\n      </LegacyCard>\n    </Page>\n  );\n\n  function sortCurrency(\n    rows: TableData[][],\n    index: number,\n    direction: 'ascending' | 'descending',\n  ): TableData[][] {\n    return [...rows].sort((rowA, rowB) => {\n      const amountA = parseFloat((rowA[index] || 0).toString().substring(1));\n      const amountB = parseFloat((rowB[index] || 0).toString().substring(1));\n\n      return direction === 'descending' ? amountB - amountA : amountA - amountB;\n    });\n  }\n}\n\n"},{"fileName":"data-table-with-fixed-first-columns.tsx","title":"With fixed first columns","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"Use when the table contains many columns and it would benefit the merchant to see a set number of columns when scrolling to the right. For example, the first column in the \\\"Sales by Product\\\" report table is fixed because the product names are important to reference while analyzing the sales data in other columns.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"When fixing multiple columns, ensure other data within the table is visible and not limited on smaller screens.\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {\n  Link,\n  Page,\n  LegacyCard,\n  DataTable,\n  useBreakpoints,\n} from '@shopify/polaris';\n\nfunction DataTableWithFixedFirstColumnsExample() {\n  const rows = [\n    [\n      <Link\n        removeUnderline\n        url=\"https://www.example.com\"\n        key=\"emerald-silk-gown\"\n      >\n        Emerald Silk Gown\n      </Link>,\n      '$875.00',\n      124689,\n      140,\n      '$121,500.00',\n      '$14,250.00',\n      '$12,240.00',\n    ],\n    [\n      <Link\n        removeUnderline\n        url=\"https://www.example.com\"\n        key=\"mauve-cashmere-scarf\"\n      >\n        Mauve Cashmere Scarf\n      </Link>,\n      '$230.00',\n      124533,\n      83,\n      '$19,090.00',\n      '$12,240.00',\n      '$11,270.00',\n    ],\n    [\n      <Link\n        removeUnderline\n        url=\"https://www.example.com\"\n        key=\"navy-merino-wool\"\n      >\n        Navy Merino Wool Blazer with khaki chinos and yellow belt\n      </Link>,\n      '$445.00',\n      124518,\n      32,\n      '$14,240.00',\n      '$10,241.00',\n      '$10,201.00',\n    ],\n    [\n      <Link\n        removeUnderline\n        url=\"https://www.example.com\"\n        key=\"emerald-silk-gown\"\n      >\n        Emerald Silk Gown\n      </Link>,\n      '$875.00',\n      124689,\n      140,\n      '$121,500.00',\n      '$14,240.00',\n      '$14,200.10',\n    ],\n    [\n      <Link\n        removeUnderline\n        url=\"https://www.example.com\"\n        key=\"mauve-cashmere-scarf\"\n      >\n        Mauve Cashmere Scarf\n      </Link>,\n      '$230.00',\n      124533,\n      83,\n      '$19,090.00',\n      '$14,300.30',\n      '$17,200.00',\n    ],\n    [\n      <Link\n        removeUnderline\n        url=\"https://www.example.com\"\n        key=\"navy-merino-wool\"\n      >\n        Navy Merino Wool Blazer with khaki chinos and yellow belt\n      </Link>,\n      '$445.00',\n      124518,\n      32,\n      '$14,240.00',\n      '$18,770.07',\n      '$15,545.00',\n    ],\n    [\n      <Link\n        removeUnderline\n        url=\"https://www.example.com\"\n        key=\"emerald-silk-gown\"\n      >\n        Emerald Silk Gown\n      </Link>,\n      '$875.00',\n      124689,\n      140,\n      '$121,500.00',\n      '$14,240.00',\n      '$14,240.00',\n    ],\n    [\n      <Link\n        removeUnderline\n        url=\"https://www.example.com\"\n        key=\"mauve-cashmere-scarf\"\n      >\n        Mauve Cashmere Scarf\n      </Link>,\n      '$230.00',\n      124533,\n      83,\n      '$19,090.00',\n      '$19,290.00',\n      '$12,997.00',\n    ],\n    [\n      <Link\n        removeUnderline\n        url=\"https://www.example.com\"\n        key=\"navy-merino-wool\"\n      >\n        Navy Merino Wool Blazer with khaki chinos and yellow belt\n      </Link>,\n      '$445.00',\n      124518,\n      32,\n      '$14,240.00',\n      '$11,211.20',\n      '$11,343.50',\n    ],\n    [\n      <Link\n        removeUnderline\n        url=\"https://www.example.com\"\n        key=\"emerald-silk-gown\"\n      >\n        Emerald Silk Gown\n      </Link>,\n      '$875.00',\n      124689,\n      140,\n      '$121,500.00',\n      '$12,430.00',\n      '$17,420.00',\n    ],\n    [\n      <Link\n        removeUnderline\n        url=\"https://www.example.com\"\n        key=\"mauve-cashmere-scarf\"\n      >\n        Mauve Cashmere Scarf\n      </Link>,\n      '$230.00',\n      124533,\n      83,\n      '$19,090.00',\n      '$14,790.00',\n      '$12,370.00',\n    ],\n    [\n      <Link\n        removeUnderline\n        url=\"https://www.example.com\"\n        key=\"navy-merino-wool\"\n      >\n        Navy Merino Wool Blazer with khaki chinos and yellow belt\n      </Link>,\n      '$445.00',\n      124518,\n      32,\n      '$14,240.00',\n      '$16,241.00',\n      '$18,211.00',\n    ],\n    [\n      <Link\n        removeUnderline\n        url=\"https://www.example.com\"\n        key=\"emerald-silk-gown\"\n      >\n        Emerald Silk Gown\n      </Link>,\n      '$875.00',\n      124689,\n      140,\n      '$121,500.00',\n      '$15,111.00',\n      '$11,221.00',\n    ],\n    [\n      <Link\n        removeUnderline\n        url=\"https://www.example.com\"\n        key=\"mauve-cashmere-scarf\"\n      >\n        Mauve Cashmere Scarf\n      </Link>,\n      '$230.00',\n      124533,\n      83,\n      '$19,090.00',\n      '$17,880.00',\n      '$11,280.00',\n    ],\n    [\n      <Link\n        removeUnderline\n        url=\"https://www.example.com\"\n        key=\"navy-merino-wool\"\n      >\n        Navy Merino Wool Blazer with khaki chinos and yellow belt\n      </Link>,\n      '$445.00',\n      124518,\n      32,\n      '$14,240.00',\n      '$11,111.00',\n      '$17,211.00',\n    ],\n    [\n      <Link\n        removeUnderline\n        url=\"https://www.example.com\"\n        key=\"emerald-silk-gown\"\n      >\n        Emerald Silk Gown\n      </Link>,\n      '$875.00',\n      124689,\n      140,\n      '$121,500.00',\n      '$14,240.00',\n      '$17,840.00',\n    ],\n    [\n      <Link\n        removeUnderline\n        url=\"https://www.example.com\"\n        key=\"mauve-cashmere-scarf\"\n      >\n        Mauve Cashmere Scarf\n      </Link>,\n      '$230.00',\n      124533,\n      83,\n      '$19,090.00',\n      '$13,238.00',\n      '$14,288.00',\n    ],\n    [\n      <Link\n        removeUnderline\n        url=\"https://www.example.com\"\n        key=\"navy-merino-wool\"\n      >\n        Navy Merino Wool Blazer with khaki chinos and yellow belt\n      </Link>,\n      '$445.00',\n      124518,\n      32,\n      '$14,240.00',\n      '$14,988.00',\n      '$14,902.10',\n    ],\n  ];\n  const {lgDown} = useBreakpoints();\n  const fixedFirstColumns = lgDown ? 2 : 0;\n\n  return (\n    <Page title=\"Sales by product\">\n      <LegacyCard>\n        <DataTable\n          columnContentTypes={[\n            'text',\n            'numeric',\n            'numeric',\n            'numeric',\n            'numeric',\n            'numeric',\n            'numeric',\n          ]}\n          headings={[\n            'Product',\n            'Price',\n            'SKU Number',\n            'Net quantity',\n            'Net sales',\n            'Gross sales',\n            'Discounts',\n          ]}\n          rows={rows}\n          totals={['', '', '', 255, '$155,830.00', '', '']}\n          sortable={[false, true, false, false, true]}\n          defaultSortDirection=\"descending\"\n          initialSortColumnIndex={4}\n          stickyHeader\n          fixedFirstColumns={fixedFirstColumns}\n        />\n      </LegacyCard>\n    </Page>\n  );\n}\n\n"},{"fileName":"data-table-with-increased-density-and-zebra-striping.tsx","title":"With increased density and zebra striping","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Use as a broad example that includes most props available to data table.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {Link, Page, LegacyCard, DataTable, TableData} from '@shopify/polaris';\nimport {useState, useCallback} from 'react';\n\nfunction FullDataTableExample() {\n  const [sortedRows, setSortedRows] = useState<TableData[][] | null>(null);\n\n  const initiallySortedRows = [\n    [\n      <Link\n        removeUnderline\n        url=\"https://www.example.com\"\n        key=\"emerald-silk-gown\"\n      >\n        Emerald Silk Gown\n      </Link>,\n      '$875.00',\n      124689,\n      140,\n      '$121,500.00',\n    ],\n    [\n      <Link\n        removeUnderline\n        url=\"https://www.example.com\"\n        key=\"mauve-cashmere-scarf\"\n      >\n        Mauve Cashmere Scarf\n      </Link>,\n      '$230.00',\n      124533,\n      83,\n      '$19,090.00',\n    ],\n    [\n      <Link\n        removeUnderline\n        url=\"https://www.example.com\"\n        key=\"navy-merino-wool\"\n      >\n        Navy Merino Wool Blazer with khaki chinos and yellow belt\n      </Link>,\n      '$445.00',\n      124518,\n      32,\n      '$14,240.00',\n    ],\n  ];\n\n  const rows = sortedRows ? sortedRows : initiallySortedRows;\n  const handleSort = useCallback(\n    (index: number, direction: 'ascending' | 'descending') =>\n      setSortedRows(sortCurrency(rows, index, direction)),\n    [rows],\n  );\n\n  return (\n    <Page title=\"Sales by product\">\n      <LegacyCard>\n        <DataTable\n          columnContentTypes={[\n            'text',\n            'numeric',\n            'numeric',\n            'numeric',\n            'numeric',\n          ]}\n          headings={[\n            'Product',\n            'Price',\n            'SKU Number',\n            'Net quantity',\n            'Net sales',\n          ]}\n          rows={rows}\n          totals={['', '', '', 255, '$155,830.00']}\n          sortable={[false, true, false, false, true]}\n          defaultSortDirection=\"descending\"\n          initialSortColumnIndex={4}\n          onSort={handleSort}\n          footerContent={`Showing ${rows.length} of ${rows.length} results`}\n          hasZebraStripingOnData\n          increasedTableDensity\n        />\n      </LegacyCard>\n    </Page>\n  );\n\n  function sortCurrency(\n    rows: TableData[][],\n    index: number,\n    direction: 'ascending' | 'descending',\n  ): TableData[][] {\n    return [...rows].sort((rowA, rowB) => {\n      const amountA = parseFloat((rowA[index] || 0).toString().substring(1));\n      const amountB = parseFloat((rowB[index] || 0).toString().substring(1));\n\n      return direction === 'descending' ? amountB - amountA : amountA - amountB;\n    });\n  }\n}\n\n"},{"fileName":"data-table-with-sticky-header-enabled.tsx","title":"With sticky header enabled","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Use as a broad example that includes most props available to data table.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {Link, Page, LegacyCard, DataTable, TableData} from '@shopify/polaris';\nimport {useState, useCallback} from 'react';\n\nfunction FullDataTableExample() {\n  const [sortedRows, setSortedRows] = useState<TableData[][]>([]);\n\n  const initiallySortedRows: TableData[][] = [\n    [\n      <Link\n        removeUnderline\n        url=\"https://www.example.com\"\n        key=\"emerald-silk-gown\"\n      >\n        Emerald Silk Gown\n      </Link>,\n      '$875.00',\n      124689,\n      140,\n      '$121,500.00',\n    ],\n    [\n      <Link\n        removeUnderline\n        url=\"https://www.example.com\"\n        key=\"mauve-cashmere-scarf\"\n      >\n        Mauve Cashmere Scarf\n      </Link>,\n      '$230.00',\n      124533,\n      83,\n      '$19,090.00',\n    ],\n    [\n      <Link\n        removeUnderline\n        url=\"https://www.example.com\"\n        key=\"navy-merino-wool\"\n      >\n        Navy Merino Wool Blazer with khaki chinos and yellow belt\n      </Link>,\n      '$445.00',\n      124518,\n      32,\n      '$14,240.00',\n    ],\n    [\n      <Link\n        removeUnderline\n        url=\"https://www.example.com\"\n        key=\"emerald-silk-gown\"\n      >\n        Emerald Silk Gown\n      </Link>,\n      '$875.00',\n      124689,\n      140,\n      '$121,500.00',\n    ],\n    [\n      <Link\n        removeUnderline\n        url=\"https://www.example.com\"\n        key=\"mauve-cashmere-scarf\"\n      >\n        Mauve Cashmere Scarf\n      </Link>,\n      '$230.00',\n      124533,\n      83,\n      '$19,090.00',\n    ],\n    [\n      <Link\n        removeUnderline\n        url=\"https://www.example.com\"\n        key=\"navy-merino-wool\"\n      >\n        Navy Merino Wool Blazer with khaki chinos and yellow belt\n      </Link>,\n      '$445.00',\n      124518,\n      32,\n      '$14,240.00',\n    ],\n    [\n      <Link\n        removeUnderline\n        url=\"https://www.example.com\"\n        key=\"emerald-silk-gown\"\n      >\n        Emerald Silk Gown\n      </Link>,\n      '$875.00',\n      124689,\n      140,\n      '$121,500.00',\n    ],\n    [\n      <Link\n        removeUnderline\n        url=\"https://www.example.com\"\n        key=\"mauve-cashmere-scarf\"\n      >\n        Mauve Cashmere Scarf\n      </Link>,\n      '$230.00',\n      124533,\n      83,\n      '$19,090.00',\n    ],\n    [\n      <Link\n        removeUnderline\n        url=\"https://www.example.com\"\n        key=\"navy-merino-wool\"\n      >\n        Navy Merino Wool Blazer with khaki chinos and yellow belt\n      </Link>,\n      '$445.00',\n      124518,\n      32,\n      '$14,240.00',\n    ],\n    [\n      <Link\n        removeUnderline\n        url=\"https://www.example.com\"\n        key=\"emerald-silk-gown\"\n      >\n        Emerald Silk Gown\n      </Link>,\n      '$875.00',\n      124689,\n      140,\n      '$121,500.00',\n    ],\n    [\n      <Link\n        removeUnderline\n        url=\"https://www.example.com\"\n        key=\"mauve-cashmere-scarf\"\n      >\n        Mauve Cashmere Scarf\n      </Link>,\n      '$230.00',\n      124533,\n      83,\n      '$19,090.00',\n    ],\n    [\n      <Link\n        removeUnderline\n        url=\"https://www.example.com\"\n        key=\"navy-merino-wool\"\n      >\n        Navy Merino Wool Blazer with khaki chinos and yellow belt\n      </Link>,\n      '$445.00',\n      124518,\n      32,\n      '$14,240.00',\n    ],\n    [\n      <Link\n        removeUnderline\n        url=\"https://www.example.com\"\n        key=\"emerald-silk-gown\"\n      >\n        Emerald Silk Gown\n      </Link>,\n      '$875.00',\n      124689,\n      140,\n      '$121,500.00',\n    ],\n    [\n      <Link\n        removeUnderline\n        url=\"https://www.example.com\"\n        key=\"mauve-cashmere-scarf\"\n      >\n        Mauve Cashmere Scarf\n      </Link>,\n      '$230.00',\n      124533,\n      83,\n      '$19,090.00',\n    ],\n    [\n      <Link\n        removeUnderline\n        url=\"https://www.example.com\"\n        key=\"navy-merino-wool\"\n      >\n        Navy Merino Wool Blazer with khaki chinos and yellow belt\n      </Link>,\n      '$445.00',\n      124518,\n      32,\n      '$14,240.00',\n    ],\n    [\n      <Link\n        removeUnderline\n        url=\"https://www.example.com\"\n        key=\"emerald-silk-gown\"\n      >\n        Emerald Silk Gown\n      </Link>,\n      '$875.00',\n      124689,\n      140,\n      '$121,500.00',\n    ],\n    [\n      <Link\n        removeUnderline\n        url=\"https://www.example.com\"\n        key=\"mauve-cashmere-scarf\"\n      >\n        Mauve Cashmere Scarf\n      </Link>,\n      '$230.00',\n      124533,\n      83,\n      '$19,090.00',\n    ],\n    [\n      <Link\n        removeUnderline\n        url=\"https://www.example.com\"\n        key=\"navy-merino-wool\"\n      >\n        Navy Merino Wool Blazer with khaki chinos and yellow belt\n      </Link>,\n      '$445.00',\n      124518,\n      32,\n      '$14,240.00',\n    ],\n  ];\n\n  const rows = sortedRows ? sortedRows : initiallySortedRows;\n  const handleSort = useCallback(\n    (index: number, direction: 'ascending' | 'descending') =>\n      setSortedRows(sortCurrency(rows, index, direction)),\n    [rows],\n  );\n\n  return (\n    <Page title=\"Sales by product\">\n      <LegacyCard>\n        <DataTable\n          columnContentTypes={[\n            'text',\n            'numeric',\n            'numeric',\n            'numeric',\n            'numeric',\n          ]}\n          headings={[\n            'Product',\n            'Price',\n            'SKU Number',\n            'Net quantity',\n            'Net sales',\n          ]}\n          rows={rows}\n          totals={['', '', '', 255, '$155,830.00']}\n          sortable={[false, true, false, false, true]}\n          defaultSortDirection=\"descending\"\n          initialSortColumnIndex={4}\n          onSort={handleSort}\n          footerContent={`Showing ${rows.length} of ${rows.length} results`}\n          hasZebraStripingOnData\n          increasedTableDensity\n          stickyHeader\n        />\n      </LegacyCard>\n    </Page>\n  );\n\n  function sortCurrency(\n    rows: TableData[][],\n    index: number,\n    direction: 'ascending' | 'descending',\n  ): TableData[][] {\n    return [...rows].sort((rowA, rowB) => {\n      const amountA = parseFloat((rowA[index] || 0).toString().substring(1));\n      const amountB = parseFloat((rowB[index] || 0).toString().substring(1));\n\n      return direction === 'descending' ? amountB - amountA : amountA - amountB;\n    });\n  }\n}\n\n"},{"fileName":"data-table-with-pagination.tsx","title":"With pagination","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Use when the table contains many rows and they need paginating.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {Page, LegacyCard, DataTable} from '@shopify/polaris';\nimport React from 'react';\n\nfunction DataTableWithPaginationExample() {\n  const rows = [\n    ['Emerald Silk Gown', '$875.00', 124689, 140, '$122,500.00'],\n    ['Mauve Cashmere Scarf', '$230.00', 124533, 83, '$19,090.00'],\n    [\n      'Navy Merino Wool Blazer with khaki chinos and yellow belt',\n      '$445.00',\n      124518,\n      32,\n      '$14,240.00',\n    ],\n  ];\n\n  return (\n    <Page title=\"Sales by product\">\n      <LegacyCard>\n        <DataTable\n          columnContentTypes={[\n            'text',\n            'numeric',\n            'numeric',\n            'numeric',\n            'numeric',\n          ]}\n          headings={[\n            'Product',\n            'Price',\n            'SKU Number',\n            'Net quantity',\n            'Net sales',\n          ]}\n          rows={rows}\n          totals={['', '', '', 255, '$155,830.00']}\n          pagination={{\n            hasNext: true,\n            onNext: () => {},\n          }}\n        />\n      </LegacyCard>\n    </Page>\n  );\n}\n\n"}],"seoDescription":"Data tables are used to organize and display all information from a data set. While a data visualization represents part of data set, a data table lets merchants view details from the entire set. This helps merchants compare and analyze the data.","type":{"DataTableProps":{"filePath":"polaris-react/src/components/DataTable/DataTable.tsx","name":"DataTableProps","description":"","members":[{"filePath":"polaris-react/src/components/DataTable/DataTable.tsx","syntaxKind":"PropertySignature","name":"columnContentTypes","value":"ColumnContentType[]","description":"List of data types, which determines content alignment for each column. Data types are \"text,\" which aligns left, or \"numeric,\" which aligns right."},{"filePath":"polaris-react/src/components/DataTable/DataTable.tsx","syntaxKind":"PropertySignature","name":"headings","value":"React.ReactNode[]","description":"List of column headings."},{"filePath":"polaris-react/src/components/DataTable/DataTable.tsx","syntaxKind":"PropertySignature","name":"totals","value":"any[]","description":"List of numeric column totals, highlighted in the table’s header below column headings. Use empty strings as placeholders for columns with no total.","isOptional":true},{"filePath":"polaris-react/src/components/DataTable/DataTable.tsx","syntaxKind":"PropertySignature","name":"totalsName","value":"{ singular: React.ReactNode; plural: React.ReactNode; }","description":"Custom totals row heading","isOptional":true},{"filePath":"polaris-react/src/components/DataTable/DataTable.tsx","syntaxKind":"PropertySignature","name":"showTotalsInFooter","value":"boolean","description":"Placement of totals row within table","isOptional":true},{"filePath":"polaris-react/src/components/DataTable/DataTable.tsx","syntaxKind":"PropertySignature","name":"rows","value":"any[][]","description":"Lists of data points which map to table body rows."},{"filePath":"polaris-react/src/components/DataTable/DataTable.tsx","syntaxKind":"PropertySignature","name":"hideScrollIndicator","value":"boolean","description":"Hide column visibility and navigation buttons above the header when the table horizontally collapses to be scrollable.","isOptional":true,"defaultValue":"false"},{"filePath":"polaris-react/src/components/DataTable/DataTable.tsx","syntaxKind":"PropertySignature","name":"truncate","value":"boolean","description":"Truncate content in first column instead of wrapping.","isOptional":true,"defaultValue":"true"},{"filePath":"polaris-react/src/components/DataTable/DataTable.tsx","syntaxKind":"PropertySignature","name":"verticalAlign","value":"VerticalAlign","description":"Vertical alignment of content in the cells.","isOptional":true,"defaultValue":"'top'"},{"filePath":"polaris-react/src/components/DataTable/DataTable.tsx","syntaxKind":"PropertySignature","name":"footerContent","value":"any","description":"Content centered in the full width cell of the table footer row.","isOptional":true},{"filePath":"polaris-react/src/components/DataTable/DataTable.tsx","syntaxKind":"PropertySignature","name":"hoverable","value":"boolean","description":"Table row has hover state. Defaults to true.","isOptional":true},{"filePath":"polaris-react/src/components/DataTable/DataTable.tsx","syntaxKind":"PropertySignature","name":"sortable","value":"boolean[]","description":"List of booleans, which maps to whether sorting is enabled or not for each column. Defaults to false for all columns.","isOptional":true},{"filePath":"polaris-react/src/components/DataTable/DataTable.tsx","syntaxKind":"PropertySignature","name":"defaultSortDirection","value":"SortDirection","description":"The direction to sort the table rows on first click or keypress of a sortable column heading. Defaults to ascending.","isOptional":true,"defaultValue":"'ascending'"},{"filePath":"polaris-react/src/components/DataTable/DataTable.tsx","syntaxKind":"PropertySignature","name":"initialSortColumnIndex","value":"number","description":"The index of the heading that the table rows are initially sorted by. Defaults to the first column.","isOptional":true,"defaultValue":"0"},{"filePath":"polaris-react/src/components/DataTable/DataTable.tsx","syntaxKind":"MethodSignature","name":"onSort","value":"(headingIndex: number, direction: SortDirection) => void","description":"Callback fired on click or keypress of a sortable column heading.","isOptional":true},{"filePath":"polaris-react/src/components/DataTable/DataTable.tsx","syntaxKind":"PropertySignature","name":"increasedTableDensity","value":"boolean","description":"Increased density","isOptional":true},{"filePath":"polaris-react/src/components/DataTable/DataTable.tsx","syntaxKind":"PropertySignature","name":"hasZebraStripingOnData","value":"boolean","description":"Add zebra striping to data rows","isOptional":true},{"filePath":"polaris-react/src/components/DataTable/DataTable.tsx","syntaxKind":"PropertySignature","name":"stickyHeader","value":"boolean","description":"Header becomes sticky and pins to top of table when scrolling","isOptional":true},{"filePath":"polaris-react/src/components/DataTable/DataTable.tsx","syntaxKind":"PropertySignature","name":"hasFixedFirstColumn","value":"boolean","description":"","isOptional":true,"deprecationMessage":"Add a fixed first column on horizontal scroll. Use fixedFirstColumns={n} instead."},{"filePath":"polaris-react/src/components/DataTable/DataTable.tsx","syntaxKind":"PropertySignature","name":"fixedFirstColumns","value":"number","description":"Add fixed columns on horizontal scroll.","isOptional":true},{"filePath":"polaris-react/src/components/DataTable/DataTable.tsx","syntaxKind":"PropertySignature","name":"firstColumnMinWidth","value":"string","description":"Specify a min width for the first column if neccessary","isOptional":true},{"filePath":"polaris-react/src/components/DataTable/DataTable.tsx","syntaxKind":"PropertySignature","name":"pagination","value":"DataTablePaginationProps","description":"Properties to enable pagination at the bottom of the table.","isOptional":true}],"value":"export interface DataTableProps {\n  /** List of data types, which determines content alignment for each column. Data types are \"text,\" which aligns left, or \"numeric,\" which aligns right. */\n  columnContentTypes: ColumnContentType[];\n  /** List of column headings. */\n  headings: React.ReactNode[];\n  /** List of numeric column totals, highlighted in the table’s header below column headings. Use empty strings as placeholders for columns with no total. */\n  totals?: TableData[];\n  /** Custom totals row heading */\n  totalsName?: {\n    singular: React.ReactNode;\n    plural: React.ReactNode;\n  };\n  /** Placement of totals row within table */\n  showTotalsInFooter?: boolean;\n  /** Lists of data points which map to table body rows. */\n  rows: TableData[][];\n  /** Hide column visibility and navigation buttons above the header when the table horizontally collapses to be scrollable.\n   * @default false\n   */\n  hideScrollIndicator?: boolean;\n  /** Truncate content in first column instead of wrapping.\n   * @default true\n   */\n  truncate?: boolean;\n  /** Vertical alignment of content in the cells.\n   * @default 'top'\n   */\n  verticalAlign?: VerticalAlign;\n  /** Content centered in the full width cell of the table footer row. */\n  footerContent?: TableData;\n  /** Table row has hover state. Defaults to true. */\n  hoverable?: boolean;\n  /** List of booleans, which maps to whether sorting is enabled or not for each column. Defaults to false for all columns.  */\n  sortable?: boolean[];\n  /**\n   * The direction to sort the table rows on first click or keypress of a sortable column heading. Defaults to ascending.\n   * @default 'ascending'\n   */\n  defaultSortDirection?: SortDirection;\n  /**\n   * The index of the heading that the table rows are initially sorted by. Defaults to the first column.\n   * @default 0\n   */\n  initialSortColumnIndex?: number;\n  /** Callback fired on click or keypress of a sortable column heading. */\n  onSort?(headingIndex: number, direction: SortDirection): void;\n  /** Increased density */\n  increasedTableDensity?: boolean;\n  /** Add zebra striping to data rows */\n  hasZebraStripingOnData?: boolean;\n  /** Header becomes sticky and pins to top of table when scrolling  */\n  stickyHeader?: boolean;\n  /** @deprecated Add a fixed first column on horizontal scroll. Use fixedFirstColumns={n} instead. */\n  hasFixedFirstColumn?: boolean;\n  /** Add fixed columns on horizontal scroll. */\n  fixedFirstColumns?: number;\n  /** Specify a min width for the first column if neccessary */\n  firstColumnMinWidth?: string;\n  /** Properties to enable pagination at the bottom of the table. */\n  pagination?: DataTablePaginationProps;\n}"},"ColumnContentType":{"filePath":"polaris-react/src/components/DataTable/DataTable.tsx","syntaxKind":"TypeAliasDeclaration","name":"ColumnContentType","value":"'text' | 'numeric'","description":""},"VerticalAlign":{"filePath":"polaris-react/src/components/DataTable/types.ts","syntaxKind":"TypeAliasDeclaration","name":"VerticalAlign","value":"'top' | 'bottom' | 'middle' | 'baseline'","description":""},"SortDirection":{"filePath":"polaris-react/src/components/DataTable/types.ts","syntaxKind":"TypeAliasDeclaration","name":"SortDirection","value":"'ascending' | 'descending' | 'none'","description":""},"DataTablePaginationProps":{"filePath":"polaris-react/src/components/DataTable/DataTable.tsx","syntaxKind":"TypeAliasDeclaration","name":"DataTablePaginationProps","value":"Omit<PaginationProps, 'type'>","description":""},"PaginationProps":{"filePath":"polaris-react/src/components/Pagination/Pagination.tsx","name":"PaginationProps","description":"","members":[{"filePath":"polaris-react/src/components/Pagination/Pagination.tsx","syntaxKind":"PropertySignature","name":"nextKeys","value":"Key[]","description":"Keyboard shortcuts for the next button","isOptional":true},{"filePath":"polaris-react/src/components/Pagination/Pagination.tsx","syntaxKind":"PropertySignature","name":"previousKeys","value":"Key[]","description":"Keyboard shortcuts for the previous button","isOptional":true},{"filePath":"polaris-react/src/components/Pagination/Pagination.tsx","syntaxKind":"PropertySignature","name":"nextTooltip","value":"string","description":"Tooltip for the next button","isOptional":true},{"filePath":"polaris-react/src/components/Pagination/Pagination.tsx","syntaxKind":"PropertySignature","name":"previousTooltip","value":"string","description":"Tooltip for the previous button","isOptional":true},{"filePath":"polaris-react/src/components/Pagination/Pagination.tsx","syntaxKind":"PropertySignature","name":"nextURL","value":"string","description":"The URL of the next page","isOptional":true},{"filePath":"polaris-react/src/components/Pagination/Pagination.tsx","syntaxKind":"PropertySignature","name":"previousURL","value":"string","description":"The URL of the previous page","isOptional":true},{"filePath":"polaris-react/src/components/Pagination/Pagination.tsx","syntaxKind":"PropertySignature","name":"hasNext","value":"boolean","description":"Whether there is a next page to show","isOptional":true},{"filePath":"polaris-react/src/components/Pagination/Pagination.tsx","syntaxKind":"PropertySignature","name":"hasPrevious","value":"boolean","description":"Whether there is a previous page to show","isOptional":true},{"filePath":"polaris-react/src/components/Pagination/Pagination.tsx","syntaxKind":"PropertySignature","name":"accessibilityLabel","value":"string","description":"Accessible label for the pagination","isOptional":true},{"filePath":"polaris-react/src/components/Pagination/Pagination.tsx","syntaxKind":"PropertySignature","name":"accessibilityLabels","value":"AccessibilityLabels","description":"Accessible labels for the buttons and UnstyledLinks","isOptional":true},{"filePath":"polaris-react/src/components/Pagination/Pagination.tsx","syntaxKind":"MethodSignature","name":"onNext","value":"() => void","description":"Callback when next button is clicked","isOptional":true},{"filePath":"polaris-react/src/components/Pagination/Pagination.tsx","syntaxKind":"MethodSignature","name":"onPrevious","value":"() => void","description":"Callback when previous button is clicked","isOptional":true},{"filePath":"polaris-react/src/components/Pagination/Pagination.tsx","syntaxKind":"PropertySignature","name":"label","value":"React.ReactNode","description":"Text to provide more context in between the arrow buttons","isOptional":true},{"filePath":"polaris-react/src/components/Pagination/Pagination.tsx","syntaxKind":"PropertySignature","name":"type","value":"\"table\" | \"page\"","description":"Layout structure of the component","isOptional":true}],"value":"export interface PaginationProps {\n  /** Keyboard shortcuts for the next button */\n  nextKeys?: Key[];\n  /** Keyboard shortcuts for the previous button */\n  previousKeys?: Key[];\n  /** Tooltip for the next button */\n  nextTooltip?: string;\n  /** Tooltip for the previous button */\n  previousTooltip?: string;\n  /** The URL of the next page */\n  nextURL?: string;\n  /** The URL of the previous page */\n  previousURL?: string;\n  /** Whether there is a next page to show */\n  hasNext?: boolean;\n  /** Whether there is a previous page to show */\n  hasPrevious?: boolean;\n  /** Accessible label for the pagination */\n  accessibilityLabel?: string;\n  /** Accessible labels for the buttons and UnstyledLinks */\n  accessibilityLabels?: AccessibilityLabels;\n  /** Callback when next button is clicked */\n  onNext?(): void;\n  /** Callback when previous button is clicked */\n  onPrevious?(): void;\n  /** Text to provide more context in between the arrow buttons */\n  label?: React.ReactNode;\n  /** Layout structure of the component */\n  type?: 'page' | 'table';\n}"},"Key":{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","syntaxKind":"EnumDeclaration","name":"Key","value":"export enum Key {\n  Backspace = 8,\n  Tab = 9,\n  Enter = 13,\n  Shift = 16,\n  Ctrl = 17,\n  Alt = 18,\n  Pause = 19,\n  CapsLock = 20,\n  Escape = 27,\n  Space = 32,\n  PageUp = 33,\n  PageDown = 34,\n  End = 35,\n  Home = 36,\n  LeftArrow = 37,\n  UpArrow = 38,\n  RightArrow = 39,\n  DownArrow = 40,\n  Insert = 45,\n  Delete = 46,\n  Key0 = 48,\n  Key1 = 49,\n  Key2 = 50,\n  Key3 = 51,\n  Key4 = 52,\n  Key5 = 53,\n  Key6 = 54,\n  Key7 = 55,\n  Key8 = 56,\n  Key9 = 57,\n  KeyA = 65,\n  KeyB = 66,\n  KeyC = 67,\n  KeyD = 68,\n  KeyE = 69,\n  KeyF = 70,\n  KeyG = 71,\n  KeyH = 72,\n  KeyI = 73,\n  KeyJ = 74,\n  KeyK = 75,\n  KeyL = 76,\n  KeyM = 77,\n  KeyN = 78,\n  KeyO = 79,\n  KeyP = 80,\n  KeyQ = 81,\n  KeyR = 82,\n  KeyS = 83,\n  KeyT = 84,\n  KeyU = 85,\n  KeyV = 86,\n  KeyW = 87,\n  KeyX = 88,\n  KeyY = 89,\n  KeyZ = 90,\n  LeftMeta = 91,\n  RightMeta = 92,\n  Select = 93,\n  Numpad0 = 96,\n  Numpad1 = 97,\n  Numpad2 = 98,\n  Numpad3 = 99,\n  Numpad4 = 100,\n  Numpad5 = 101,\n  Numpad6 = 102,\n  Numpad7 = 103,\n  Numpad8 = 104,\n  Numpad9 = 105,\n  Multiply = 106,\n  Add = 107,\n  Subtract = 109,\n  Decimal = 110,\n  Divide = 111,\n  F1 = 112,\n  F2 = 113,\n  F3 = 114,\n  F4 = 115,\n  F5 = 116,\n  F6 = 117,\n  F7 = 118,\n  F8 = 119,\n  F9 = 120,\n  F10 = 121,\n  F11 = 122,\n  F12 = 123,\n  NumLock = 144,\n  ScrollLock = 145,\n  Semicolon = 186,\n  Equals = 187,\n  Comma = 188,\n  Dash = 189,\n  Period = 190,\n  ForwardSlash = 191,\n  GraveAccent = 192,\n  OpenBracket = 219,\n  BackSlash = 220,\n  CloseBracket = 221,\n  SingleQuote = 222,\n}","members":[{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Backspace","value":8},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Tab","value":9},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Enter","value":13},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Shift","value":16},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Ctrl","value":17},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Alt","value":18},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Pause","value":19},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"CapsLock","value":20},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Escape","value":27},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Space","value":32},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"PageUp","value":33},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"PageDown","value":34},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"End","value":35},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Home","value":36},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"LeftArrow","value":37},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"UpArrow","value":38},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"RightArrow","value":39},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"DownArrow","value":40},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Insert","value":45},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Delete","value":46},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Key0","value":48},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Key1","value":49},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Key2","value":50},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Key3","value":51},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Key4","value":52},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Key5","value":53},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Key6","value":54},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Key7","value":55},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Key8","value":56},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Key9","value":57},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"KeyA","value":65},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"KeyB","value":66},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"KeyC","value":67},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"KeyD","value":68},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"KeyE","value":69},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"KeyF","value":70},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"KeyG","value":71},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"KeyH","value":72},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"KeyI","value":73},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"KeyJ","value":74},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"KeyK","value":75},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"KeyL","value":76},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"KeyM","value":77},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"KeyN","value":78},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"KeyO","value":79},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"KeyP","value":80},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"KeyQ","value":81},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"KeyR","value":82},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"KeyS","value":83},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"KeyT","value":84},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"KeyU","value":85},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"KeyV","value":86},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"KeyW","value":87},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"KeyX","value":88},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"KeyY","value":89},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"KeyZ","value":90},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"LeftMeta","value":91},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"RightMeta","value":92},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Select","value":93},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Numpad0","value":96},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Numpad1","value":97},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Numpad2","value":98},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Numpad3","value":99},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Numpad4","value":100},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Numpad5","value":101},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Numpad6","value":102},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Numpad7","value":103},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Numpad8","value":104},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Numpad9","value":105},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Multiply","value":106},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Add","value":107},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Subtract","value":109},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Decimal","value":110},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Divide","value":111},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"F1","value":112},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"F2","value":113},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"F3","value":114},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"F4","value":115},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"F5","value":116},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"F6","value":117},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"F7","value":118},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"F8","value":119},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"F9","value":120},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"F10","value":121},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"F11","value":122},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"F12","value":123},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"NumLock","value":144},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"ScrollLock","value":145},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Semicolon","value":186},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Equals","value":187},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Comma","value":188},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Dash","value":189},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"Period","value":190},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"ForwardSlash","value":191},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"GraveAccent","value":192},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"OpenBracket","value":219},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"BackSlash","value":220},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"CloseBracket","value":221},{"filePath":"Users/yqtrack/Desktop/shopify-polaris/polaris-main/polaris-react/src/types.ts","name":"SingleQuote","value":222}]},"AccessibilityLabels":{"filePath":"polaris-react/src/components/Pagination/Pagination.tsx","name":"AccessibilityLabels","description":"","members":[{"filePath":"polaris-react/src/components/Pagination/Pagination.tsx","syntaxKind":"PropertySignature","name":"previous","value":"string","description":""},{"filePath":"polaris-react/src/components/Pagination/Pagination.tsx","syntaxKind":"PropertySignature","name":"next","value":"string","description":""}],"value":"interface AccessibilityLabels {\n  previous: string;\n  next: string;\n}"}},"editPageLinkPath":"polaris.shopify.com/content/components/tables/data-table.mdx"},"__N_SSG":true}