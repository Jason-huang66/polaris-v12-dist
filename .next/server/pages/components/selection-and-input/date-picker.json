{"pageProps":{"mdx":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    a: \"a\",\n    h2: \"h2\",\n    ul: \"ul\",\n    li: \"li\",\n    hr: \"hr\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components), {Lede, Examples, Props, TipBanner} = _components;\n  if (!Examples) _missingMdxReference(\"Examples\", true);\n  if (!Lede) _missingMdxReference(\"Lede\", true);\n  if (!Props) _missingMdxReference(\"Props\", true);\n  if (!TipBanner) _missingMdxReference(\"TipBanner\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      id: \"frontmattertitle\",\n      children: frontmatter.title\n    }), \"\\n\", _jsx(Lede, {\n      children: _jsx(_components.p, {\n        children: \"Date pickers let merchants choose dates from a visual calendar thatâ€™s consistently applied wherever dates need to be selected across Shopify.\"\n      })\n    }), \"\\n\", _jsx(Examples, {}), \"\\n\", _jsx(Props, {\n      componentName: frontmatter.title\n    }), \"\\n\", _jsx(TipBanner, {\n      title: \"Tip\",\n      children: _jsxs(_components.p, {\n        children: [\"Check out the \", _jsx(_components.a, {\n          href: \"https://polaris.shopify.com/patterns\",\n          children: \"new patterns section\"\n        }), \" to\\nlearn how merchants prefer to select dates in different scenarios!\"]\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"best-practices\",\n      children: \"Best practices\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Date pickers should:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Use smart defaults and highlight common selections\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Close after a single date is selected unless a range with a start and end date is required\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Set the start date on first click or tap and the end date on second click or tap if a range is required\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Not be used to enter a date that is many years in the future or the past\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Follow \", _jsx(_components.a, {\n          href: \"https://polaris.shopify.com/content/grammar-and-mechanics#dates--numbers--and-measurements\",\n          children: \"date format guidelines\"\n        })]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h2, {\n      id: \"accessibility\",\n      children: \"Accessibility\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Some users might find interacting with date pickers to be challenging. When you use the date picker component, always give users the option to enter the date using a text field component as well.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"If you use the date picker within a \", _jsx(_components.a, {\n        href: \"/components/overlays/popover\",\n        children: \"popover component\"\n      }), \", then use a button to trigger the popover instead of displaying the popover when the text input gets focus. This gives users more control over their experience.\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"keyboard-support\",\n      children: \"Keyboard support\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"Press the \", _jsx(\"kbd\", {\n          children: \"tab\"\n        }), \" key to move forward and \", _jsx(\"kbd\", {\n          children: \"shift\"\n        }), \" + \", _jsx(\"kbd\", {\n          children: \"tab\"\n        }), \" to move backward through the previous button, next button, and the calendar\"]\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"When focus is in the calendar, move keyboard focus between the dates using the arrow keys\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"To select a date that has focus, press the \", _jsx(\"kbd\", {\n          children: \"enter\"\n        }), \"/\", _jsx(\"kbd\", {\n          children: \"return\"\n        }), \" key\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"related-patterns\",\n      children: \"Related patterns\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"/patterns/date-picking\",\n          children: \"Date picking\"\n        })\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"title":"Date picker","category":"Selection and input","keywords":["DatePicker","month","day","year","weekday","choose date","pick date","pick time","date picker","calendar","date selector","date range picker","date range selector"],"examples":[{"fileName":"date-picker-default.tsx","title":"Default","description":"Use when merchants need to select a single day close to today (today is the default starting position for the date picker)."},{"fileName":"date-picker-ranged.tsx","title":"Ranged","description":"Use when merchants need to select a range of days close to today (today is the default starting position for the date picker)."},{"fileName":"date-picker-multi-month-ranged.tsx","title":"Multi-month ranged","description":"Use multi-month mode to show two months at a time."},{"fileName":"date-picker-with-disabled-date-ranges.tsx","title":"With disabled date ranges","description":"Date ranges may be disabed if you do not want them to be selectable"},{"fileName":"date-picker-with-specific-disabled-dates.tsx","title":"With specific disabled dates","description":"Dates may be disabed if you do not want them to be selectable"}],"previewImg":"/images/components/selection-and-input/date-picker.png"},"scope":{"__remarkNextMdxImporter":{}}},"examples":[{"fileName":"date-picker-default.tsx","title":"Default","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Use when merchants need to select a single day close to today (today is the default starting position for the date picker).\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {DatePicker} from '@shopify/polaris';\nimport {useState, useCallback} from 'react';\n\nfunction DatePickerExample() {\n  const [{month, year}, setDate] = useState({month: 1, year: 2018});\n  const [selectedDates, setSelectedDates] = useState({\n    start: new Date('Wed Feb 07 2018 00:00:00 GMT-0500 (EST)'),\n    end: new Date('Wed Feb 07 2018 00:00:00 GMT-0500 (EST)'),\n  });\n\n  const handleMonthChange = useCallback(\n    (month: number, year: number) => setDate({month, year}),\n    [],\n  );\n\n  return (\n    <DatePicker\n      month={month}\n      year={year}\n      onChange={setSelectedDates}\n      onMonthChange={handleMonthChange}\n      selected={selectedDates}\n    />\n  );\n}\n\n"},{"fileName":"date-picker-ranged.tsx","title":"Ranged","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Use when merchants need to select a range of days close to today (today is the default starting position for the date picker).\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {DatePicker} from '@shopify/polaris';\nimport {useState, useCallback} from 'react';\n\nfunction DatePickerExample() {\n  const [{month, year}, setDate] = useState({month: 1, year: 2018});\n  const [selectedDates, setSelectedDates] = useState({\n    start: new Date('Wed Feb 07 2018 00:00:00 GMT-0500 (EST)'),\n    end: new Date('Sat Feb 10 2018 00:00:00 GMT-0500 (EST)'),\n  });\n\n  const handleMonthChange = useCallback(\n    (month: number, year: number) => setDate({month, year}),\n    [],\n  );\n\n  return (\n    <DatePicker\n      month={month}\n      year={year}\n      onChange={setSelectedDates}\n      onMonthChange={handleMonthChange}\n      selected={selectedDates}\n      allowRange\n    />\n  );\n}\n\n"},{"fileName":"date-picker-multi-month-ranged.tsx","title":"Multi-month ranged","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Use multi-month mode to show two months at a time.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {DatePicker} from '@shopify/polaris';\nimport {useState, useCallback} from 'react';\n\nfunction DatePickerExample() {\n  const [{month, year}, setDate] = useState({month: 1, year: 2018});\n  const [selectedDates, setSelectedDates] = useState({\n    start: new Date('Wed Feb 07 2018 00:00:00 GMT-0500 (EST)'),\n    end: new Date('Mon Mar 12 2018 00:00:00 GMT-0500 (EST)'),\n  });\n\n  const handleMonthChange = useCallback(\n    (month: number, year: number) => setDate({month, year}),\n    [],\n  );\n\n  return (\n    <DatePicker\n      month={month}\n      year={year}\n      onChange={setSelectedDates}\n      onMonthChange={handleMonthChange}\n      selected={selectedDates}\n      multiMonth\n      allowRange\n    />\n  );\n}\n\n"},{"fileName":"date-picker-with-disabled-date-ranges.tsx","title":"With disabled date ranges","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Date ranges may be disabed if you do not want them to be selectable\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {DatePicker} from '@shopify/polaris';\nimport {useState, useCallback} from 'react';\n\nfunction DatePickerExample() {\n  const [{month, year}, setDate] = useState({month: 1, year: 2018});\n  const [selectedDates, setSelectedDates] = useState({\n    start: new Date('Wed Feb 07 2018 00:00:00 GMT-0500 (EST)'),\n    end: new Date('Sat Feb 10 2018 00:00:00 GMT-0500 (EST)'),\n  });\n\n  const handleMonthChange = useCallback(\n    (month: number, year: number) => setDate({month, year}),\n    [],\n  );\n\n  return (\n    <DatePicker\n      month={month}\n      year={year}\n      onChange={setSelectedDates}\n      onMonthChange={handleMonthChange}\n      selected={selectedDates}\n      disableDatesBefore={new Date('Sat Feb 03 2018 00:00:00 GMT-0500 (EST)')}\n      disableDatesAfter={new Date('Sun Feb 18 2018 00:00:00 GMT-0500 (EST)')}\n      allowRange\n    />\n  );\n}\n\n"},{"fileName":"date-picker-with-specific-disabled-dates.tsx","title":"With specific disabled dates","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Dates may be disabed if you do not want them to be selectable\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {DatePicker} from '@shopify/polaris';\nimport {useState, useCallback} from 'react';\n\nfunction DatePickerExample() {\n  const [{month, year}, setDate] = useState({month: 1, year: 2018});\n  const [selectedDates, setSelectedDates] = useState<Date>(\n    new Date('Wed Feb 07 2018 00:00:00 GMT-0500 (EST)'),\n  );\n\n  const handleMonthChange = useCallback(\n    (month: number, year: number) => setDate({month, year}),\n    [],\n  );\n\n  const disableSpecificDates = [\n    new Date('Mon Feb 12 2018 00:00:00 GMT-0500 (EST)'),\n    new Date('Sat Feb 10 2018 00:00:00 GMT-0500 (EST)'),\n    new Date('Wed Feb 21 2018 00:00:00 GMT-0500 (EST)'),\n  ];\n\n  return (\n    <DatePicker\n      month={month}\n      year={year}\n      onChange={({start}) => setSelectedDates(start)}\n      onMonthChange={handleMonthChange}\n      selected={selectedDates}\n      disableDatesBefore={new Date('Sat Feb 03 2018 00:00:00 GMT-0500 (EST)')}\n      disableDatesAfter={new Date('Sun Feb 25 2018 00:00:00 GMT-0500 (EST)')}\n      disableSpecificDates={disableSpecificDates}\n    />\n  );\n}\n\n"}],"seoDescription":"Date pickers let merchants choose dates from a visual calendar thatâ€™s consistently applied wherever dates need to be selected across Shopify.","type":{"DatePickerProps":{"filePath":"polaris-react/src/components/DatePicker/DatePicker.tsx","name":"DatePickerProps","description":"","members":[{"filePath":"polaris-react/src/components/DatePicker/DatePicker.tsx","syntaxKind":"PropertySignature","name":"id","value":"string","description":"ID for the element","isOptional":true},{"filePath":"polaris-react/src/components/DatePicker/DatePicker.tsx","syntaxKind":"PropertySignature","name":"selected","value":"Range | Date","description":"The selected date or range of dates","isOptional":true},{"filePath":"polaris-react/src/components/DatePicker/DatePicker.tsx","syntaxKind":"PropertySignature","name":"month","value":"number","description":"The month to show, from 0 to 11. 0 is January, 1 is February ... 11 is December"},{"filePath":"polaris-react/src/components/DatePicker/DatePicker.tsx","syntaxKind":"PropertySignature","name":"year","value":"number","description":"The year to show"},{"filePath":"polaris-react/src/components/DatePicker/DatePicker.tsx","syntaxKind":"PropertySignature","name":"allowRange","value":"boolean","description":"Allow a range of dates to be selected","isOptional":true},{"filePath":"polaris-react/src/components/DatePicker/DatePicker.tsx","syntaxKind":"PropertySignature","name":"disableDatesBefore","value":"Date","description":"Disable selecting dates before this.","isOptional":true},{"filePath":"polaris-react/src/components/DatePicker/DatePicker.tsx","syntaxKind":"PropertySignature","name":"disableDatesAfter","value":"Date","description":"Disable selecting dates after this.","isOptional":true},{"filePath":"polaris-react/src/components/DatePicker/DatePicker.tsx","syntaxKind":"PropertySignature","name":"disableSpecificDates","value":"Date[]","description":"Disable specific dates.","isOptional":true},{"filePath":"polaris-react/src/components/DatePicker/DatePicker.tsx","syntaxKind":"PropertySignature","name":"multiMonth","value":"boolean","description":"The selection can span multiple months","isOptional":true},{"filePath":"polaris-react/src/components/DatePicker/DatePicker.tsx","syntaxKind":"PropertySignature","name":"weekStartsOn","value":"number","description":"First day of week, from 0 to 6. 0 is Sunday, 1 is Monday ... 6 is Saturday","isOptional":true,"defaultValue":"0"},{"filePath":"polaris-react/src/components/DatePicker/DatePicker.tsx","syntaxKind":"PropertySignature","name":"dayAccessibilityLabelPrefix","value":"string","description":"Visually hidden prefix text for selected days on single selection date pickers","isOptional":true},{"filePath":"polaris-react/src/components/DatePicker/DatePicker.tsx","syntaxKind":"MethodSignature","name":"onChange","value":"(date: Range) => void","description":"Callback when date is selected.","isOptional":true},{"filePath":"polaris-react/src/components/DatePicker/DatePicker.tsx","syntaxKind":"MethodSignature","name":"onMonthChange","value":"(month: number, year: number) => void","description":"Callback when month is changed.","isOptional":true}],"value":"export interface DatePickerProps {\n  /** ID for the element */\n  id?: string;\n  /** The selected date or range of dates */\n  selected?: Date | Range;\n  /** The month to show, from 0 to 11. 0 is January, 1 is February ... 11 is December */\n  month: number;\n  /** The year to show */\n  year: number;\n  /** Allow a range of dates to be selected */\n  allowRange?: boolean;\n  /** Disable selecting dates before this. */\n  disableDatesBefore?: Date;\n  /** Disable selecting dates after this. */\n  disableDatesAfter?: Date;\n  /** Disable specific dates. */\n  disableSpecificDates?: Date[];\n  /** The selection can span multiple months */\n  multiMonth?: boolean;\n  /**\n   * First day of week, from 0 to 6. 0 is Sunday, 1 is Monday ... 6 is Saturday\n   * @default 0\n   */\n  weekStartsOn?: number;\n  /** Visually hidden prefix text for selected days on single selection date pickers */\n  dayAccessibilityLabelPrefix?: string;\n  /** Callback when date is selected. */\n  onChange?(date: Range): void;\n  /** Callback when month is changed. */\n  onMonthChange?(month: number, year: number): void;\n}"}},"editPageLinkPath":"polaris.shopify.com/content/components/selection-and-input/date-picker.mdx"},"__N_SSG":true}