{"pageProps":{"mdx":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    code: \"code\",\n    h2: \"h2\",\n    ul: \"ul\",\n    li: \"li\",\n    hr: \"hr\",\n    a: \"a\"\n  }, _provideComponents(), props.components), {Lede, StatusBanner, Examples, Props} = _components;\n  if (!Examples) _missingMdxReference(\"Examples\", true);\n  if (!Lede) _missingMdxReference(\"Lede\", true);\n  if (!Props) _missingMdxReference(\"Props\", true);\n  if (!StatusBanner) _missingMdxReference(\"StatusBanner\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      id: \"frontmattertitle\",\n      children: frontmatter.title\n    }), \"\\n\", _jsx(Lede, {\n      children: _jsx(_components.p, {\n        children: \"A text container is used to wrap text elements such as paragraphs, headings, and lists to give them vertical spacing.\"\n      })\n    }), \"\\n\", _jsx(StatusBanner, {\n      status: frontmatter.status,\n      children: _jsxs(_components.p, {\n        children: [\"The TextContainer is a simple layout component which was made redundant by the\\nBlockStack component. Use BlockStack with \", _jsx(_components.code, {\n          children: \"gap\"\n        }), \" values of 2, 4, and 5 to\\nreplicate layouts.\"]\n      })\n    }), \"\\n\", _jsx(Examples, {}), \"\\n\", _jsx(Props, {\n      componentName: frontmatter.title\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"best-practices\",\n      children: \"Best practices\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The closer the spacing, the closer the relationship between content topics. The closeness visually represents the relationship.\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Use tight spacing to relate content topics to each other\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Use loose spacing to separate concepts that are independent of each other\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h2, {\n      id: \"related-components\",\n      children: \"Related components\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"For more layout variations, or if youâ€™re looking to vertically space components other than text, use \", _jsx(_components.a, {\n          href: \"https://polaris.shopify.com/components/layout-and-structure/block-stack\",\n          children: \"BlockStack\"\n        }), \".\"]\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"title":"Text container","shortDescription":"Used to wrap text elements like paragraphs, headings, and lists for vertical spacing.","category":"Deprecated","releasedIn":"1.9.0","keywords":["spacing","heading","list","layout","vertical","margin","padding"],"status":"Deprecated","examples":[{"fileName":"text-container-default.tsx","title":"Default","description":"Use this component for default vertical spacing."},{"fileName":"text-container-tight.tsx","title":"Tight","description":"Use the tight spacing option to relate content topics to each other."},{"fileName":"text-container-loose.tsx","title":"Loose","description":"Use the loose spacing option to separate concepts that are independent of each other."}],"previewImg":"/images/components/deprecated/text-container.png"},"scope":{"__remarkNextMdxImporter":{}}},"examples":[{"fileName":"text-container-default.tsx","title":"Default","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Use this component for default vertical spacing.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {TextContainer, Text} from '@shopify/polaris';\nimport React from 'react';\n\nfunction TextContainerExample() {\n  return (\n    <TextContainer>\n      <Text variant=\"headingMd\" as=\"h2\">\n        Install the Shopify POS App\n      </Text>\n      <p>\n        Shopify POS is the easiest way to sell your products in person.\n        Available for iPad, iPhone, and Android.\n      </p>\n    </TextContainer>\n  );\n}\n\n"},{"fileName":"text-container-tight.tsx","title":"Tight","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Use the tight spacing option to relate content topics to each other.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {TextContainer, Text} from '@shopify/polaris';\nimport React from 'react';\n\nfunction TextContainerExample() {\n  return (\n    <TextContainer spacing=\"tight\">\n      <Text variant=\"headingMd\" as=\"h2\">\n        Install the Shopify POS App\n      </Text>\n      <p>\n        Shopify POS is the easiest way to sell your products in person.\n        Available for iPad, iPhone, and Android.\n      </p>\n    </TextContainer>\n  );\n}\n\n"},{"fileName":"text-container-loose.tsx","title":"Loose","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Use the loose spacing option to separate concepts that are independent of each other.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {TextContainer} from '@shopify/polaris';\nimport React from 'react';\n\nfunction TextContainerExample() {\n  return (\n    <TextContainer spacing=\"loose\">\n      <p>\n        Manage your Shopify store on-the-go with real-time notifications, access\n        to your dashboard, and order management, all from your smartphone.\n      </p>\n      <p>\n        Shopify POS is the fastest and easiest way to start accepting Visa,\n        Mastercard, American Express, and Discover right from your smartphone or\n        tablet.\n      </p>\n    </TextContainer>\n  );\n}\n\n"}],"seoDescription":"A text container is used to wrap text elements such as paragraphs, headings, and lists to give them vertical spacing.","type":{},"editPageLinkPath":"polaris.shopify.com/content/components/deprecated/text-container.mdx"},"__N_SSG":true}