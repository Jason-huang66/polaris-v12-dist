{"pageProps":{"mdx":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    h2: \"h2\",\n    ul: \"ul\",\n    li: \"li\",\n    hr: \"hr\",\n    h3: \"h3\",\n    h4: \"h4\",\n    img: \"img\",\n    a: \"a\"\n  }, _provideComponents(), props.components), {Lede, Examples, Props, DoDont} = _components;\n  if (!DoDont) _missingMdxReference(\"DoDont\", true);\n  if (!Examples) _missingMdxReference(\"Examples\", true);\n  if (!Lede) _missingMdxReference(\"Lede\", true);\n  if (!Props) _missingMdxReference(\"Props\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      id: \"frontmattertitle\",\n      children: frontmatter.title\n    }), \"\\n\", _jsx(Lede, {\n      children: _jsx(_components.p, {\n        children: \"Skeleton display text is used to provide a low fidelity representation of content before it appears on the page, and improves load times perceived by merchants. Can be used for content in or outside of a card.\"\n      })\n    }), \"\\n\", _jsx(Examples, {}), \"\\n\", _jsx(Props, {\n      componentName: frontmatter.title\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"best-practices\",\n      children: \"Best practices\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Skeleton display text component should:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Give merchants an indication of what the page content will be once loaded\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Use real content for display text that never changes\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h2, {\n      id: \"content-guidelines\",\n      children: \"Content guidelines\"\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"skeleton-display-text\",\n      children: \"Skeleton display text\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Show static display text that that never changes on a page. For example, keep page titles, such as Products on the product list page, but use skeleton loading for page titles that change on the product details page.\"\n    }), \"\\n\", _jsxs(DoDont, {\n      children: [_jsx(_components.h4, {\n        id: \"do\",\n        children: \"Do\"\n      }), _jsx(_components.img, {\n        src: \"/images/components/feedback-indicators/skeleton-display-text/do-show-display-text-for-static-content@2x.png\",\n        alt: \"Image showing skeleton display text for dynamic content\"\n      }), _jsx(_components.p, {\n        children: \"Show actual display text for static content and use skeleton display text for dynamic content.\"\n      }), _jsx(_components.h4, {\n        id: \"dont\",\n        children: \"Don’t\"\n      }), _jsx(_components.img, {\n        src: \"/images/components/feedback-indicators/skeleton-display-text/dont-use-skeleton-for-static-or-placeholder-content-for-dynamic@2x.png\",\n        alt: \"Image showing skeleton display text for static content and placeholder text for dynamic content\"\n      }), _jsx(_components.p, {\n        children: \"Use skeleton display text for static content or placeholder content for dynamic content.\"\n      })]\n    }), \"\\n\", _jsxs(DoDont, {\n      children: [_jsx(_components.h4, {\n        id: \"do-1\",\n        children: \"Do\"\n      }), _jsx(_components.p, {\n        children: \"Show skeleton display text for dynamic page titles.\"\n      }), _jsx(_components.img, {\n        src: \"/images/components/feedback-indicators/skeleton-display-text/do-use-skeleton-for-dynamic-page-titles@2x.png\",\n        alt: \"Image showing skeleton display text for dynamic page title\"\n      })]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h2, {\n      id: \"related-components\",\n      children: \"Related components\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"Use this component with \", _jsx(_components.a, {\n          href: \"https://polaris.shopify.com/components/skeleton-page\",\n          children: \"Skeleton page\"\n        }), \" and \", _jsx(_components.a, {\n          href: \"https://polaris.shopify.com/components/feedback-indicators/skeleton-body-text\",\n          children: \"Skeleton body text\"\n        }), \" to represent the content of a page before it’s loaded.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"When giving feedback for in-context operations, use \", _jsx(_components.a, {\n          href: \"https://polaris.shopify.com/components/progress-bar\",\n          children: \"Progress bar\"\n        }), \" or \", _jsx(_components.a, {\n          href: \"https://polaris.shopify.com/components/spinner\",\n          children: \"Spinner\"\n        }), \" component.\"]\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"title":"Skeleton display text","shortDescription":"Provides a low fidelity representation of content before it appears, improving perceived load times.","category":"Feedback indicators","releasedIn":"1.7.0","keywords":["SkeletonDisplayText","skeleton","loading","page"],"examples":[{"fileName":"skeleton-display-text-medium-and-large.tsx","title":"Medium and large","description":"Use this component to represent medium and large display text such as large metrics on the reports list page, or for page titles."},{"fileName":"skeleton-display-text-extra-large.tsx","title":"Extra large","description":"Use this component to represent extra large display text."},{"fileName":"skeleton-display-text-small.tsx","title":"Small","description":"Use this component to represent small display text such as content headings."}],"previewImg":"/images/components/feedback-indicators/skeleton-display-text.png"},"scope":{"__remarkNextMdxImporter":{}}},"examples":[{"fileName":"skeleton-display-text-medium-and-large.tsx","title":"Medium and large","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Use this component to represent medium and large display text such as large metrics on the reports list page, or for page titles.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {SkeletonDisplayText} from '@shopify/polaris';\nimport React from 'react';\n\nfunction SkeletonExample() {\n  return <SkeletonDisplayText size=\"medium\" />;\n}\n\n"},{"fileName":"skeleton-display-text-extra-large.tsx","title":"Extra large","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Use this component to represent extra large display text.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {SkeletonDisplayText} from '@shopify/polaris';\nimport React from 'react';\n\nfunction SkeletonExample() {\n  return <SkeletonDisplayText size=\"extraLarge\" />;\n}\n\n"},{"fileName":"skeleton-display-text-small.tsx","title":"Small","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Use this component to represent small display text such as content headings.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {SkeletonDisplayText} from '@shopify/polaris';\nimport React from 'react';\n\nfunction SkeletonExample() {\n  return <SkeletonDisplayText size=\"small\" />;\n}\n\n"}],"seoDescription":"Skeleton display text is used to provide a low fidelity representation of content before it appears on the page, and improves load times perceived by merchants. Can be used for content in or outside of a card.","type":{"SkeletonDisplayTextProps":{"filePath":"polaris-react/src/components/SkeletonDisplayText/SkeletonDisplayText.tsx","name":"SkeletonDisplayTextProps","description":"","members":[{"filePath":"polaris-react/src/components/SkeletonDisplayText/SkeletonDisplayText.tsx","syntaxKind":"PropertySignature","name":"size","value":"Size","description":"Size of the text","isOptional":true,"defaultValue":"'medium'"}],"value":"export interface SkeletonDisplayTextProps {\n  /**\n   * Size of the text\n   * @default 'medium'\n   */\n  size?: Size;\n}"},"Size":{"filePath":"polaris-react/src/components/SkeletonDisplayText/SkeletonDisplayText.tsx","syntaxKind":"TypeAliasDeclaration","name":"Size","value":"'small' | 'medium' | 'large' | 'extraLarge'","description":""}},"editPageLinkPath":"polaris.shopify.com/content/components/feedback-indicators/skeleton-display-text.mdx"},"__N_SSG":true}