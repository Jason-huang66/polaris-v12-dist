{"pageProps":{"mdx":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    h2: \"h2\",\n    ul: \"ul\",\n    li: \"li\",\n    hr: \"hr\",\n    a: \"a\"\n  }, _provideComponents(), props.components), {Lede, Examples, Props} = _components;\n  if (!Examples) _missingMdxReference(\"Examples\", true);\n  if (!Lede) _missingMdxReference(\"Lede\", true);\n  if (!Props) _missingMdxReference(\"Props\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      id: \"frontmattertitle\",\n      children: frontmatter.title\n    }), \"\\n\", _jsx(Lede, {\n      children: _jsx(_components.p, {\n        children: \"Skeleton thumbnail is used to provide a low fidelity representation of an image before it appears on the page, and improves load times perceived by merchants. Use for thumbnails in or outside of a card.\"\n      })\n    }), \"\\n\", _jsx(Examples, {}), \"\\n\", _jsx(Props, {\n      componentName: frontmatter.title\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"best-practices\",\n      children: \"Best practices\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Skeleton thumbnail component should:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Try to match the size of the thumbnail to the content being loaded so it gives an accurate representation.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h2, {\n      id: \"related-components\",\n      children: \"Related components\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"Use this component with \", _jsx(_components.a, {\n          href: \"https://polaris.shopify.com/components/skeleton-display-text\",\n          children: \"Skeleton display text\"\n        }), \" to represent the content of a card while itâ€™s loading.\"]\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"title":"Skeleton thumbnail","shortDescription":"Provides a low fidelity representation of an image before it appears, improving perceived load times.","category":"Feedback indicators","releasedIn":"3.7.2","keywords":["SkeletonThumbnail","skeleton","loading","page"],"examples":[{"fileName":"skeleton-thumbnail-medium.tsx","title":"Medium","description":"Use this component to represent medium thumbnails."},{"fileName":"skeleton-thumbnail-large.tsx","title":"Large","description":"Use this component to represent large thumbnails."},{"fileName":"skeleton-thumbnail-small.tsx","title":"Small","description":"Use this component to represent small thumbnails."},{"fileName":"skeleton-thumbnail-extra-small.tsx","title":"Extra small","description":"Use this component to represent extra small thumbnails."}],"previewImg":"/images/components/feedback-indicators/skeleton-thumbnail.png"},"scope":{"__remarkNextMdxImporter":{}}},"examples":[{"fileName":"skeleton-thumbnail-medium.tsx","title":"Medium","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Use this component to represent medium thumbnails.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {SkeletonThumbnail} from '@shopify/polaris';\nimport React from 'react';\n\nfunction SkeletonExample() {\n  return <SkeletonThumbnail size=\"medium\" />;\n}\n\n"},{"fileName":"skeleton-thumbnail-large.tsx","title":"Large","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Use this component to represent large thumbnails.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {SkeletonThumbnail} from '@shopify/polaris';\nimport React from 'react';\n\nfunction SkeletonExample() {\n  return <SkeletonThumbnail size=\"large\" />;\n}\n\n"},{"fileName":"skeleton-thumbnail-small.tsx","title":"Small","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Use this component to represent small thumbnails.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {SkeletonThumbnail} from '@shopify/polaris';\nimport React from 'react';\n\nfunction SkeletonExample() {\n  return <SkeletonThumbnail size=\"small\" />;\n}\n\n"},{"fileName":"skeleton-thumbnail-extra-small.tsx","title":"Extra small","description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"Use this component to represent extra small thumbnails.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}},"code":"import {SkeletonThumbnail} from '@shopify/polaris';\nimport React from 'react';\n\nfunction SkeletonExample() {\n  return <SkeletonThumbnail size=\"extraSmall\" />;\n}\n\n"}],"seoDescription":"Skeleton thumbnail is used to provide a low fidelity representation of an image before it appears on the page, and improves load times perceived by merchants. Use for thumbnails in or outside of a card.","type":{"SkeletonThumbnailProps":{"filePath":"polaris-react/src/components/SkeletonThumbnail/SkeletonThumbnail.tsx","name":"SkeletonThumbnailProps","description":"","members":[{"filePath":"polaris-react/src/components/SkeletonThumbnail/SkeletonThumbnail.tsx","syntaxKind":"PropertySignature","name":"size","value":"Size","description":"Size of the thumbnail","isOptional":true,"defaultValue":"'medium'"}],"value":"export interface SkeletonThumbnailProps {\n  /**\n   * Size of the thumbnail\n   * @default 'medium'\n   */\n  size?: Size;\n}"},"Size":{"filePath":"polaris-react/src/components/SkeletonThumbnail/SkeletonThumbnail.tsx","syntaxKind":"TypeAliasDeclaration","name":"Size","value":"'extraSmall' | 'small' | 'medium' | 'large'","description":""}},"editPageLinkPath":"polaris.shopify.com/content/components/feedback-indicators/skeleton-thumbnail.mdx"},"__N_SSG":true}