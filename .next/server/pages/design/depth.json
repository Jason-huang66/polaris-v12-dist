{"pageProps":{"mdx":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    h2: \"h2\",\n    p: \"p\",\n    h4: \"h4\",\n    img: \"img\"\n  }, _provideComponents(), props.components), {Lede, Subnav, Stack, Card, Grid, Box, DoDont, Dont, Do} = _components;\n  if (!Box) _missingMdxReference(\"Box\", true);\n  if (!Card) _missingMdxReference(\"Card\", true);\n  if (!Do) _missingMdxReference(\"Do\", true);\n  if (!DoDont) _missingMdxReference(\"DoDont\", true);\n  if (!Dont) _missingMdxReference(\"Dont\", true);\n  if (!Grid) _missingMdxReference(\"Grid\", true);\n  if (!Grid.Cell) _missingMdxReference(\"Grid.Cell\", true);\n  if (!Lede) _missingMdxReference(\"Lede\", true);\n  if (!Stack) _missingMdxReference(\"Stack\", true);\n  if (!Subnav) _missingMdxReference(\"Subnav\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      id: \"frontmattertitle\",\n      children: frontmatter.title\n    }), \"\\n\", _jsx(Lede, {\n      children: frontmatter.description\n    }), \"\\n\", _jsx(Subnav, {}), \"\\n\", _jsxs(Stack, {\n      gap: \"800\",\n      children: [_jsx(Card, {\n        height: \"100%\",\n        children: _jsxs(Grid, {\n          gap: \"400\",\n          areas: {\n            xs: ['a a a a a a', 'b b b b b b'],\n            lg: ['a a a a b b b b b b b b']\n          },\n          children: [_jsx(Grid.Cell, {\n            area: \"a\",\n            children: _jsxs(Box, {\n              padding: \"400\",\n              children: [_jsx(_components.h2, {\n                id: \"hierarchy\",\n                children: \"Hierarchy\"\n              }), _jsx(_components.p, {\n                children: \"Depth can effectively establish visual hierarchy. The higher an element sits in the Z scale, the more important it will seem. This enables merchants to understand the importance of different elements and guides their navigation through the interface.\"\n              })]\n            })\n          }), _jsx(Grid.Cell, {\n            area: \"b\",\n            children: _jsxs(Stack, {\n              gap: \"400\",\n              children: [_jsxs(DoDont, {\n                className: \"margin-considered-harmful\",\n                children: [_jsx(_components.h4, {\n                  id: \"do\",\n                  children: \"Do\"\n                }), _jsx(_components.img, {\n                  src: \"/images/design/depth/overview/depth-overview-1@2x.png\",\n                  alt: \"A dropdown menu with a shadow that separates the menu from the background.\"\n                }), _jsx(_components.p, {\n                  children: \"Use depth tactically, and to differentiate between primary and secondary elements.\"\n                }), _jsx(_components.h4, {\n                  id: \"dont\",\n                  children: \"Dont\"\n                }), _jsx(_components.img, {\n                  src: \"/images/design/depth/overview/depth-overview-2@2x.png\",\n                  alt: \"A dropdown menu with a shadow that separates the menu from the background, with an bevel on the item selected.\"\n                }), _jsx(_components.p, {\n                  children: \"Overuse depth, as it can lead to a cluttered and confusing interface. Too many elements pulling attention can disorient merchants.\"\n                })]\n              }), _jsxs(Dont, {\n                height: \"100%\",\n                children: [_jsx(_components.img, {\n                  src: \"/images/design/depth/overview/depth-overview-3@2x.png\",\n                  alt: \"A table with product with a bevel effect.\"\n                }), _jsx(_components.p, {\n                  children: \"Add unnecessary depth to an element. The depth of an element should always be related to its importance or interactivity.\"\n                })]\n              }), _jsxs(Dont, {\n                height: \"100%\",\n                children: [_jsx(_components.img, {\n                  src: \"/images/design/depth/overview/depth-overview-4@2x.png\",\n                  alt: \"A dropdown menu that sticks out of the main container\"\n                }), _jsx(_components.p, {\n                  children: \"Allow elements to protrude outside of their parent containers. This disrupts the natural perception of depth and hierarchy, leading to a visually confusing interface. Instead, maintain the integrity of parent-child relationship in the layout for a cohesive depth perception.\"\n                })]\n              })]\n            })\n          })]\n        })\n      }), _jsx(Card, {\n        children: _jsxs(Grid, {\n          gap: \"400\",\n          areas: {\n            xs: ['a a a a a a', 'b b b b b b'],\n            lg: ['a a a a b b b b b b b b']\n          },\n          children: [_jsx(Grid.Cell, {\n            area: \"a\",\n            children: _jsxs(Box, {\n              padding: \"400\",\n              children: [_jsx(_components.h2, {\n                id: \"interactivity\",\n                children: \"Interactivity\"\n              }), _jsx(_components.p, {\n                children: \"Depth indicates interactivity. Interactive elements, like buttons or cards, get more depth to signal to merchants that they can interact with such components.\"\n              })]\n            })\n          }), _jsx(Grid.Cell, {\n            area: \"b\",\n            children: _jsxs(Stack, {\n              gap: \"400\",\n              children: [_jsxs(DoDont, {\n                className: \"margin-considered-harmful\",\n                children: [_jsx(_components.h4, {\n                  id: \"do-1\",\n                  children: \"Do\"\n                }), _jsx(_components.img, {\n                  src: \"/images/design/depth/overview/depth-overview-5@2x.png\",\n                  alt: \"Two buttons with a style that mimics real buttons.\"\n                }), _jsx(_components.p, {\n                  children: \"Use depth to indicate interactive elements, so it’s obvious what elements merchants can interact with.\"\n                }), _jsx(_components.h4, {\n                  id: \"dont-1\",\n                  children: \"Dont\"\n                }), _jsx(_components.img, {\n                  src: \"/images/design/depth/overview/depth-overview-6@2x.png\",\n                  alt: \"An unfulfilled badge, and product tags with a style that mimics real buttons. \"\n                }), _jsx(_components.p, {\n                  children: \"Give static elements unnecessary depth, as this can mislead merchants to think they’re interactive.\"\n                })]\n              }), _jsxs(DoDont, {\n                className: \"margin-considered-harmful\",\n                children: [_jsx(_components.h4, {\n                  id: \"do-2\",\n                  children: \"Do\"\n                }), _jsx(_components.img, {\n                  src: \"/images/design/depth/overview/depth-overview-7@2x.png\",\n                  alt: \"A button with a visual treatment that make it look like is being pressed down.\"\n                }), _jsx(_components.p, {\n                  children: \"Apply intuitive changes to an element's perceived depth upon interaction, like pushing a button down. This provides visual feedback and intensifies the sense of tactility.\"\n                }), _jsx(_components.h4, {\n                  id: \"dont-2\",\n                  children: \"Dont\"\n                }), _jsx(_components.img, {\n                  src: \"/images/design/depth/overview/depth-overview-8@2x.png\",\n                  alt: \"A button with a visual treatment that make it look like is being elevated.\"\n                }), _jsx(_components.p, {\n                  children: \"Apply unexpected changes to an element’s perceived depth. This causes disorientation and makes the interface feel ill-conceived.\"\n                })]\n              })]\n            })\n          })]\n        })\n      }), _jsx(Card, {\n        children: _jsxs(Grid, {\n          gap: \"400\",\n          areas: {\n            xs: ['a a a a a a', 'b b b b b b'],\n            lg: ['a a a a b b b b b b b b']\n          },\n          children: [_jsx(Grid.Cell, {\n            area: \"a\",\n            children: _jsxs(Box, {\n              padding: \"400\",\n              children: [_jsx(_components.h2, {\n                id: \"focus\",\n                children: \"Focus\"\n              }), _jsx(_components.p, {\n                children: \"Depth helps to guide the merchant's focus. By giving more depth to an element, you can guide the merchant's attention towards it.\"\n              })]\n            })\n          }), _jsx(Grid.Cell, {\n            area: \"b\",\n            children: _jsxs(Stack, {\n              gap: \"400\",\n              children: [_jsxs(Do, {\n                children: [_jsx(_components.img, {\n                  src: \"/images/design/depth/overview/depth-overview-9@2x.png\",\n                  alt: \"A modal window overlapping the interface of a customer details page, with a semi-transparent background that separates the modal from the remaining interface.\"\n                }), _jsx(_components.p, {\n                  children: \"Use depth to highlight action and large pieces of information that overlay on top of other information, to ensure merchants see these first.\"\n                })]\n              }), _jsxs(Dont, {\n                children: [_jsx(_components.img, {\n                  src: \"/images/design/depth/overview/depth-overview-10@2x.png\",\n                  alt: \"A modal window overlapping the interface of a customer details page.\"\n                }), _jsx(_components.p, {\n                  children: \"Rely solely on depth to create focus. Not all merchants perceive depth in the same way, so it's important to use a combination of techniques to ensure your design is accessible to everyone.\"\n                })]\n              })]\n            })\n          })]\n        })\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"title":"Depth","description":"Depth introduces a sense of realism, helps establish visual hierarchy, and creates focus.","order":3,"keywords":["depth","visual hierarchy","focus"],"icon":"CategoriesMajor","showTOC":true,"hideChildren":true,"status":"New"},"scope":{"posts":[{"url":"/design/depth/creating-depth","description":"Depth → ","title":"Creating depth","icon":"VariantMajor","showTOC":true,"keywords":["depth","depth strategy","shadow use","bevel use"],"order":1000}],"__remarkNextMdxImporter":{}}},"seoDescription":"Hierarchy","editPageLinkPath":"/polaris.shopify.com/content/design/depth/index.mdx","isContentPage":false,"showTOC":true,"collapsibleTOC":false},"__N_SSG":true}