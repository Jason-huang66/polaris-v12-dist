{"pageProps":{"mdx":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\n/*Add code snippets with screenshot of layout*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    h2: \"h2\",\n    h3: \"h3\",\n    pre: \"pre\",\n    code: \"code\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components), {Lede, Subnav} = _components;\n  if (!Lede) _missingMdxReference(\"Lede\", true);\n  if (!Subnav) _missingMdxReference(\"Subnav\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      id: \"frontmattertitle\",\n      children: frontmatter.title\n    }), \"\\n\", _jsx(Lede, {\n      children: frontmatter.description\n    }), \"\\n\", _jsx(Subnav, {}), \"\\n\", _jsx(_components.p, {\n      children: \"Creating layouts in polaris.shopify.com is done using a combination of components and layout options.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"layout-options\",\n      children: \"Layout options\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"1: Full width\\n1-2: 1/3 - 2/3\\n1-1-1: 1/3 - 1/3 - 1/3\"\n    }), \"\\n\", \"\\n\", _jsx(_components.h3, {\n      id: \"full-width-layout-in-card\",\n      children: \"Full width layout in Card\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-mdx\",\n        children: \"<Card>\\n  <Row variant=\\\"1-1-1\\\">\\n    <Column></Column>\\n    <Column></Column>\\n    <Column></Column>\\n  </Row>\\n</Card>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"component-options\",\n      children: \"Component options\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"Card\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"Row\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"Column\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"Lede\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"Subnav\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"card\",\n      children: _jsx(_components.code, {\n        children: \"Card\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"Card\"\n      }), \" component creates a new card.\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"row\",\n      children: _jsx(_components.code, {\n        children: \"Row\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"Row\"\n      }), \" component creates a new row.\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"column\",\n      children: _jsx(_components.code, {\n        children: \"Column\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"Column\"\n      }), \" component creates a new column. It should be used within a \", _jsx(_components.code, {\n        children: \"Row\"\n      }), \" component.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"By default, it will not add any styles. It does support applying additional styles using the \", _jsx(_components.code, {\n        children: \"variant\"\n      }), \" prop.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-mdx\",\n        children: \"<Column variant=\\\"directive\\\">...</Column>\\n<Column variant=\\\"do\\\">...</Column>\\n<Column variant=\\\"dont\\\">...</Column>\\n<Column variant=\\\"caution\\\">...</Column>\\n<Column variant=\\\"tip\\\">...</Column>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"questions\",\n      children: \"Questions\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"When to use a specific layout?\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"What content authoring tasks do we want to document?\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Are these components good enough?\"\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"title":"Creating layout","navTitle":"Creating layout","keywords":["how to contribute to polaris documentation","how to contribute to the style guide","documenting in polaris","documentation guidelines"],"order":1},"scope":{"__remarkNextMdxImporter":{}}},"seoDescription":"Creating layouts in polaris.shopify.com is done using a combination of components and layout options.","editPageLinkPath":"/polaris.shopify.com/content/contributing/documentation/creating-layout.mdx","isContentPage":true,"showTOC":false,"collapsibleTOC":false},"__N_SSG":true}