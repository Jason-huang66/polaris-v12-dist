{"pageProps":{"mdx":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\n/*prettier-ignore*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    h2: \"h2\",\n    p: \"p\",\n    a: \"a\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\",\n    code: \"code\",\n    ul: \"ul\",\n    li: \"li\",\n    h3: \"h3\",\n    pre: \"pre\",\n    h4: \"h4\",\n    strong: \"strong\",\n    h5: \"h5\",\n    em: \"em\"\n  }, _provideComponents(), props.components), {Lede, Code, CollapsibleDetails} = _components;\n  if (!Code) _missingMdxReference(\"Code\", true);\n  if (!CollapsibleDetails) _missingMdxReference(\"CollapsibleDetails\", true);\n  if (!Lede) _missingMdxReference(\"Lede\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      id: \"frontmattertitle\",\n      children: frontmatter.title\n    }), \"\\n\", _jsx(Lede, {\n      children: frontmatter.description\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"getting-started\",\n      children: \"Getting started\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Upgrading to Polaris v12 from v11 requires several automated and manual migrations of token, component, and component prop names that have been removed, replaced, or renamed. The bulk of migrations are automated using the \", _jsx(_components.a, {\n        href: \"/tools/polaris-migrator\",\n        children: \"@shopify/polaris-migrator\"\n      }), \" CLI tool, with the edge cases handled by find and replace in your code editor using provided RegExp searches. You can reference the \", _jsx(_components.a, {\n        href: \"#migration-workflow\",\n        children: \"recommended migration workflow\"\n      }), \" or \", _jsx(_components.a, {\n        href: \"#glossary\",\n        children: \"glossary\"\n      }), \" sections for additional migration support.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Not on v11 yet? You'll need to follow the \", _jsx(_components.a, {\n        href: \"https://github.com/Shopify/polaris/tree/main/documentation/guides\",\n        children: \"migration guides\"\n      }), \" for previous major versions before upgrading to v12.\"]\n    }), \"\\n\", _jsx(Code, {\n      code: {\n        title: 'Upgrade to v12',\n        className: 'language-bash',\n        code: `npm install @shopify/polaris@12\\n# or\\nyarn add @shopify/polaris@12`\n      }\n    }), \"\\n\", _jsx(CollapsibleDetails, {\n      summary: \"Note: If you've installed other Polaris packages independently, you will also need to upgrade those to the major versions we released along with v12.\",\n      children: _jsxs(_components.table, {\n        children: [_jsx(_components.thead, {\n          children: _jsxs(_components.tr, {\n            children: [_jsx(_components.th, {\n              children: \"Package\"\n            }), _jsx(_components.th, {\n              children: \"Version\"\n            })]\n          })\n        }), _jsxs(_components.tbody, {\n          children: [_jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"@shopify/polaris\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"12\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"@shopify/polaris-tokens\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"8\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"@shopify/stylelint-polaris\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"15\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"@shopify/polaris-icons\"\n              })\n            }), _jsxs(_components.td, {\n              children: [\"at least \", _jsx(_components.code, {\n                children: \"7.9.0\"\n              })]\n            })]\n          })]\n        })]\n      })\n    }), \"\\n\", _jsx(\"br\", {}), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"/whats-new/version-12\",\n          children: \"What's new in this version\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://github.com/Shopify/polaris/releases/tag/@shopify/polaris@12.0.0\",\n          children: \"v12.0.0 release notes\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"migration-workflow\",\n      children: \"Migration workflow\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"When running token and component migrations, we recommend the following workflow:\"\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"1Ô∏è‚É£-automate-migrations-using-polaris-migrator\",\n      children: \"1Ô∏è‚É£ Automate migrations using Polaris Migrator\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.a, {\n        href: \"/tools/polaris-migrator\",\n        children: \"polaris-migrator\"\n      }), \" CLI commands are scaffolded for you to paste into your terminal:\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"Tailor the directories in the command glob paths to those relevant to your app's file structure. For example, this generic monorepo glob \", _jsx(_components.code, {\n          children: \"**/*.{css,scss}\"\n        }), \" might need to be changed to explicitly target stylesheets in \", _jsx(_components.code, {\n          children: \"{src}/**/*.{css,scss}\"\n        }), \" in your app.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Adjust the file extensions for the migrations you are running. For example, React component migrations in a TypeScript app should target \", _jsx(_components.code, {\n          children: \"*.{ts,tsx}\"\n        }), \" files, while token migrations should target \", _jsx(_components.code, {\n          children: \"*.{css,scss}\"\n        }), \" files.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"# Example migration\\nnpx @shopify/polaris-migrator ...\\n# Find modified files containing \\\"polaris-migrator:\\\" manual migration comments\\nmatching_files=$(grep -r -l \\\"polaris-migrator:\\\" $(git ls-files -m))\\n# Stash the files needing manual migrations if there are any\\nif [[ -n \\\"$matching_files\\\" ]]; then\\n    git stash push $matching_files\\nelse\\n    echo \\\"No modified files contain 'polaris-migrator:'\\\"\\nfi\\n# Stage all migrated files without \\\"polaris-migrator:\\\" comments\\ngit add .\\n# Format staged files only\\ngit diff --staged --name-only | xargs npx prettier --write\\n# Stage formatted files\\ngit add .\\n#  Commit automatic migration\\ngit commit -m \\\"[Automated] Migrate X from Polaris v11 to v12\\\"\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"polaris-migrator\"\n      }), \" could insert comments or skip instances that are unsafe to automatically migrate. You will need to resolve those issues in the next manual migration step.\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"2Ô∏è‚É£-manually-migrate-using-migrator-comments-and-regexp-code-search\",\n      children: \"2Ô∏è‚É£ Manually migrate using migrator comments and RegExp code search\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Now, you need to validate the automatic migration and manually update any outstanding issues. The migration guide sections may have additional resources to help you resolve the migrations manually, such as \", _jsx(_components.code, {\n        children: \"üí° Migration example\"\n      }), \", \", _jsx(_components.code, {\n        children: \"‚û°Ô∏è Replacement mappings\"\n      }), \" tables, and descriptions of what the automated migrations are doing.\"]\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"resolve-polaris-migrator-comments\",\n      children: [\"Resolve \", _jsx(_components.code, {\n        children: \"polaris-migrator:\"\n      }), \" comments\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Unstash the polaris migrator comments if you stashed any in step 1.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"git stash pop\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Go through each of the changed files and search for \", _jsx(_components.code, {\n        children: \"polaris-migrator:\"\n      }), \" comments. Migrate the instance the comment refers to, then delete the comment.\"]\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"validate-with-regexp\",\n      children: \"Validate with RegExp\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Next, search for each of the token RegExp searches which are found under the \", _jsx(_components.code, {\n        children: \"‚úÖ Post-migration RegExp validation\"\n      }), \" toggle in the guide. Update any outstanding migrations until there are no more results for the RegExp search. If you're unsure on how to search in a code editor using RegExp, check out the \", _jsx(_components.a, {\n        href: \"#glossary\",\n        children: \"glossary\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"# Stage all manually migrated files\\ngit add .\\n# Format staged files only\\ngit diff --staged --name-only | xargs npx prettier --write\\n# Optional: run stylelint if using stylelint-polaris and running migrations on stylesheets\\nnpx stylelint \\\"**/*.{css,scss}\\\"\\n#  Commit manual migrations\\ngit commit -m \\\"[Manual] Migrate X from Polaris v11 to v12\\\"\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"glossary\",\n      children: \"Glossary\"\n    }), \"\\n\", _jsx(CollapsibleDetails, {\n      summary: \"Descriptions and resources for some terms in this guide\",\n      children: _jsxs(_components.ul, {\n        children: [\"\\n\", _jsxs(_components.li, {\n          children: [_jsx(_components.strong, {\n            children: _jsx(_components.code, {\n              children: \"<path>\"\n            })\n          }), \": \", _jsx(_components.a, {\n            href: \"https://en.wikipedia.org/wiki/Glob_(programming)\",\n            children: \"glob\"\n          }), \" path for the \", _jsx(_components.code, {\n            children: \"polaris-migrator\"\n          }), \" to run codemods on. e.g.: \", _jsx(_components.code, {\n            children: \"{app,packages}/**/*.{css,scss}\"\n          })]\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [_jsx(_components.strong, {\n            children: _jsx(_components.a, {\n              href: \"/tools/polaris-migrator\",\n              children: \"@shopify/polaris-migrator\"\n            })\n          }), \": CLI codemod tool to do the bulk of migrations for you\"]\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [_jsx(_components.strong, {\n            children: \"Automatic migration or codemod\"\n          }), \": A transformation that runs on your codebase programmatically. These are used to execute a bulk of the necessary migrations on your codebase to reduce the amount of manual migrations needed\"]\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [_jsx(_components.strong, {\n            children: _jsx(_components.a, {\n              href: \"https://en.wikipedia.org/wiki/Regular_expression\",\n              children: \"RegExp\"\n            })\n          }), \": Short for regular expression, a sequence of characters used to match text. If you use a code editor like VSCode, you can follow a tutorial like \", _jsx(_components.a, {\n            href: \"https://itnext.io/vscode-find-and-replace-regex-super-powers-c7f8be0fa80f\",\n            children: \"this one\"\n          }), \" to learn how to search your code using RegExp\"]\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [_jsx(_components.strong, {\n            children: \"‚úÖ Post-migration RegExp validation\"\n          }), \": After you run an automated migration using the \", _jsx(_components.code, {\n            children: \"polaris-migrator\"\n          }), \", the migrator may quick exit or miss edge cases. You can use the RegExp search snippets to find and manually migrate the stragglers\"]\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [_jsx(_components.strong, {\n            children: \"‚û°Ô∏è Token replacement mappings (or other mapping tables)\"\n          }), \": These tables show you at a glance what our migrators are finding and replacing. They are useful to cross reference when dealing with edge cases and manual migrations\"]\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [_jsx(_components.strong, {\n            children: \"üîî Stepped migration\"\n          }), \": These are migrations that must be run in a specific order due to overlapping replacement values. These migrations have been broken out into steps that can be targeted using the \", _jsx(_components.code, {\n            children: \"--step\"\n          }), \" flag when running the migration\"]\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [_jsx(_components.strong, {\n            children: \"üí° Migration example\"\n          }), \": A simple diff showing how the migration should be modifying your code\"]\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"component-migrations\",\n      children: \"Component migrations\"\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"appprovider\",\n      children: \"AppProvider\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"AppProvider\"\n      }), \" \", _jsx(_components.code, {\n        children: \"features\"\n      }), \" prop no longer accepts the keys \", _jsx(_components.code, {\n        children: \"polarisSummerEditions2023\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"polarisSummerEditions2023ShadowBevelOptOut\"\n      }), \". If these were the only features passed into your \", _jsx(_components.code, {\n        children: \"AppProvider\"\n      }), \", you can safely remove the \", _jsx(_components.code, {\n        children: \"features\"\n      }), \" prop completely from your Polaris \", _jsx(_components.code, {\n        children: \"AppProvider\"\n      }), \". If that is not the case, you will need to remove the features specifically related to \", _jsx(_components.code, {\n        children: \"polarisSummerEditions2023\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"polarisSummerEditions2023ShadowBevelOptOut\"\n      }), \" from being passed into the \", _jsx(_components.code, {\n        children: \"features\"\n      }), \" prop.\"]\n    }), \"\\n\", _jsx(CollapsibleDetails, {\n      summary: \"‚úÖ Post-migration RegExp validation\",\n      children: _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <AppProvider features={...} /> prop`,\n          code: (String.raw)`<AppProvider[^>\\w](?:[^>]|\\n)*?features`\n        }\n      })\n    }), \"\\n\", _jsx(CollapsibleDetails, {\n      summary: \"üí° Migration example\",\n      children: _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-diff\",\n          children: \"- <AppProvider features={{polarisSummerEditions2023: true, polarisSummerEditions2023ShadowBevelOptOut: false}} i18n={[]} />\\n+ <AppProvider i18n={[]} />\\n\"\n        })\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"avatar\",\n      children: \"Avatar\"\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"rename-size-prop-values\",\n      children: [\"Rename \", _jsx(_components.code, {\n        children: \"size\"\n      }), \" prop values\"]\n    }), \"\\n\", _jsx(Code, {\n      code: {\n        title: 'polaris-migrator codemod',\n        className: 'language-bash',\n        code: (String.raw)`npx @shopify/polaris-migrator v12-react-avatar-component \"**/*.{ts,tsx}\"`\n      }\n    }), \"\\n\", _jsx(CollapsibleDetails, {\n      summary: \"‚úÖ Post-migration RegExp validation\",\n      children: _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Avatar size=\"...\" /> prop`,\n          code: (String.raw)`<Avatar[^>\\w](?:[^>]|\\n)*?size`\n        }\n      })\n    }), \"\\n\", _jsx(CollapsibleDetails, {\n      summary: \"‚û°Ô∏è Prop replacement mappings for the Avatar size prop\",\n      children: _jsxs(_components.table, {\n        children: [_jsx(_components.thead, {\n          children: _jsxs(_components.tr, {\n            children: [_jsx(_components.th, {\n              children: \"Before\"\n            }), _jsx(_components.th, {\n              children: \"After\"\n            })]\n          })\n        }), _jsxs(_components.tbody, {\n          children: [_jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"size=\\\"extraSmall\\\"\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"size=\\\"xs\\\"\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"size=\\\"small\\\"\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"size=\\\"sm\\\"\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"size=\\\"medium\\\"\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"size=\\\"md\\\"\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"size=\\\"large\\\"\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"size=\\\"lg\\\"\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"size=\\\"xl-experimental\\\"\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"size=\\\"xl\\\"\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"size=\\\"2xl-experimental\\\"\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"size=\\\"xl\\\"\"\n              })\n            })]\n          })]\n        })]\n      })\n    }), \"\\n\", _jsx(CollapsibleDetails, {\n      summary: \"üí° Migration example\",\n      children: _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-diff\",\n          children: \"- <Avatar size=\\\"extraSmall\\\" />\\n- <Avatar size=\\\"small\\\" />\\n- <Avatar size=\\\"medium\\\" />\\n- <Avatar size=\\\"large\\\" />\\n- <Avatar size=\\\"xl-experimental\\\" />\\n- <Avatar size=\\\"2xl-experimental\\\" />\\n+ <Avatar size=\\\"xs\\\" />\\n+ <Avatar size=\\\"sm\\\" />\\n+ <Avatar size=\\\"md\\\" />\\n+ <Avatar size=\\\"lg\\\" />\\n+ <Avatar size=\\\"xl\\\" />\\n+ <Avatar size=\\\"xl\\\" />\\n\"\n        })\n      })\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"remove-shape-prop\",\n      children: [\"Remove \", _jsx(_components.code, {\n        children: \"shape\"\n      }), \" prop\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"Avatar\"\n      }), \" \", _jsx(_components.code, {\n        children: \"shape\"\n      }), \" prop was deprecated because circular shapes are no longer part of the admin design language. Remove the \", _jsx(_components.code, {\n        children: \"shape\"\n      }), \" prop from \", _jsx(_components.code, {\n        children: \"Avatar\"\n      }), \".\"]\n    }), \"\\n\", _jsx(CollapsibleDetails, {\n      summary: \"‚úÖ Post-migration RegExp validation\",\n      children: _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for deprecated <Avatar shape=\"...\" /> prop`,\n          code: (String.raw)`<Avatar[^>\\w](?:[^>]|\\n)*?shape`\n        }\n      })\n    }), \"\\n\", _jsx(CollapsibleDetails, {\n      summary: \"üí° Migration example\",\n      children: _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-diff\",\n          children: \"- <Avatar size=\\\"xs\\\" shape=\\\"round\\\" />\\n- <Avatar size=\\\"xs\\\" shape=\\\"square\\\" />\\n+ <Avatar size=\\\"xs\\\" />\\n+ <Avatar size=\\\"xs\\\" />\\n\"\n        })\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"badge\",\n      children: \"Badge\"\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"replace-status-prop-with-tone\",\n      children: [\"Replace \", _jsx(_components.code, {\n        children: \"status\"\n      }), \" prop with \", _jsx(_components.code, {\n        children: \"tone\"\n      })]\n    }), \"\\n\", _jsx(Code, {\n      code: {\n        title: 'polaris-migrator codemod',\n        className: 'language-bash',\n        code: (String.raw)`npx @shopify/polaris-migrator react-update-component-prop --componentName Badge --fromProp status --toProp tone \"**/*.{ts,tsx}\"`\n      }\n    }), \"\\n\", _jsxs(CollapsibleDetails, {\n      summary: \"‚úÖ Post-migration RegExp validation\",\n      children: [_jsxs(_components.p, {\n        children: [\"You will also need to update \", _jsx(_components.code, {\n          children: \"Badge.pip\"\n        }), \" \", _jsx(_components.code, {\n          children: \"status\"\n        }), \" -> \", _jsx(_components.code, {\n          children: \"tone\"\n        })]\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Badge status=\"...\" /> prop`,\n          code: (String.raw)`<Badge[^>\\w](?:[^>]|\\n)*?status`\n        }\n      })]\n    }), \"\\n\", _jsx(CollapsibleDetails, {\n      summary: \"üí° Migration example\",\n      children: _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-diff\",\n          children: \"- <Badge status=\\\"success\\\" />\\n+ <Badge tone=\\\"success\\\" />\\n\"\n        })\n      })\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"replace-statusandprogresslabeloverride-prop-with-toneandprogresslabeloverride\",\n      children: [\"Replace \", _jsx(_components.code, {\n        children: \"statusAndProgressLabelOverride\"\n      }), \" prop with \", _jsx(_components.code, {\n        children: \"toneAndProgressLabelOverride\"\n      })]\n    }), \"\\n\", _jsx(Code, {\n      code: {\n        title: 'polaris-migrator codemod',\n        className: 'language-bash',\n        code: (String.raw)`npx @shopify/polaris-migrator react-update-component-prop --componentName Badge --fromProp statusAndProgressLabelOverride --toProp toneAndProgressLabelOverride \"**/*.{ts,tsx}\"`\n      }\n    }), \"\\n\", _jsx(CollapsibleDetails, {\n      summary: \"‚úÖ Post-migration RegExp validation\",\n      children: _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Badge statusAndProgressLabelOverride=\"...\" /> prop`,\n          code: (String.raw)`<Badge[^>\\w](?:[^>]|\\n)*?statusAndProgressLabelOverride`\n        }\n      })\n    }), \"\\n\", _jsx(CollapsibleDetails, {\n      summary: \"üí° Migration example\",\n      children: _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-diff\",\n          children: \"- <Badge statusAndProgressLabelOverride=\\\"My string\\\" />\\n+ <Badge toneAndProgressLabelOverride=\\\"My string\\\" />\\n\"\n        })\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"banner\",\n      children: \"Banner\"\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"replace-status-prop-with-tone-1\",\n      children: [\"Replace \", _jsx(_components.code, {\n        children: \"status\"\n      }), \" prop with \", _jsx(_components.code, {\n        children: \"tone\"\n      })]\n    }), \"\\n\", _jsx(Code, {\n      code: {\n        title: 'polaris-migrator codemod',\n        className: 'language-bash',\n        code: (String.raw)`npx @shopify/polaris-migrator react-update-component-prop --componentName Banner --fromProp status --toProp tone \"**/*.{ts,tsx}\"`\n      }\n    }), \"\\n\", _jsx(CollapsibleDetails, {\n      summary: \"‚úÖ Post-migration RegExp validation\",\n      children: _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Banner status=\"...\" /> prop`,\n          code: (String.raw)`<Banner[^>\\w](?:[^>]|\\n)*?status`\n        }\n      })\n    }), \"\\n\", _jsx(CollapsibleDetails, {\n      summary: \"üí° Migration example\",\n      children: _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-diff\",\n          children: \"- <Banner status=\\\"success\\\" />\\n+ <Banner tone=\\\"success\\\" />\\n\"\n        })\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"box\",\n      children: \"Box\"\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"replace-borderradiuscornerposition-prop-with-bordercornerpositionradius\",\n      children: [\"Replace \", _jsx(_components.code, {\n        children: \"borderRadius${cornerPosition}\"\n      }), \" prop with \", _jsx(_components.code, {\n        children: \"border${cornerPosition}Radius\"\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"This border radius property rename aligns with \", _jsx(_components.a, {\n        href: \"https://developer.mozilla.org/en-US/docs/Web/CSS/border-radius#constituent_properties\",\n        children: \"CSS border radius constituent properties\"\n      }), \" to be consistent with other Polaris component APIs as well as wider web conventions.\"]\n    }), \"\\n\", _jsx(Code, {\n      code: {\n        title: 'polaris-migrator codemod',\n        className: 'language-bash',\n        code: (String.raw)`npx @shopify/polaris-migrator react-update-component-prop --componentName Box --fromProp borderRadiusEndStart --toProp borderEndStartRadius \"**/*.{ts,tsx}\"`\n      }\n    }), \"\\n\", _jsx(Code, {\n      code: {\n        title: 'polaris-migrator codemod',\n        className: 'language-bash',\n        code: (String.raw)`npx @shopify/polaris-migrator react-update-component-prop --componentName Box --fromProp borderRadiusEndEnd --toProp borderEndEndRadius \"**/*.{ts,tsx}\"`\n      }\n    }), \"\\n\", _jsx(Code, {\n      code: {\n        title: 'polaris-migrator codemod',\n        className: 'language-bash',\n        code: (String.raw)`npx @shopify/polaris-migrator react-update-component-prop --componentName Box --fromProp borderRadiusStartStart --toProp borderStartStartRadius \"**/*.{ts,tsx}\"`\n      }\n    }), \"\\n\", _jsx(Code, {\n      code: {\n        title: 'polaris-migrator codemod',\n        className: 'language-bash',\n        code: (String.raw)`npx @shopify/polaris-migrator react-update-component-prop --componentName Box --fromProp borderRadiusStartEnd --toProp borderStartEndRadius \"**/*.{ts,tsx}\"`\n      }\n    }), \"\\n\", _jsxs(CollapsibleDetails, {\n      summary: \"‚úÖ Post-migration RegExp validation\",\n      children: [_jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Box borderRadiusEndStart=\"...\" /> prop`,\n          code: (String.raw)`<Box[^>\\w](?:[^>]|\\n)*?borderRadiusEndStart`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Box borderRadiusEndEnd=\"...\" /> prop`,\n          code: (String.raw)`<Box[^>\\w](?:[^>]|\\n)*?borderRadiusEndEnd`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Box borderRadiusStartStart=\"...\" /> prop`,\n          code: (String.raw)`<Box[^>\\w](?:[^>]|\\n)*?borderRadiusStartStart`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Box borderRadiusStartEnd=\"...\" /> prop`,\n          code: (String.raw)`<Box[^>\\w](?:[^>]|\\n)*?borderRadiusStartEnd`\n        }\n      })]\n    }), \"\\n\", _jsx(CollapsibleDetails, {\n      summary: \"üí° Migration example\",\n      children: _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-diff\",\n          children: \"- <Box borderRadiusEndStart=\\\"2\\\" borderRadiusEndEnd=\\\"2\\\" borderRadiusStartStart=\\\"2\\\" borderRadiusStartEnd=\\\"2\\\" />\\n+ <Box borderEndStartRadius=\\\"2\\\" borderEndEndRadius=\\\"2\\\" borderStartStartRadius=\\\"2\\\" borderStartEndRadius=\\\"2\\\" />\\n\"\n        })\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"button\",\n      children: \"Button\"\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"consolidate-boolean-props-to-variant-and-tone\",\n      children: [\"Consolidate boolean props to \", _jsx(_components.code, {\n        children: \"variant\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"tone\"\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"Button\"\n      }), \" component has been updated to replace deprecated \", _jsx(_components.code, {\n        children: \"connectedDisclosure\"\n      }), \", \", _jsx(_components.code, {\n        children: \"outline\"\n      }), \", \", _jsx(_components.code, {\n        children: \"destructive\"\n      }), \", \", _jsx(_components.code, {\n        children: \"primary\"\n      }), \", \", _jsx(_components.code, {\n        children: \"primarySuccess\"\n      }), \", \", _jsx(_components.code, {\n        children: \"plain\"\n      }), \", and \", _jsx(_components.code, {\n        children: \"monochrome\"\n      }), \" props with a new \", _jsx(_components.code, {\n        children: \"variant\"\n      }), \" prop that supports multiple variation options.\"]\n    }), \"\\n\", _jsx(Code, {\n      code: {\n        title: 'polaris-migrator codemod',\n        className: 'language-bash',\n        code: (String.raw)`npx @shopify/polaris-migrator v12-react-update-button-component \"**/*.{ts,tsx}\"`\n      }\n    }), \"\\n\", _jsxs(CollapsibleDetails, {\n      summary: \"‚úÖ Post-migration RegExp validation\",\n      children: [_jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Button connectedDisclosure /> prop`,\n          code: (String.raw)`<Button[^>\\w](?:[^>]|\\n)*?connectedDisclosure`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Button destructive /> prop`,\n          code: (String.raw)`<Button[^>\\w](?:[^>]|\\n)*?destructive`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Button outline /> prop`,\n          code: (String.raw)`<Button[^>\\w](?:[^>]|\\n)*?outline`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Button monochrome /> prop`,\n          code: (String.raw)`<Button[^>\\w](?:[^>]|\\n)*?monochrome`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Button plain /> prop`,\n          code: (String.raw)`<Button[^>\\w](?:[^>]|\\n)*?plain`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Button primary /> prop`,\n          code: (String.raw)`<Button[^>\\w](?:[^>]|\\n)*?primary`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Button primarySuccess /> prop`,\n          code: (String.raw)`<Button[^>\\w](?:[^>]|\\n)*?primarySuccess`\n        }\n      })]\n    }), \"\\n\", _jsx(CollapsibleDetails, {\n      summary: \"‚û°Ô∏è Prop consolidation mappings\",\n      children: _jsxs(_components.table, {\n        children: [_jsx(_components.thead, {\n          children: _jsxs(_components.tr, {\n            children: [_jsx(_components.th, {\n              children: \"Old variant\"\n            }), _jsx(_components.th, {\n              children: \"New variant\"\n            })]\n          })\n        }), _jsxs(_components.tbody, {\n          children: [_jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"plain=true\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"variant=\\\"plain\\\"\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"primary=true\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"variant=\\\"primary\\\"\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsxs(_components.td, {\n              children: [_jsx(_components.code, {\n                children: \"primary=true\"\n              }), \" + \", _jsx(_components.code, {\n                children: \"plain=true\"\n              })]\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"variant=\\\"tertiary\\\"\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsxs(_components.td, {\n              children: [_jsx(_components.code, {\n                children: \"primary=true\"\n              }), \" + \", _jsx(_components.code, {\n                children: \"destructive=true\"\n              })]\n            }), _jsxs(_components.td, {\n              children: [_jsx(_components.code, {\n                children: \"variant=\\\"primary\\\"\"\n              }), \" + \", _jsx(_components.code, {\n                children: \"tone=\\\"critical\\\"\"\n              })]\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsxs(_components.td, {\n              children: [_jsx(_components.code, {\n                children: \"monochrome=true\"\n              }), \" + \", _jsx(_components.code, {\n                children: \"plain=true\"\n              })]\n            }), _jsxs(_components.td, {\n              children: [_jsx(_components.code, {\n                children: \"variant=\\\"monochromePlain\\\"\"\n              }), \" * \", _jsx(\"br\", {}), \"This will be deprecated in a future release, please use a different variant if possible\"]\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"destructive=true\"\n              })\n            }), _jsxs(_components.td, {\n              children: [_jsx(_components.code, {\n                children: \"variant=\\\"primary\\\"\"\n              }), \" + \", _jsx(_components.code, {\n                children: \"tone=\\\"critical\\\"\"\n              })]\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"primarySuccess=true\"\n              })\n            }), _jsxs(_components.td, {\n              children: [_jsx(_components.code, {\n                children: \"variant=\\\"primary\\\"\"\n              }), \" + \", _jsx(_components.code, {\n                children: \"tone=\\\"success\\\"\"\n              })]\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsxs(_components.td, {\n              children: [_jsx(_components.code, {\n                children: \"destructive=true\"\n              }), \" + \", _jsx(_components.code, {\n                children: \"outline=true\"\n              })]\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"tone=\\\"critical\\\"\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsxs(_components.td, {\n              children: [_jsx(_components.code, {\n                children: \"destructive=true\"\n              }), \" + \", _jsx(_components.code, {\n                children: \"plain=true\"\n              })]\n            }), _jsxs(_components.td, {\n              children: [_jsx(_components.code, {\n                children: \"variant=\\\"plain\\\"\"\n              }), \" + \", _jsx(_components.code, {\n                children: \"tone=\\\"critical\\\"\"\n              })]\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"monochrome=true\"\n              })\n            }), _jsx(_components.td, {})]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"outline=true\"\n              })\n            }), _jsx(_components.td, {})]\n          })]\n        })]\n      })\n    }), \"\\n\", _jsx(CollapsibleDetails, {\n      summary: \"üí° Migration example\",\n      children: _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-diff\",\n          children: \"- <Button plain />\\n+ <Button variant=\\\"plain\\\" />\\n- <Button primary />\\n+ <Button variant=\\\"primary\\\" />\\n- <Button primary plain />\\n+ <Button variant=\\\"tertiary\\\" />\\n- <Button monochrome plain />\\n+ <Button variant=\\\"monochromePlain\\\" />\\n- <Button destructive />\\n+ <Button variant=\\\"primary\\\" tone=\\\"critical\\\" />\\n- <Button primarySuccess />\\n+ <Button variant=\\\"primary\\\" tone=\\\"success\\\" />\\n- <Button destructive plain />\\n+ <Button variant=\\\"plain\\\" tone=\\\"critical\\\" />\\n- <Button destructive />\\n+ <Button variant=\\\"primary\\\" tone=\\\"critical\\\" />\\n- <Button primarySuccess />\\n+ <Button variant=\\\"primary\\\" tone=\\\"success\\\" />\\n- <Button destructive outline />\\n+ <Button tone=\\\"critical\\\" />\\n- <Button destructive plain />\\n+ <Button variant=\\\"plain\\\" tone=\\\"critical\\\" />\\n- <Button monochrome />\\n+ <Button />\\n- <Button outline />\\n+ <Button />\\n\"\n        })\n      })\n    }), \"\\n\", _jsxs(CollapsibleDetails, {\n      summary: \"üí° How to manually update `connectedDisclosure` example\",\n      children: [_jsxs(_components.p, {\n        children: [\"The \", _jsx(_components.a, {\n          href: \"/components/actions/button\",\n          children: \"updated split example\"\n        }), \" can also be referenced as an example for this manual migration.\"]\n      }), _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-diff\",\n          children: \"- <Button\\n-   connectedDisclosure={{\\n-     icon: ChevronDownMinor,\\n-   }}\\n- >\\n-   Save\\n- </Button>\\n+ <ButtonGroup variant=\\\"segmented\\\">\\n+   <Button>Save</Button>\\n+   <Popover activator={<Button icon={ChevronDownMinor} />}/>\\n+ </ButtonGroup>\\n\"\n        })\n      })]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"buttongroup\",\n      children: \"ButtonGroup\"\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"replace-spacing-prop-with-gap\",\n      children: [\"Replace \", _jsx(_components.code, {\n        children: \"spacing\"\n      }), \" prop with \", _jsx(_components.code, {\n        children: \"gap\"\n      })]\n    }), \"\\n\", _jsx(Code, {\n      code: {\n        title: 'polaris-migrator codemod',\n        className: 'language-bash',\n        code: (String.raw)`npx @shopify/polaris-migrator react-update-component-prop --componentName ButtonGroup --fromProp spacing --toProp gap \"**/*.{ts,tsx}\"`\n      }\n    }), \"\\n\", _jsx(CollapsibleDetails, {\n      summary: \"‚úÖ Post-migration RegExp validation\",\n      children: _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <ButtonGroup spacing=\"...\" /> prop`,\n          code: (String.raw)`<ButtonGroup[^>\\w](?:[^>]|\\n)*?spacing`\n        }\n      })\n    }), \"\\n\", _jsx(CollapsibleDetails, {\n      summary: \"üí° Migration example\",\n      children: _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-diff\",\n          children: \"- <ButtonGroup spacing=\\\"tight\\\" />\\n+ <ButtonGroup gap=\\\"tight\\\" />\\n\"\n        })\n      })\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"replace-segmented-prop-to-variantsegmented\",\n      children: [\"Replace \", _jsx(_components.code, {\n        children: \"segmented\"\n      }), \" prop to \", _jsx(_components.code, {\n        children: \"variant=\\\"segmented\\\"\"\n      })]\n    }), \"\\n\", _jsx(Code, {\n      code: {\n        title: 'polaris-migrator codemod',\n        className: 'language-bash',\n        code: (String.raw)`npx @shopify/polaris-migrator react-update-component-prop --componentName ButtonGroup --fromPropType boolean --fromProp segmented --toProp variant --toValue segmented \"**/*.{ts,tsx}\"`\n      }\n    }), \"\\n\", _jsx(CollapsibleDetails, {\n      summary: \"‚úÖ Post-migration RegExp validation\",\n      children: _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <ButtonGroup segmented /> prop`,\n          code: (String.raw)`<ButtonGroup[^>\\w](?:[^>]|\\n)*?segmented`\n        }\n      })\n    }), \"\\n\", _jsx(CollapsibleDetails, {\n      summary: \"üí° Migration example\",\n      children: _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-diff\",\n          children: \"- <ButtonGroup segmented />\\n+ <ButtonGroup variant=\\\"segmented\\\" />\\n\"\n        })\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"descriptionlist\",\n      children: \"DescriptionList\"\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"replace-spacing-prop-with-gap-1\",\n      children: [\"Replace \", _jsx(_components.code, {\n        children: \"spacing\"\n      }), \" prop with \", _jsx(_components.code, {\n        children: \"gap\"\n      })]\n    }), \"\\n\", _jsx(Code, {\n      code: {\n        title: 'polaris-migrator codemod',\n        className: 'language-bash',\n        code: (String.raw)`npx @shopify/polaris-migrator react-update-component-prop --componentName DescriptionList --fromProp spacing --toProp gap \"**/*.{ts,tsx}\"`\n      }\n    }), \"\\n\", _jsx(CollapsibleDetails, {\n      summary: \"‚úÖ Post-migration RegExp validation\",\n      children: _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <DescriptionList spacing=\"...\" /> prop`,\n          code: (String.raw)`<DescriptionList[^>\\w](?:[^>]|\\n)*?spacing`\n        }\n      })\n    }), \"\\n\", _jsx(CollapsibleDetails, {\n      summary: \"üí° Migration example\",\n      children: _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-diff\",\n          children: \"- <DescriptionList spacing=\\\"loose\\\" />\\n+ <DescriptionList gap=\\\"loose\\\" />\\n\"\n        })\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"horizontalgrid\",\n      children: \"HorizontalGrid\"\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"rename-horizontalgrid-component-to-inlinegrid\",\n      children: [\"Rename \", _jsx(_components.code, {\n        children: \"HorizontalGrid\"\n      }), \" component to \", _jsx(_components.code, {\n        children: \"InlineGrid\"\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Directional components now use \", _jsx(_components.code, {\n        children: \"Inline\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"Block\"\n      }), \" naming conventions which are defined by \", _jsx(_components.a, {\n        href: \"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_logical_properties_and_values\",\n        children: \"CSS logical properties\"\n      }), \". This ensures consistency with other Polaris component APIs as well as wider web conventions.\"]\n    }), \"\\n\", _jsx(Code, {\n      code: {\n        title: 'polaris-migrator codemod',\n        className: 'language-bash',\n        code: (String.raw)`npx @shopify/polaris-migrator react-rename-component --renameFrom HorizontalGrid --renameTo InlineGrid --renamePropsFrom HorizontalGridProps --renamePropsTo InlineGridProps \"**/*.{ts,tsx}\"`\n      }\n    }), \"\\n\", _jsx(CollapsibleDetails, {\n      summary: \"‚úÖ Post-migration RegExp validation\",\n      children: _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <HorizontalGrid /> component`,\n          code: (String.raw)`HorizontalGrid`\n        }\n      })\n    }), \"\\n\", _jsx(CollapsibleDetails, {\n      summary: \"üí° Migration example\",\n      children: _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-diff\",\n          children: \"- <HorizontalGrid />\\n+ <InlineGrid />\\n\"\n        })\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"horizontalstack\",\n      children: \"HorizontalStack\"\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"rename-horizontalstack-component-to-inlinestack\",\n      children: [\"Rename \", _jsx(_components.code, {\n        children: \"HorizontalStack\"\n      }), \" component to \", _jsx(_components.code, {\n        children: \"InlineStack\"\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Directional components now use \", _jsx(_components.code, {\n        children: \"Inline\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"Block\"\n      }), \" naming conventions which are defined by \", _jsx(_components.a, {\n        href: \"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_logical_properties_and_values\",\n        children: \"CSS logical properties\"\n      }), \". This ensures consistency with other Polaris component APIs as well as wider web conventions.\"]\n    }), \"\\n\", _jsx(Code, {\n      code: {\n        title: 'polaris-migrator codemod',\n        className: 'language-bash',\n        code: (String.raw)`npx @shopify/polaris-migrator react-rename-component --renameFrom HorizontalStack --renameTo InlineStack --renamePropsFrom HorizontalStackProps --renamePropsTo InlineStackProps \"**/*.{ts,tsx}\"`\n      }\n    }), \"\\n\", _jsx(CollapsibleDetails, {\n      summary: \"‚úÖ Post-migration RegExp validation\",\n      children: _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <HorizontalStack /> component`,\n          code: (String.raw)`HorizontalStack`\n        }\n      })\n    }), \"\\n\", _jsx(CollapsibleDetails, {\n      summary: \"üí° Migration example\",\n      children: _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-diff\",\n          children: \"- <HorizontalStack />\\n+ <InlineStack />\\n\"\n        })\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"icon\",\n      children: \"Icon\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"üîî Stepped migration\"\n      }), \": You must run the \", _jsx(_components.code, {\n        children: \"color\"\n      }), \" -> \", _jsx(_components.code, {\n        children: \"tone\"\n      }), \" migration after running the tone rename migrations.\"]\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"step-1-replace-colorwarning-with-tonecaution\",\n      children: [\"Step 1: Replace \", _jsx(_components.code, {\n        children: \"color=\\\"warning\\\"\"\n      }), \" with \", _jsx(_components.code, {\n        children: \"tone=\\\"caution\\\"\"\n      })]\n    }), \"\\n\", _jsx(Code, {\n      code: {\n        title: 'polaris-migrator codemod',\n        className: 'language-bash',\n        code: (String.raw)`npx @shopify/polaris-migrator react-update-component-prop --componentName Icon --fromProp color --toProp tone --fromValue warning --toValue caution \"**/*.{ts,tsx}\"`\n      }\n    }), \"\\n\", _jsxs(CollapsibleDetails, {\n      summary: \"‚úÖ Post-migration RegExp validation\",\n      children: [_jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Icon color=\"warning\" /> prop`,\n          code: (String.raw)`<Icon[^>\\w](?:[^>]|\\n)*?color=\"warning\"`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Icon color=\"warning\" /> prop`,\n          code: (String.raw)`<Icon[^>\\w](?:[^>]|\\n)*?tone=\"warning\"`\n        }\n      })]\n    }), \"\\n\", _jsx(CollapsibleDetails, {\n      summary: \"üí° Migration example\",\n      children: _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-diff\",\n          children: \"- <Icon color=\\\"warning\\\" />\\n- <Icon tone=\\\"warning\\\" />\\n+ <Icon tone=\\\"caution\\\" />\\n\"\n        })\n      })\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"step-2-replace-colorhighlight-with-toneinfo\",\n      children: [\"Step 2: Replace \", _jsx(_components.code, {\n        children: \"color=\\\"highlight\\\"\"\n      }), \" with \", _jsx(_components.code, {\n        children: \"tone=\\\"info\\\"\"\n      })]\n    }), \"\\n\", _jsx(Code, {\n      code: {\n        title: 'polaris-migrator codemod',\n        className: 'language-bash',\n        code: (String.raw)`npx @shopify/polaris-migrator react-update-component-prop --componentName Icon --fromProp color --toProp tone --fromValue highlight --toValue info \"**/*.{ts,tsx}\"`\n      }\n    }), \"\\n\", _jsxs(CollapsibleDetails, {\n      summary: \"‚úÖ Post-migration RegExp validation\",\n      children: [_jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Icon color=\"highlight\" /> prop`,\n          code: (String.raw)`<Icon[^>\\w](?:[^>]|\\n)*?color=\"highlight\"`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Icon color=\"highlight\" /> prop`,\n          code: (String.raw)`<Icon[^>\\w](?:[^>]|\\n)*?tone=\"highlight\"`\n        }\n      })]\n    }), \"\\n\", _jsx(CollapsibleDetails, {\n      summary: \"üí° Migration example\",\n      children: _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-diff\",\n          children: \"- <Icon color=\\\"highlight\\\" />\\n- <Icon tone=\\\"highlight\\\" />\\n+ <Icon tone=\\\"info\\\" />\\n\"\n        })\n      })\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"step-3-replace-color-prop-with-tone\",\n      children: [\"Step 3: Replace \", _jsx(_components.code, {\n        children: \"color\"\n      }), \" prop with \", _jsx(_components.code, {\n        children: \"tone\"\n      })]\n    }), \"\\n\", _jsx(Code, {\n      code: {\n        title: 'polaris-migrator codemod',\n        className: 'language-bash',\n        code: (String.raw)`npx @shopify/polaris-migrator react-update-component-prop --componentName Icon --fromProp color --toProp tone \"**/*.{ts,tsx}\"`\n      }\n    }), \"\\n\", _jsx(CollapsibleDetails, {\n      summary: \"‚úÖ Post-migration RegExp validation\",\n      children: _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Icon color=\"...\" /> prop`,\n          code: (String.raw)`<Icon[^>\\w](?:[^>]|\\n)*?color`\n        }\n      })\n    }), \"\\n\", _jsx(CollapsibleDetails, {\n      summary: \"üí° Migration example\",\n      children: _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-diff\",\n          children: \"- <Icon color=\\\"success\\\" />\\n+ <Icon tone=\\\"success\\\" />\\n\"\n        })\n      })\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"remove-backdrop-prop\",\n      children: [\"Remove \", _jsx(_components.code, {\n        children: \"backdrop\"\n      }), \" prop\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Backdrop is not a pattern in the new Polaris design language. If you must use a backdrop on your icon, use Box.\"\n    }), \"\\n\", _jsx(CollapsibleDetails, {\n      summary: \"‚úÖ Post-migration RegExp validation\",\n      children: _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Icon backdrop /> prop`,\n          code: (String.raw)`<Icon[^>\\w](?:[^>]|\\n)*?backdrop`\n        }\n      })\n    }), \"\\n\", _jsx(CollapsibleDetails, {\n      summary: \"üí° Migration example\",\n      children: _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-diff\",\n          children: \"- <Icon source={CirclePlusMinor} color={iconColor} backdrop />\\n+ <Box background={boxBackground} padding=\\\"100\\\" width=\\\"28px\\\" borderRadius=\\\"full\\\">\\n+  <Icon source={CirclePlusMinor} color={iconColor} />\\n+ </Box>\\n\"\n        })\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"indextablerow\",\n      children: \"IndexTable.Row\"\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"replace-status-prop-with-tone-2\",\n      children: [\"Replace \", _jsx(_components.code, {\n        children: \"status\"\n      }), \" prop with \", _jsx(_components.code, {\n        children: \"tone\"\n      })]\n    }), \"\\n\", _jsx(Code, {\n      code: {\n        title: 'polaris-migrator codemod',\n        className: 'language-bash',\n        code: (String.raw)`npx @shopify/polaris-migrator react-update-component-prop --componentName IndexTable.Row --fromProp status --toProp tone \"**/*.{ts,tsx}\"`\n      }\n    }), \"\\n\", _jsx(CollapsibleDetails, {\n      summary: \"‚úÖ Post-migration RegExp validation\",\n      children: _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <IndexTable.Row status=\"...\" /> prop`,\n          code: (String.raw)`<IndexTable\\.Row[^>\\w](?:[^>]|\\n)*?status`\n        }\n      })\n    }), \"\\n\", _jsx(CollapsibleDetails, {\n      summary: \"üí° Migration example\",\n      children: _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-diff\",\n          children: \"- <IndexTable.Row status=\\\"success\\\" />\\n+ <IndexTable.Row tone=\\\"success\\\" />\\n\"\n        })\n      })\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"replace-subdued-prop-with-tone\",\n      children: [\"Replace \", _jsx(_components.code, {\n        children: \"subdued\"\n      }), \" prop with \", _jsx(_components.code, {\n        children: \"tone\"\n      })]\n    }), \"\\n\", _jsx(Code, {\n      code: {\n        title: 'polaris-migrator codemod',\n        className: 'language-bash',\n        code: (String.raw)`npx @shopify/polaris-migrator react-update-component-prop --componentName IndexTable.Row --fromPropType boolean --fromProp subdued --toProp tone --toValue subdued \"**/*.{ts,tsx}\"`\n      }\n    }), \"\\n\", _jsx(CollapsibleDetails, {\n      summary: \"‚úÖ Post-migration RegExp validation\",\n      children: _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <IndexTable.Row subdued=\"...\" /> prop`,\n          code: (String.raw)`<IndexTable\\.Row[^>\\w](?:[^>]|\\n)*?subdued`\n        }\n      })\n    }), \"\\n\", _jsx(CollapsibleDetails, {\n      summary: \"üí° Migration example\",\n      children: _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-diff\",\n          children: \"- <IndexTable.Row subdued />\\n+ <IndexTable.Row tone=\\\"subdued\\\" />\\n\"\n        })\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"layoutsection\",\n      children: \"Layout.Section\"\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"replace-onethird-prop-with-variantonethird\",\n      children: [\"Replace \", _jsx(_components.code, {\n        children: \"oneThird\"\n      }), \" prop with \", _jsx(_components.code, {\n        children: \"variant=\\\"oneThird\\\"\"\n      })]\n    }), \"\\n\", _jsx(Code, {\n      code: {\n        title: 'polaris-migrator codemod',\n        className: 'language-bash',\n        code: (String.raw)`npx @shopify/polaris-migrator react-update-component-prop --componentName Layout.Section --fromPropType boolean --fromProp oneThird --toProp variant --toValue oneThird \"**/*.{ts,tsx}\"`\n      }\n    }), \"\\n\", _jsx(CollapsibleDetails, {\n      summary: \"‚úÖ Post-migration RegExp validation\",\n      children: _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Layout.Section oneThird /> prop`,\n          code: (String.raw)`<Layout\\.Section[^>\\w](?:[^>]|\\n)*?oneThird`\n        }\n      })\n    }), \"\\n\", _jsx(CollapsibleDetails, {\n      summary: \"üí° Migration example\",\n      children: _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-diff\",\n          children: \"- <Layout.Section oneThird>\\n+ <Layout.Section variant=\\\"oneThird\\\">\\n\"\n        })\n      })\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"replace-onehalf-prop-with-variantonehalf\",\n      children: [\"Replace \", _jsx(_components.code, {\n        children: \"oneHalf\"\n      }), \" prop with \", _jsx(_components.code, {\n        children: \"variant=\\\"oneHalf\\\"\"\n      })]\n    }), \"\\n\", _jsx(Code, {\n      code: {\n        title: 'polaris-migrator codemod',\n        className: 'language-bash',\n        code: (String.raw)`npx @shopify/polaris-migrator react-update-component-prop --componentName Layout.Section --fromPropType boolean --fromProp oneHalf --toProp variant --toValue oneHalf \"**/*.{ts,tsx}\"`\n      }\n    }), \"\\n\", _jsx(CollapsibleDetails, {\n      summary: \"‚úÖ Post-migration RegExp validation\",\n      children: _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Layout.Section oneHalf /> prop`,\n          code: (String.raw)`<Layout\\.Section[^>\\w](?:[^>]|\\n)*?oneHalf`\n        }\n      })\n    }), \"\\n\", _jsx(CollapsibleDetails, {\n      summary: \"üí° Migration example\",\n      children: _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-diff\",\n          children: \"- <Layout.Section oneHalf>\\n+ <Layout.Section variant=\\\"oneHalf\\\">\\n\"\n        })\n      })\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"replace-fullwidth-prop-with-variantfullwidth\",\n      children: [\"Replace \", _jsx(_components.code, {\n        children: \"fullWidth\"\n      }), \" prop with \", _jsx(_components.code, {\n        children: \"variant=\\\"fullWidth\\\"\"\n      })]\n    }), \"\\n\", _jsx(Code, {\n      code: {\n        title: 'polaris-migrator codemod',\n        className: 'language-bash',\n        code: (String.raw)`npx @shopify/polaris-migrator react-update-component-prop --componentName Layout.Section --fromPropType boolean --fromProp fullWidth --toProp variant --toValue fullWidth \"**/*.{ts,tsx}\"`\n      }\n    }), \"\\n\", _jsx(CollapsibleDetails, {\n      summary: \"‚úÖ Post-migration RegExp validation\",\n      children: _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Layout.Section fullWidth /> prop`,\n          code: (String.raw)`<Layout\\.Section[^>\\w](?:[^>]|\\n)*?fullWidth`\n        }\n      })\n    }), \"\\n\", _jsx(CollapsibleDetails, {\n      summary: \"üí° Migration example\",\n      children: _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-diff\",\n          children: \"- <Layout.Section fullWidth>\\n+ <Layout.Section variant=\\\"fullWidth\\\">\\n\"\n        })\n      })\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"replace-secondary-prop-with-variantonethird\",\n      children: [\"Replace \", _jsx(_components.code, {\n        children: \"secondary\"\n      }), \" prop with \", _jsx(_components.code, {\n        children: \"variant=\\\"oneThird\\\"\"\n      })]\n    }), \"\\n\", _jsx(Code, {\n      code: {\n        title: 'polaris-migrator codemod',\n        className: 'language-bash',\n        code: (String.raw)`npx @shopify/polaris-migrator react-update-component-prop --componentName Layout.Section --fromPropType boolean --fromProp secondary --toProp variant --toValue oneThird \"**/*.{ts,tsx}\"`\n      }\n    }), \"\\n\", _jsx(CollapsibleDetails, {\n      summary: \"‚úÖ Post-migration RegExp validation\",\n      children: _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Layout.Section secondary /> prop`,\n          code: (String.raw)`<Layout\\.Section[^>\\w](?:[^>]|\\n)*?secondary`\n        }\n      })\n    }), \"\\n\", _jsx(CollapsibleDetails, {\n      summary: \"üí° Migration example\",\n      children: _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-diff\",\n          children: \"- <Layout.Section secondary>\\n+ <Layout.Section variant=\\\"oneThird\\\">\\n\"\n        })\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"list\",\n      children: \"List\"\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"replace-spacing-prop-with-gap-2\",\n      children: [\"Replace \", _jsx(_components.code, {\n        children: \"spacing\"\n      }), \" prop with \", _jsx(_components.code, {\n        children: \"gap\"\n      })]\n    }), \"\\n\", _jsx(Code, {\n      code: {\n        title: 'polaris-migrator codemod',\n        className: 'language-bash',\n        code: (String.raw)`npx @shopify/polaris-migrator react-update-component-prop --componentName List --fromProp spacing --toProp gap \"**/*.{ts,tsx}\"`\n      }\n    }), \"\\n\", _jsx(CollapsibleDetails, {\n      summary: \"‚úÖ Post-migration RegExp validation\",\n      children: _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <List spacing=\"...\" /> prop`,\n          code: (String.raw)`<List[^>\\w](?:[^>]|\\n)*?spacing`\n        }\n      })\n    }), \"\\n\", _jsx(CollapsibleDetails, {\n      summary: \"üí° Migration example\",\n      children: _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-diff\",\n          children: \"- <List spacing=\\\"loose\\\" />\\n+ <List gap=\\\"loose\\\" />\\n\"\n        })\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"modal\",\n      children: \"Modal\"\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"replace-small-prop-with-sizesmall\",\n      children: [\"Replace \", _jsx(_components.code, {\n        children: \"small\"\n      }), \" prop with \", _jsx(_components.code, {\n        children: \"size=\\\"small\\\"\"\n      })]\n    }), \"\\n\", _jsx(Code, {\n      code: {\n        title: 'polaris-migrator codemod',\n        className: 'language-bash',\n        code: (String.raw)`npx @shopify/polaris-migrator react-update-component-prop --componentName Modal --fromPropType boolean --fromProp small --toProp size --toValue small \"**/*.{ts,tsx}\"`\n      }\n    }), \"\\n\", _jsx(CollapsibleDetails, {\n      summary: \"‚úÖ Post-migration RegExp validation\",\n      children: _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Modal small /> prop`,\n          code: (String.raw)`<Modal[^>\\w](?:[^>]|\\n)*?small`\n        }\n      })\n    }), \"\\n\", _jsx(CollapsibleDetails, {\n      summary: \"üí° Migration example\",\n      children: _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-diff\",\n          children: \"- <Modal small />\\n+ <Modal size=\\\"small\\\" />\\n\"\n        })\n      })\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"replace-large-prop-with-sizelarge\",\n      children: [\"Replace \", _jsx(_components.code, {\n        children: \"large\"\n      }), \" prop with \", _jsx(_components.code, {\n        children: \"size=\\\"large\\\"\"\n      })]\n    }), \"\\n\", _jsx(Code, {\n      code: {\n        title: 'polaris-migrator codemod',\n        className: 'language-bash',\n        code: (String.raw)`npx @shopify/polaris-migrator react-update-component-prop --componentName Modal --fromPropType boolean --fromProp large --toProp size --toValue large \"**/*.{ts,tsx}\"`\n      }\n    }), \"\\n\", _jsx(CollapsibleDetails, {\n      summary: \"‚úÖ Post-migration RegExp validation\",\n      children: _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Modal large /> prop`,\n          code: (String.raw)`<Modal[^>\\w](?:[^>]|\\n)*?large`\n        }\n      })\n    }), \"\\n\", _jsx(CollapsibleDetails, {\n      summary: \"üí° Migration example\",\n      children: _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-diff\",\n          children: \"- <Modal large />\\n+ <Modal size=\\\"large\\\" />\\n\"\n        })\n      })\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"replace-fullscreen-prop-with-sizefullscreen\",\n      children: [\"Replace \", _jsx(_components.code, {\n        children: \"fullScreen\"\n      }), \" prop with \", _jsx(_components.code, {\n        children: \"size=\\\"fullScreen\\\"\"\n      })]\n    }), \"\\n\", _jsx(Code, {\n      code: {\n        title: 'polaris-migrator codemod',\n        className: 'language-bash',\n        code: (String.raw)`npx @shopify/polaris-migrator react-update-component-prop --componentName Modal --fromPropType boolean --fromProp fullScreen --toProp size --toValue fullScreen \"**/*.{ts,tsx}\"`\n      }\n    }), \"\\n\", _jsx(CollapsibleDetails, {\n      summary: \"‚úÖ Post-migration RegExp validation\",\n      children: _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Modal fullScreen /> prop`,\n          code: (String.raw)`<Modal[^>\\w](?:[^>]|\\n)*?fullScreen`\n        }\n      })\n    }), \"\\n\", _jsx(CollapsibleDetails, {\n      summary: \"üí° Migration example\",\n      children: _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-diff\",\n          children: \"- <Modal fullScreen />\\n+ <Modal size=\\\"fullScreen\\\" />\\n\"\n        })\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"page\",\n      children: \"Page\"\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"remove-divider-prop\",\n      children: [\"Remove \", _jsx(_components.code, {\n        children: \"divider\"\n      }), \" prop\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Page dividers are no longer a pattern in the new Polaris design language. If you must use a divider, use the \", _jsx(_components.a, {\n        href: \"/components/layout-and-structure/divider\",\n        children: _jsx(_components.code, {\n          children: \"Divider\"\n        })\n      }), \" component to add them back in where needed.\"]\n    }), \"\\n\", _jsx(CollapsibleDetails, {\n      summary: \"‚úÖ Post-migration RegExp validation\",\n      children: _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Page divider /> prop`,\n          code: (String.raw)`<Page[^>\\w](?:[^>]|\\n)*?divider`\n        }\n      })\n    }), \"\\n\", _jsx(CollapsibleDetails, {\n      summary: \"üí° Migration example\",\n      children: _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-diff\",\n          children: \"- <Page divider />\\n+ <Page />\\n\"\n        })\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"progressbar\",\n      children: \"ProgressBar\"\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"replace-color-prop-with-tone\",\n      children: [\"Replace \", _jsx(_components.code, {\n        children: \"color\"\n      }), \" prop with \", _jsx(_components.code, {\n        children: \"tone\"\n      })]\n    }), \"\\n\", _jsx(Code, {\n      code: {\n        title: 'polaris-migrator codemod',\n        className: 'language-bash',\n        code: (String.raw)`npx @shopify/polaris-migrator react-update-component-prop --componentName ProgressBar --fromProp color --toProp tone \"**/*.{ts,tsx}\"`\n      }\n    }), \"\\n\", _jsx(CollapsibleDetails, {\n      summary: \"‚úÖ Post-migration RegExp validation\",\n      children: _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <ProgressBar color=\"...\" /> prop`,\n          code: (String.raw)`<ProgressBar[^>\\w](?:[^>]|\\n)*?color`\n        }\n      })\n    }), \"\\n\", _jsx(CollapsibleDetails, {\n      summary: \"üí° Migration example\",\n      children: _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-diff\",\n          children: \"- <ProgressBar color=\\\"success\\\" />\\n+ <ProgressBar tone=\\\"success\\\" />\\n\"\n        })\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"text\",\n      children: \"Text\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"üîî Stepped migration\"\n      }), \": You must run the \", _jsx(_components.code, {\n        children: \"color\"\n      }), \" -> \", _jsx(_components.code, {\n        children: \"tone\"\n      }), \" migration after running the tone rename migrations.\"]\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"step-1-replace-colorwarning-with-tonecaution-1\",\n      children: [\"Step 1: Replace \", _jsx(_components.code, {\n        children: \"color=\\\"warning\\\"\"\n      }), \" with \", _jsx(_components.code, {\n        children: \"tone=\\\"caution\\\"\"\n      })]\n    }), \"\\n\", _jsx(Code, {\n      code: {\n        title: 'polaris-migrator codemod',\n        className: 'language-bash',\n        code: (String.raw)`npx @shopify/polaris-migrator react-update-component-prop --componentName Text --fromProp color --toProp tone --fromValue warning --toValue caution \"**/*.{ts,tsx}\"`\n      }\n    }), \"\\n\", _jsxs(CollapsibleDetails, {\n      summary: \"‚úÖ Post-migration RegExp validation\",\n      children: [_jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Text color=\"warning\" /> prop`,\n          code: (String.raw)`<Text[^>\\w](?:[^>]|\\n)*?color=\"warning\"`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Text color=\"warning\" /> prop`,\n          code: (String.raw)`<Text[^>\\w](?:[^>]|\\n)*?tone=\"warning\"`\n        }\n      })]\n    }), \"\\n\", _jsx(CollapsibleDetails, {\n      summary: \"üí° Migration example\",\n      children: _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-diff\",\n          children: \"- <Text color=\\\"warning\\\" />\\n- <Text tone=\\\"warning\\\" />\\n+ <Text tone=\\\"caution\\\" />\\n\"\n        })\n      })\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"step-2-replace-color-prop-with-tone\",\n      children: [\"Step 2: Replace \", _jsx(_components.code, {\n        children: \"color\"\n      }), \" prop with \", _jsx(_components.code, {\n        children: \"tone\"\n      })]\n    }), \"\\n\", _jsx(Code, {\n      code: {\n        title: 'polaris-migrator codemod',\n        className: 'language-bash',\n        code: (String.raw)`npx @shopify/polaris-migrator react-update-component-prop --componentName Text --fromProp color --toProp tone \"**/*.{ts,tsx}\"`\n      }\n    }), \"\\n\", _jsx(CollapsibleDetails, {\n      summary: \"‚úÖ Post-migration RegExp validation\",\n      children: _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Text color=\"...\" /> prop`,\n          code: (String.raw)`<Text[^>\\w](?:[^>]|\\n)*?color`\n        }\n      })\n    }), \"\\n\", _jsx(CollapsibleDetails, {\n      summary: \"üí° Migration example\",\n      children: _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-diff\",\n          children: \"- <Text color=\\\"success\\\" />\\n+ <Text tone=\\\"success\\\" />\\n\"\n        })\n      })\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"replace-variantheadingxs-prop-with-variantheadingsm\",\n      children: [\"Replace \", _jsx(_components.code, {\n        children: \"variant=\\\"headingXs\\\"\"\n      }), \" prop with \", _jsx(_components.code, {\n        children: \"variant=\\\"headingSm\\\"\"\n      })]\n    }), \"\\n\", _jsx(Code, {\n      code: {\n        title: 'polaris-migrator codemod',\n        className: 'language-bash',\n        code: (String.raw)`npx @shopify/polaris-migrator react-update-component-prop --componentName Text --fromProp variant --fromValue headingXs --toValue headingSm \"**/*.{ts,tsx}\"`\n      }\n    }), \"\\n\", _jsx(CollapsibleDetails, {\n      summary: \"‚úÖ Post-migration RegExp validation\",\n      children: _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Text variant=\"headingXs\" /> prop`,\n          code: (String.raw)`<Text[^>\\w](?:[^>]|\\n)*?variant=\"headingXs\"`\n        }\n      })\n    }), \"\\n\", _jsx(CollapsibleDetails, {\n      summary: \"üí° Migration example\",\n      children: _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-diff\",\n          children: \"- <Text variant=\\\"headingXs\\\">\\n+ <Text variant=\\\"headingSm\\\">\\n\"\n        })\n      })\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"replace-variantheading4xl-with-variantheading3xl\",\n      children: [\"Replace \", _jsx(_components.code, {\n        children: \"variant=\\\"heading4xl\\\"\"\n      }), \" with \", _jsx(_components.code, {\n        children: \"variant=\\\"heading3xl\\\"\"\n      })]\n    }), \"\\n\", _jsx(Code, {\n      code: {\n        title: 'polaris-migrator codemod',\n        className: 'language-bash',\n        code: (String.raw)`npx @shopify/polaris-migrator react-update-component-prop --componentName Text --fromProp variant --fromValue heading4xl --toValue heading3xl \"**/*.{ts,tsx}\"`\n      }\n    }), \"\\n\", _jsx(CollapsibleDetails, {\n      summary: \"‚úÖ Post-migration RegExp validation\",\n      children: _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Text variant=\"heading4xl\" /> prop`,\n          code: (String.raw)`<Text[^>\\w](?:[^>]|\\n)*?variant=\"heading4xl\"`\n        }\n      })\n    }), \"\\n\", _jsx(CollapsibleDetails, {\n      summary: \"üí° Migration example\",\n      children: _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-diff\",\n          children: \"- <Text variant=\\\"heading4xl\\\">\\n+ <Text variant=\\\"heading3xl\\\">\\n\"\n        })\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"textfield\",\n      children: \"TextField\"\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"replace-borderless-prop-with-variantborderless\",\n      children: [\"Replace \", _jsx(_components.code, {\n        children: \"borderless\"\n      }), \" prop with \", _jsx(_components.code, {\n        children: \"variant=\\\"borderless\\\"\"\n      })]\n    }), \"\\n\", _jsx(Code, {\n      code: {\n        title: 'polaris-migrator codemod',\n        className: 'language-bash',\n        code: (String.raw)`npx @shopify/polaris-migrator react-update-component-prop --componentName TextField --fromPropType boolean --fromProp borderless --toProp variant --toValue borderless \"**/*.{ts,tsx}\"`\n      }\n    }), \"\\n\", _jsx(CollapsibleDetails, {\n      summary: \"‚úÖ Post-migration RegExp validation\",\n      children: _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <TextField borderless /> prop`,\n          code: (String.raw)`<TextField[^>\\w](?:[^>]|\\n)*?borderless`\n        }\n      })\n    }), \"\\n\", _jsx(CollapsibleDetails, {\n      summary: \"üí° Migration example\",\n      children: _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-diff\",\n          children: \"- <TextField borderless />\\n+ <TextField variant=\\\"borderless\\\" />\\n\"\n        })\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"verticalstack\",\n      children: \"VerticalStack\"\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"rename-verticalstack-component-to-blockstack\",\n      children: [\"Rename \", _jsx(_components.code, {\n        children: \"VerticalStack\"\n      }), \" component to \", _jsx(_components.code, {\n        children: \"BlockStack\"\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Directional components now use \", _jsx(_components.code, {\n        children: \"Inline\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"Block\"\n      }), \" naming conventions which are defined by \", _jsx(_components.a, {\n        href: \"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_logical_properties_and_values\",\n        children: \"CSS logical properties\"\n      }), \". This ensures consistency with other Polaris component APIs as well as wider web conventions.\"]\n    }), \"\\n\", _jsx(Code, {\n      code: {\n        title: 'polaris-migrator codemod',\n        className: 'language-bash',\n        code: (String.raw)`npx @shopify/polaris-migrator react-rename-component --renameFrom VerticalStack --renameTo BlockStack --renamePropsFrom VerticalStackProps --renamePropsTo BlockStackProps \"**/*.{ts,tsx}\"`\n      }\n    }), \"\\n\", _jsx(CollapsibleDetails, {\n      summary: \"‚úÖ Post-migration RegExp validation\",\n      children: _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <VerticalStack /> component`,\n          code: (String.raw)`VerticalStack`\n        }\n      })\n    }), \"\\n\", _jsx(CollapsibleDetails, {\n      summary: \"üí° Migration example\",\n      children: _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-diff\",\n          children: \"- <VerticalStack />\\n+ <BlockStack />\\n\"\n        })\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"token-migrations\",\n      children: \"Token migrations\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The following tokens have either been renamed or removed. You will need to replace any instances of them with their new name or value equivalents. Please review each token section for migrations that can be run to resolve these breaking changes.\"\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"border\",\n      children: \"Border\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"To replace deprecated \", _jsx(_components.code, {\n        children: \"border\"\n      }), \" custom properties, you can run the \", _jsx(_components.a, {\n        href: \"/tools/polaris-migrator#v12-styles-replace-custom-property-border\",\n        children: \"v12-styles-replace-custom-property-border\"\n      }), \" migration then validate with RegExp. Please reference the \", _jsx(_components.a, {\n        href: \"#migration-workflow\",\n        children: \"recommended migration workflow\"\n      }), \" section below for additional migration support.\"]\n    }), \"\\n\", _jsxs(CollapsibleDetails, {\n      summary: \"üí° Migration example\",\n      children: [_jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-diff\",\n          children: \"- border-radius: var(--p-border-radius-1);\\n+ border-radius: var(--p-border-radius-100);\\n\"\n        })\n      }), _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-diff\",\n          children: \"- border-width: var(--p-border-width-1);\\n+ border-width: var(--p-border-width-025);\\n\"\n        })\n      })]\n    }), \"\\n\", _jsx(Code, {\n      code: {\n        title: 'polaris-migrator codemod',\n        className: 'language-bash',\n        code: (String.raw)`npx @shopify/polaris-migrator v12-styles-replace-custom-property-border \"**/*.{css,scss}\"`\n      }\n    }), \"\\n\", _jsxs(CollapsibleDetails, {\n      summary: \"‚úÖ Post-migration RegExp validation\",\n      children: [_jsx(\"p\", {\n        children: _jsxs(_components.p, {\n          children: [\"After migrating, use the following RegExp to check for any additional\\ninstances of \", _jsx(_components.code, {\n            children: \"border\"\n          }), \" custom properties across all file types:\"]\n        })\n      }), _jsx(Code, {\n        code: {\n          title: 'Check RegExp for hardcoded border custom properties across all file types',\n          code: (String.raw)`(?:--p-border-radius-0-experimental|--p-border-radius-05|--p-border-radius-1|--p-border-radius-1_5-experimental|--p-border-radius-2|--p-border-radius-3|--p-border-radius-4|--p-border-radius-5|--p-border-radius-6|--p-border-width-1|--p-border-width-1-experimental|--p-border-width-2|--p-border-width-2-experimental|--p-border-width-3|--p-border-width-4|--p-border-width-5)(?![\\w-])`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Tooltip borderRadius=\"...\" /> prop`,\n          code: (String.raw)`<Tooltip[^>\\w](?:[^>]|\\n)*?borderRadius`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Box borderRadius=\"...\" /> prop`,\n          code: (String.raw)`<Box[^>\\w](?:[^>]|\\n)*?borderRadius`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Box borderEndStartRadius=\"...\" /> prop`,\n          code: (String.raw)`<Box[^>\\w](?:[^>]|\\n)*?borderEndStartRadius`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Box borderEndEndRadius=\"...\" /> prop`,\n          code: (String.raw)`<Box[^>\\w](?:[^>]|\\n)*?borderEndEndRadius`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Box borderStartStartRadius=\"...\" /> prop`,\n          code: (String.raw)`<Box[^>\\w](?:[^>]|\\n)*?borderStartStartRadius`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Box borderStartEndRadius=\"...\" /> prop`,\n          code: (String.raw)`<Box[^>\\w](?:[^>]|\\n)*?borderStartEndRadius`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Box borderWidth=\"...\" /> prop`,\n          code: (String.raw)`<Box[^>\\w](?:[^>]|\\n)*?borderWidth`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Box borderBlockStartWidth=\"...\" /> prop`,\n          code: (String.raw)`<Box[^>\\w](?:[^>]|\\n)*?borderBlockStartWidth`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Box borderBlockEndWidth=\"...\" /> prop`,\n          code: (String.raw)`<Box[^>\\w](?:[^>]|\\n)*?borderBlockEndWidth`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Box borderInlineStartWidth=\"...\" /> prop`,\n          code: (String.raw)`<Box[^>\\w](?:[^>]|\\n)*?borderInlineStartWidth`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Box borderInlineEndWidth=\"...\" /> prop`,\n          code: (String.raw)`<Box[^>\\w](?:[^>]|\\n)*?borderInlineEndWidth`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Box outlineWidth=\"...\" /> prop`,\n          code: (String.raw)`<Box[^>\\w](?:[^>]|\\n)*?outlineWidth`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <ShadowBevel borderRadius=\"...\" /> prop`,\n          code: (String.raw)`<ShadowBevel[^>\\w](?:[^>]|\\n)*?borderRadius`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Divider borderWidth=\"...\" /> prop`,\n          code: (String.raw)`<Divider[^>\\w](?:[^>]|\\n)*?borderWidth`\n        }\n      })]\n    }), \"\\n\", _jsx(CollapsibleDetails, {\n      summary: \"‚û°Ô∏è Token replacement mappings\",\n      children: _jsxs(_components.table, {\n        children: [_jsx(_components.thead, {\n          children: _jsxs(_components.tr, {\n            children: [_jsx(_components.th, {\n              children: \"Deprecated Token\"\n            }), _jsx(_components.th, {\n              children: \"Replacement Value\"\n            })]\n          })\n        }), _jsxs(_components.tbody, {\n          children: [_jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-border-radius-0-experimental\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-border-radius-0\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-border-radius-05\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-border-radius-050\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-border-radius-1\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-border-radius-100\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-border-radius-1_5-experimental\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-border-radius-150\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-border-radius-2\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-border-radius-200\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-border-radius-3\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-border-radius-300\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-border-radius-4\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-border-radius-400\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-border-radius-5\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-border-radius-500\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-border-radius-6\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-border-radius-750\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-border-width-1\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-border-width-025\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-border-width-1-experimental\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-border-width-0165\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-border-width-2\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-border-width-050\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-border-width-2-experimental\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-border-width-025\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-border-width-3\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-border-width-050\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-border-width-4\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-border-width-100\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-border-width-5\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-border-width-100\"\n              })\n            })]\n          })]\n        })]\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"color\",\n      children: \"Color\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"To replace deprecated \", _jsx(_components.code, {\n        children: \"color\"\n      }), \" custom properties, you can run the \", _jsx(_components.a, {\n        href: \"/tools/polaris-migrator#v12-styles-replace-custom-property-color\",\n        children: \"v12-styles-replace-custom-property-color\"\n      }), \" migration then validate with RegExp. Please reference the \", _jsx(_components.a, {\n        href: \"#migration-workflow\",\n        children: \"recommended migration workflow\"\n      }), \" section below for additional migration support.\"]\n    }), \"\\n\", _jsx(CollapsibleDetails, {\n      summary: \"üí° Migration example\",\n      children: _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-diff\",\n          children: \"- color: var(--p-color-bg);\\n+ color: var(--p-color-bg-surface);\\n\"\n        })\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"üîî Stepped migration\"\n      }), \": The color migration needs to be run in \", _jsx(_components.strong, {\n        children: \"4\"\n      }), \" sequential steps due to overlapping \", _jsx(_components.code, {\n        children: \"color\"\n      }), \" token names and context dependent manual migrations.\"]\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"color-migration-step-1\",\n      children: \"Color migration step 1\"\n    }), \"\\n\", _jsx(Code, {\n      code: {\n        title: 'Polaris Migrator codemod for step 1',\n        className: 'language-bash',\n        code: (String.raw)`npx @shopify/polaris-migrator v12-styles-replace-custom-property-color \"**/*.{css,scss}\" --step=1`\n      }\n    }), \"\\n\", _jsxs(CollapsibleDetails, {\n      summary: \"‚úÖ Post-migration RegExp validation for step 1\",\n      children: [_jsx(\"p\", {\n        children: _jsxs(_components.p, {\n          children: [\"After migrating, use the following RegExp to check for any additional\\ninstances of \", _jsx(_components.code, {\n            children: \"color\"\n          }), \" custom properties across all file types:\"]\n        })\n      }), _jsx(Code, {\n        code: {\n          title: 'Check RegExp for hardcoded color custom properties across all file types',\n          code: (String.raw)`(?:--p-color-avatar-background-experimental|--p-color-avatar-color-experimental|--p-color-avatar-style-five-background-experimental|--p-color-avatar-style-five-color-experimental|--p-color-avatar-style-four-background-experimental|--p-color-avatar-style-four-color-experimental|--p-color-avatar-style-one-background-experimental|--p-color-avatar-style-one-color-experimental|--p-color-avatar-style-three-background-experimental|--p-color-avatar-style-three-color-experimental|--p-color-avatar-style-two-background-experimental|--p-color-avatar-style-two-color-experimental|--p-color-bg|--p-color-bg-active|--p-color-bg-app-active|--p-color-bg-app-hover|--p-color-bg-app-selected|--p-color-bg-backdrop-experimental|--p-color-bg-caution|--p-color-bg-caution-strong|--p-color-bg-caution-subdued|--p-color-bg-caution-subdued-active|--p-color-bg-caution-subdued-hover|--p-color-bg-critical|--p-color-bg-critical-strong|--p-color-bg-critical-strong-active|--p-color-bg-critical-strong-hover|--p-color-bg-critical-subdued|--p-color-bg-critical-subdued-active|--p-color-bg-critical-subdued-hover|--p-color-bg-disabled|--p-color-bg-hover|--p-color-bg-info|--p-color-bg-info-strong|--p-color-bg-info-subdued|--p-color-bg-info-subdued-active|--p-color-bg-info-subdued-hover|--p-color-bg-input|--p-color-bg-input-active-experimental|--p-color-bg-input-hover-experimental|--p-color-bg-inset|--p-color-bg-inset-strong|--p-color-bg-interactive|--p-color-bg-interactive-active|--p-color-bg-interactive-disabled|--p-color-bg-interactive-hover|--p-color-bg-interactive-selected|--p-color-bg-interactive-subdued|--p-color-bg-interactive-subdued-active|--p-color-bg-interactive-subdued-hover|--p-color-bg-inverse-active|--p-color-bg-inverse-hover|--p-color-bg-magic|--p-color-bg-magic-active|--p-color-bg-magic-hover|--p-color-bg-magic-strong|--p-color-bg-magic-subdued|--p-color-bg-magic-subdued-hover|--p-color-bg-primary|--p-color-bg-primary-active|--p-color-bg-primary-disabled-experimental|--p-color-bg-primary-hover|--p-color-bg-primary-subdued|--p-color-bg-primary-subdued-active|--p-color-bg-primary-subdued-hover|--p-color-bg-primary-subdued-selected|--p-color-bg-secondary-experimental|--p-color-bg-strong|--p-color-bg-strong-active|--p-color-bg-strong-hover|--p-color-bg-subdued|--p-color-bg-subdued-active|--p-color-bg-subdued-hover|--p-color-bg-success|--p-color-bg-success-strong|--p-color-bg-success-strong-active-experimental|--p-color-bg-success-strong-hover-experimental|--p-color-bg-success-subdued|--p-color-bg-success-subdued-active|--p-color-bg-success-subdued-hover|--p-color-bg-transparent-active-experimental|--p-color-bg-transparent-disabled-experimental|--p-color-bg-transparent-experimental|--p-color-bg-transparent-hover-experimental|--p-color-bg-transparent-primary-disabled-experimental|--p-color-bg-transparent-subdued-experimental|--p-color-bg-warning|--p-color-bg-warning-strong-experimental|--p-color-bg-warning-subdued-experimental|--p-color-border-critical-strong-experimental|--p-color-border-input|--p-color-border-input-active-experimental|--p-color-border-input-hover|--p-color-border-interactive|--p-color-border-interactive-active|--p-color-border-interactive-disabled|--p-color-border-caution-subdued|--p-color-border-critical-active|--p-color-border-critical-hover|--p-color-border-critical-subdued|--p-color-border-info-subdued|--p-color-border-interactive-focus|--p-color-border-interactive-hover|--p-color-border-magic-strong|--p-color-border-primary|--p-color-border-strong|--p-color-border-strong-hover|--p-color-border-subdued|--p-color-border-success-subdued|--p-color-icon-interactive|--p-color-icon-interactive-active|--p-color-icon-interactive-hover|--p-color-icon-info-strong-experimental|--p-color-icon-interactive-disabled|--p-color-icon-primary|--p-color-icon-subdued|--p-color-icon-critical-strong-experimental|--p-color-icon-critical-strong-active-experimental|--p-color-icon-critical-strong-hover-experimental|--p-color-icon-success-strong-experimental|--p-color-icon-warning-strong-experimental|--p-color-text-critical-hover-experimental|--p-color-text-info-strong|--p-color-text-interactive|--p-color-text-interactive-active|--p-color-text-interactive-disabled|--p-color-text-interactive-hover|--p-color-text-interactive-inverse|--p-color-text-inverse-subdued|--p-color-text-primary|--p-color-text-primary-hover|--p-color-text-caution-strong|--p-color-text-critical-strong|--p-color-text-magic-strong|--p-color-text-success-strong|--p-color-text-subdued|--p-color-text-warning-experimental)(?![\\w-])`\n        }\n      }), _jsx(\"p\", {\n        children: _jsx(_components.p, {\n          children: \"Only replace instances flagged by the RegExp below if they are values listed\\nin the replacement map for this step (see table below):\"\n        })\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Box background=\"...\" /> prop`,\n          code: (String.raw)`<Box[^>\\w](?:[^>]|\\n)*?background`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Card background=\"...\" /> prop`,\n          code: (String.raw)`<Card[^>\\w](?:[^>]|\\n)*?background`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Box borderColor=\"...\" /> prop`,\n          code: (String.raw)`<Box[^>\\w](?:[^>]|\\n)*?borderColor`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Box outlineColor=\"...\" /> prop`,\n          code: (String.raw)`<Box[^>\\w](?:[^>]|\\n)*?outlineColor`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Divider borderColor=\"...\" /> prop`,\n          code: (String.raw)`<Divider[^>\\w](?:[^>]|\\n)*?borderColor`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Banner textColor=\"...\" /> prop`,\n          code: (String.raw)`<Banner[^>\\w](?:[^>]|\\n)*?textColor`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Box color=\"...\" /> prop`,\n          code: (String.raw)`<Box[^>\\w](?:[^>]|\\n)*?color`\n        }\n      })]\n    }), \"\\n\", _jsx(CollapsibleDetails, {\n      summary: \"‚û°Ô∏è Token replacement mappings for step 1\",\n      children: _jsxs(_components.table, {\n        children: [_jsx(_components.thead, {\n          children: _jsxs(_components.tr, {\n            children: [_jsx(_components.th, {\n              children: \"Deprecated Token\"\n            }), _jsx(_components.th, {\n              children: \"Replacement Value\"\n            })]\n          })\n        }), _jsxs(_components.tbody, {\n          children: [_jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-surface\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-hover\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-surface-hover\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-active\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-surface-active\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-disabled\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-surface-disabled\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-subdued\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-surface-secondary\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-subdued-hover\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-surface-secondary-hover\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-subdued-active\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-surface-secondary-active\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-secondary-experimental\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-surface-tertiary\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-strong\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-fill-tertiary\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-strong-hover\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-fill-tertiary-hover\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-strong-active\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-fill-tertiary-active\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-input\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-input-bg-surface\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-input-hover-experimental\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-input-bg-surface-hover\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-input-active-experimental\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-input-bg-surface-active\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-primary\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-fill-brand\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-primary-hover\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-fill-brand-hover\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-primary-active\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-fill-brand-active\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-primary-disabled-experimental\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-fill-brand-disabled\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-primary-subdued\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-surface-brand\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-primary-subdued-hover\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-surface-brand-hover\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-primary-subdued-active\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-surface-brand-active\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-primary-subdued-selected\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-surface-brand-selected\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-app-active\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-surface-active\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-app-hover\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-surface-hover\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-app-selected\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-surface-selected\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-success-strong\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-fill-success\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-success-strong-hover-experimental\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-fill-success-hover\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-success-strong-active-experimental\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-fill-success-active\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-success\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-fill-success-secondary\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-success-subdued\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-surface-success\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-success-subdued-hover\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-surface-success-hover\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-success-subdued-active\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-surface-success-active\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-critical-strong\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-fill-critical\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-critical-strong-hover\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-fill-critical-hover\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-critical-strong-active\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-fill-critical-active\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-critical\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-fill-critical-secondary\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-critical-subdued\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-surface-critical\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-critical-subdued-hover\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-surface-critical-hover\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-critical-subdued-active\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-surface-critical-active\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-caution-strong\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-fill-caution\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-caution\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-fill-caution-secondary\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-caution-subdued\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-surface-caution\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-caution-subdued-hover\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-surface-caution-hover\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-caution-subdued-active\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-surface-caution-active\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-info-strong\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-fill-info\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-info\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-fill-info-secondary\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-info-subdued\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-surface-info\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-info-subdued-hover\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-surface-info-hover\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-info-subdued-active\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-surface-info-active\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-warning-strong-experimental\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-fill-warning\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-warning\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-fill-warning-secondary\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-warning-subdued-experimental\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-surface-warning\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-magic-strong\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-fill-magic\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-magic\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-fill-magic-secondary\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-magic-hover\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-fill-magic-secondary-hover\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-magic-active\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-fill-magic-secondary-active\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-magic-subdued\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-surface-magic\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-magic-subdued-hover\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-surface-magic-hover\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-inset\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-fill-secondary\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-inset-strong\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-fill-inverse\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-interactive\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-fill-brand\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-interactive-active\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-fill-brand-active\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-interactive-disabled\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-surface-disabled\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-interactive-hover\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-fill-brand-hover\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-interactive-selected\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-surface-brand-selected\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-interactive-subdued\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-surface-brand\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-interactive-subdued-active\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-surface-brand-active\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-interactive-subdued-hover\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-surface-brand-hover\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-inverse-hover\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-fill-inverse-hover\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-inverse-active\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-fill-inverse-active\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-transparent-experimental\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-surface-transparent\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-transparent-hover-experimental\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-fill-transparent-hover\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-transparent-active-experimental\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-fill-transparent-active\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-transparent-disabled-experimental\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-fill-disabled\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-transparent-subdued-experimental\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-fill-transparent-secondary\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-transparent-primary-disabled-experimental\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-fill-brand-disabled\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-backdrop-experimental\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-backdrop-bg\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-avatar-background-experimental\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-avatar-bg-fill\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-avatar-style-one-background-experimental\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-avatar-one-bg-fill\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-avatar-style-two-background-experimental\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-avatar-two-bg-fill\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-avatar-style-three-background-experimental\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-avatar-three-bg-fill\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-avatar-style-four-background-experimental\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-avatar-four-bg-fill\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-avatar-style-five-background-experimental\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-avatar-five-bg-fill\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-text-caution-strong\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-text-caution\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-text-subdued\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-text-secondary\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-text-interactive\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-text-emphasis\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-text-interactive-hover\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-text-emphasis-hover\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-text-interactive-active\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-text-emphasis-active\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-text-interactive-disabled\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-text-disabled\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-text-primary\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-text-brand\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-text-primary-hover\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-text-brand-hover\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-text-critical-hover-experimental\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-text-critical-hover\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-text-critical-strong\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-text-critical\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-text-info-strong\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-text-info-on-bg-fill\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-text-warning-experimental\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-text-warning\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-text-inverse-subdued\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-text-inverse-secondary\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-text-interactive-inverse\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-text-link-inverse\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-text-magic-strong\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-text-magic\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-text-success-strong\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-text-success\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-avatar-color-experimental\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-avatar-text-on-bg-fill\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-avatar-style-one-color-experimental\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-avatar-one-text-on-bg-fill\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-avatar-style-two-color-experimental\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-avatar-two-text-on-bg-fill\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-avatar-style-three-color-experimental\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-avatar-three-text-on-bg-fill\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-avatar-style-four-color-experimental\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-avatar-four-text-on-bg-fill\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-avatar-style-five-color-experimental\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-avatar-five-text-on-bg-fill\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-icon-subdued\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-icon-secondary\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-icon-interactive\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-icon-emphasis\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-icon-interactive-hover\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-icon-emphasis-hover\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-icon-interactive-active\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-icon-emphasis-active\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-icon-interactive-disabled\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-icon-disabled\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-icon-info-strong-experimental\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-text-info\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-icon-primary\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-icon-brand\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-icon-critical-strong-experimental\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-text-critical\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-icon-critical-strong-active-experimental\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-text-critical-active\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-icon-critical-strong-hover-experimental\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-text-critical-hover\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-icon-success-strong-experimental\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-text-success\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-icon-warning-strong-experimental\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-text-warning\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-border-caution-subdued\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-border-caution\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-border-subdued\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-border-secondary\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-border-success-subdued\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-border-success\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-border-strong\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-border-tertiary\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-border-strong-hover\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-border-tertiary\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-border-info-subdued\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-border-info\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-border-input\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-input-border\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-border-input-hover\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-input-border-hover\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-border-input-active-experimental\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-input-border-active\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-border-interactive\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-border-emphasis\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-border-interactive-hover\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-border-emphasis-hover\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-border-interactive-active\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-border-emphasis-active\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-border-interactive-disabled\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-border-disabled\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-border-interactive-focus\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-border-focus\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-border-primary\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-border-brand\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-border-critical-active\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-border-critical\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-border-critical-hover\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-border-critical\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-border-critical-strong-experimental\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-border-critical-secondary\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-border-critical-subdued\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-border-critical\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-border-magic-strong\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-border-magic-secondary\"\n              })\n            })]\n          })]\n        })]\n      })\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"color-migration-step-2\",\n      children: \"Color migration step 2\"\n    }), \"\\n\", _jsx(Code, {\n      code: {\n        title: 'Polaris Migrator codemod for step 2',\n        className: 'language-bash',\n        code: (String.raw)`npx @shopify/polaris-migrator v12-styles-replace-custom-property-color \"**/*.{css,scss}\" --step=2`\n      }\n    }), \"\\n\", _jsxs(CollapsibleDetails, {\n      summary: \"‚úÖ Post-migration RegExp validation for step 2\",\n      children: [_jsx(\"p\", {\n        children: _jsxs(_components.p, {\n          children: [\"After migrating, use the following RegExp to check for any additional\\ninstances of \", _jsx(_components.code, {\n            children: \"color\"\n          }), \" custom properties across all file types:\"]\n        })\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Box outlineColor=\"...\" /> prop`,\n          code: (String.raw)`<Box[^>\\w](?:[^>]|\\n)*?outlineColor`\n        }\n      }), _jsx(Code, {\n        code: {\n          title: 'Check RegExp for outdated --p-color-bg-app token',\n          code: (String.raw)`(?:--p-color-bg-app)(?![\\w-])`\n        }\n      }), _jsx(\"p\", {\n        children: _jsx(_components.p, {\n          children: \"Only replace instances flagged by the RegExp below if they are values listed\\nin the replacement map for this step (see table below):\"\n        })\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Box background=\"...\" /> prop`,\n          code: (String.raw)`<Box[^>\\w](?:[^>]|\\n)*?background`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Card background=\"...\" /> prop`,\n          code: (String.raw)`<Card[^>\\w](?:[^>]|\\n)*?background`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Box borderColor=\"...\" /> prop`,\n          code: (String.raw)`<Box[^>\\w](?:[^>]|\\n)*?borderColor`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Box outlineColor=\"...\" /> prop`,\n          code: (String.raw)`<Box[^>\\w](?:[^>]|\\n)*?outlineColor`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Divider borderColor=\"...\" /> prop`,\n          code: (String.raw)`<Divider[^>\\w](?:[^>]|\\n)*?borderColor`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Banner textColor=\"...\" /> prop`,\n          code: (String.raw)`<Banner[^>\\w](?:[^>]|\\n)*?textColor`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Box color=\"...\" /> prop`,\n          code: (String.raw)`<Box[^>\\w](?:[^>]|\\n)*?color`\n        }\n      })]\n    }), \"\\n\", _jsx(CollapsibleDetails, {\n      summary: \"‚û°Ô∏è Token replacement mappings for step 2\",\n      children: _jsxs(_components.table, {\n        children: [_jsx(_components.thead, {\n          children: _jsxs(_components.tr, {\n            children: [_jsx(_components.th, {\n              children: \"Deprecated Token\"\n            }), _jsx(_components.th, {\n              children: \"Replacement Value\"\n            })]\n          })\n        }), _jsx(_components.tbody, {\n          children: _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-app\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg\"\n              })\n            })]\n          })\n        })]\n      })\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"color-migration-step-3\",\n      children: \"Color migration step 3\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Manually migrate the following tokens to their hardcoded values:\"\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Deprecated Token\"\n          }), _jsx(_components.th, {\n            children: \"Replacement Value\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"--p-color-bg-transparent-primary-experimental\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"rgba(0, 0, 0, 0.62)\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"--p-color-bg-transparent-secondary-disabled-experimental\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"rgba(0, 0, 0, 0.08)\"\n            })\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsxs(CollapsibleDetails, {\n      summary: \"‚úÖ Post-migration RegExp validation for step 3\",\n      children: [_jsxs(_components.p, {\n        children: [\"After migrating, use the following RegExp to check for any additional\\ninstances of \", _jsx(_components.code, {\n          children: \"color\"\n        }), \" custom properties across all file types:\"]\n      }), _jsx(Code, {\n        code: {\n          title: 'Check RegExp for hardcoded color custom properties across all file types',\n          code: (String.raw)`(?:--p-color-bg-transparent-primary-experimental|--p-color-bg-transparent-secondary-disabled-experimental)(?![\\w-])`\n        }\n      }), _jsx(\"p\", {\n        children: _jsx(_components.p, {\n          children: \"Only replace instances flagged by the RegExp below if they are values listed\\nin the replacement map for this step (see table above):\"\n        })\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Box background=\"...\" /> prop`,\n          code: (String.raw)`<Box[^>\\w](?:[^>]|\\n)*?background`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Card background=\"...\" /> prop`,\n          code: (String.raw)`<Card[^>\\w](?:[^>]|\\n)*?background`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Box borderColor=\"...\" /> prop`,\n          code: (String.raw)`<Box[^>\\w](?:[^>]|\\n)*?borderColor`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Box outlineColor=\"...\" /> prop`,\n          code: (String.raw)`<Box[^>\\w](?:[^>]|\\n)*?outlineColor`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Divider borderColor=\"...\" /> prop`,\n          code: (String.raw)`<Divider[^>\\w](?:[^>]|\\n)*?borderColor`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Banner textColor=\"...\" /> prop`,\n          code: (String.raw)`<Banner[^>\\w](?:[^>]|\\n)*?textColor`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Box color=\"...\" /> prop`,\n          code: (String.raw)`<Box[^>\\w](?:[^>]|\\n)*?color`\n        }\n      })]\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"color-migration-step-4\",\n      children: \"Color migration step 4\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"on-color\"\n      }), \" is being replaced by \", _jsx(_components.code, {\n        children: \"on-bg-fill\"\n      }), \" tokens. These tokens will no longer be the same value but tailored to the background color the element is sitting on. This gives us greater control over the visual design of the admin.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"If you want to unblock your migration quickly you can manually hardcode the values using the following replacement map:\"\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Deprecated Token\"\n          }), _jsx(_components.th, {\n            children: \"Replacement Value\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"--p-color-icon-on-color\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"rgba(255, 255, 255, 1)\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"--p-color-text-on-color\"\n            })\n          }), _jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"rgba(255, 255, 255, 1)\"\n            })\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsxs(CollapsibleDetails, {\n      summary: \"‚úÖ Post-migration RegExp validation for step 4\",\n      children: [_jsxs(_components.p, {\n        children: [\"After migrating, use the following RegExp to check for any additional\\ninstances of \", _jsx(_components.code, {\n          children: \"color\"\n        }), \" custom properties across all file types:\"]\n      }), _jsx(Code, {\n        code: {\n          title: 'Check RegExp for hardcoded color custom properties across all file types',\n          code: (String.raw)`(?:--p-color-icon-on-color|--p-color-text-on-color)(?![\\w-])`\n        }\n      }), _jsx(\"p\", {\n        children: _jsx(_components.p, {\n          children: \"Only replace instances flagged by the RegExp below if they are values listed\\nin the replacement map for this step (see table above):\"\n        })\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Box background=\"...\" /> prop`,\n          code: (String.raw)`<Box[^>\\w](?:[^>]|\\n)*?background`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Card background=\"...\" /> prop`,\n          code: (String.raw)`<Card[^>\\w](?:[^>]|\\n)*?background`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Box borderColor=\"...\" /> prop`,\n          code: (String.raw)`<Box[^>\\w](?:[^>]|\\n)*?borderColor`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Box outlineColor=\"...\" /> prop`,\n          code: (String.raw)`<Box[^>\\w](?:[^>]|\\n)*?outlineColor`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Divider borderColor=\"...\" /> prop`,\n          code: (String.raw)`<Divider[^>\\w](?:[^>]|\\n)*?borderColor`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Banner textColor=\"...\" /> prop`,\n          code: (String.raw)`<Banner[^>\\w](?:[^>]|\\n)*?textColor`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Box color=\"...\" /> prop`,\n          code: (String.raw)`<Box[^>\\w](?:[^>]|\\n)*?color`\n        }\n      })]\n    }), \"\\n\", _jsx(CollapsibleDetails, {\n      summary: \"If you want to update your code to use the correct token instead of hardcoding, you can use the table below as a general guide to manually update `text-on-color` and `icon-on-color` tokens based on background color context:\",\n      children: _jsxs(_components.table, {\n        children: [_jsx(_components.thead, {\n          children: _jsxs(_components.tr, {\n            children: [_jsx(_components.th, {\n              children: \"Background color of parent container\"\n            }), _jsx(_components.th, {\n              children: \"Text + Icon color on top of parent container\"\n            })]\n          })\n        }), _jsxs(_components.tbody, {\n          children: [_jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-fill-info\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-text-info-on-bg-fill\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-fill-success\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-text-success-on-bg-fill\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-fill-caution\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-text-caution-on-bg-fill\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-fill-warning\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-text-warning-on-bg-fill\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-fill-critical\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-text-critical-on-bg-fill\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-fill-magic\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-text-magic-on-bg-fill\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-fill-emphasis\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-text-emphasis-on-bg-fill\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-fill-inverse\"\n              })\n            }), _jsxs(_components.td, {\n              children: [_jsx(_components.code, {\n                children: \"--p-color-text-inverse\"\n              }), _jsx(\"br\", {}), _jsx(_components.code, {\n                children: \"--p-color-text-inverse-secondary\"\n              }), _jsx(\"br\", {}), _jsx(_components.code, {\n                children: \"--p-color-icon-inverse\"\n              })]\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-color-bg-inverse\"\n              })\n            }), _jsxs(_components.td, {\n              children: [_jsx(_components.code, {\n                children: \"--p-color-text-inverse\"\n              }), _jsx(\"br\", {}), _jsx(_components.code, {\n                children: \"--p-color-text-inverse-secondary\"\n              }), _jsx(\"br\", {}), _jsx(_components.code, {\n                children: \"--p-color-icon-inverse\"\n              })]\n            })]\n          })]\n        })]\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"font\",\n      children: \"Font\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"To replace deprecated \", _jsx(_components.code, {\n        children: \"font\"\n      }), \" custom properties, you can run the \", _jsx(_components.a, {\n        href: \"/tools/polaris-migrator#v12-styles-replace-custom-property-font\",\n        children: \"v12-styles-replace-custom-property-font\"\n      }), \" migration then validate with RegExp. Please reference the \", _jsx(_components.a, {\n        href: \"#migration-workflow\",\n        children: \"recommended migration workflow\"\n      }), \" section below for additional migration support.\"]\n    }), \"\\n\", _jsxs(CollapsibleDetails, {\n      summary: \"üí° Migration example\",\n      children: [_jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-diff\",\n          children: \"- font-size: var(--p-font-size-75);\\n+ font-size: var(--p-font-size-300);\\n\"\n        })\n      }), _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-diff\",\n          children: \"- line-height: var(--p-font-line-height-1);\\n+ line-height: var(--p-font-line-height-400);\\n\"\n        })\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"üîî Stepped migration\"\n      }), \": The font migration needs to be run in \", _jsx(_components.strong, {\n        children: \"4\"\n      }), \" sequential steps due to overlapping \", _jsx(_components.code, {\n        children: \"font-size\"\n      }), \" token names.\"]\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"font-migration-step-1\",\n      children: \"Font migration step 1\"\n    }), \"\\n\", _jsx(Code, {\n      code: {\n        title: 'Polaris Migrator codemod for step 1',\n        className: 'language-bash',\n        code: (String.raw)`npx @shopify/polaris-migrator v12-styles-replace-custom-property-font \"**/*.{css,scss}\" --step=1`\n      }\n    }), \"\\n\", _jsxs(CollapsibleDetails, {\n      summary: \"‚úÖ Post-migration RegExp validation for step 1\",\n      children: [_jsxs(_components.p, {\n        children: [\"After migrating, use the following RegExp to check for any additional\\ninstances of \", _jsx(_components.code, {\n          children: \"font\"\n        }), \" custom properties across all file types:\"]\n      }), _jsx(Code, {\n        code: {\n          title: 'Check RegExp for hardcoded font custom properties across all file types',\n          code: (String.raw)`(?:--p-font-size-70-experimental|--p-font-size-80-experimental|--p-font-size-100|--p-font-size-700|--p-font-line-height-075-experimental|--p-font-line-height-1|--p-font-line-height-2|--p-font-line-height-3|--p-font-line-height-4|--p-font-line-height-5|--p-font-line-height-6|--p-font-line-height-7)(?![\\w-])`\n        }\n      })]\n    }), \"\\n\", _jsx(CollapsibleDetails, {\n      summary: \"‚û°Ô∏è Token replacement mappings for step 1\",\n      children: _jsxs(_components.table, {\n        children: [_jsx(_components.thead, {\n          children: _jsxs(_components.tr, {\n            children: [_jsx(_components.th, {\n              children: \"Deprecated Token\"\n            }), _jsx(_components.th, {\n              children: \"Replacement Value\"\n            })]\n          })\n        }), _jsxs(_components.tbody, {\n          children: [_jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-font-size-70-experimental\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-font-size-275\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-font-size-80-experimental\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-font-size-325\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-font-size-100\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-font-size-350\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-font-size-700\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-font-size-1000\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-font-line-height-075-experimental\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-font-line-height-300\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-font-line-height-1\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-font-line-height-400\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-font-line-height-2\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-font-line-height-500\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-font-line-height-3\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-font-line-height-600\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-font-line-height-4\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-font-line-height-700\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-font-line-height-5\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-font-line-height-800\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-font-line-height-6\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-font-line-height-1000\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-font-line-height-7\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-font-line-height-1200\"\n              })\n            })]\n          })]\n        })]\n      })\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"font-migration-step-2\",\n      children: \"Font migration step 2\"\n    }), \"\\n\", _jsx(Code, {\n      code: {\n        title: 'Polaris Migrator codemod for step 2',\n        className: 'language-bash',\n        code: (String.raw)`npx @shopify/polaris-migrator v12-styles-replace-custom-property-font \"**/*.{css,scss}\" --step=2`\n      }\n    }), \"\\n\", _jsxs(CollapsibleDetails, {\n      summary: \"‚úÖ Post-migration RegExp validation for step 2\",\n      children: [_jsxs(_components.p, {\n        children: [\"After migrating, use the following RegExp to check for any additional\\ninstances of \", _jsx(_components.code, {\n          children: \"font\"\n        }), \" custom properties across all file types:\"]\n      }), _jsx(Code, {\n        code: {\n          title: 'Check RegExp for hardcoded font custom properties across all file types',\n          code: (String.raw)`(?:--p-font-size-500|--p-font-size-600)(?![\\w-])`\n        }\n      })]\n    }), \"\\n\", _jsx(CollapsibleDetails, {\n      summary: \"‚û°Ô∏è Token replacement mappings for step 2\",\n      children: _jsxs(_components.table, {\n        children: [_jsx(_components.thead, {\n          children: _jsxs(_components.tr, {\n            children: [_jsx(_components.th, {\n              children: \"Deprecated Token\"\n            }), _jsx(_components.th, {\n              children: \"Replacement Value\"\n            })]\n          })\n        }), _jsxs(_components.tbody, {\n          children: [_jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-font-size-500\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-font-size-750\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-font-size-600\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-font-size-900\"\n              })\n            })]\n          })]\n        })]\n      })\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"font-migration-step-3\",\n      children: \"Font migration step 3\"\n    }), \"\\n\", _jsx(Code, {\n      code: {\n        title: 'Polaris Migrator codemod for step 3',\n        className: 'language-bash',\n        code: (String.raw)`npx @shopify/polaris-migrator v12-styles-replace-custom-property-font \"**/*.{css,scss}\" --step=3`\n      }\n    }), \"\\n\", _jsxs(CollapsibleDetails, {\n      summary: \"‚úÖ Post-migration RegExp validation for step 3\",\n      children: [_jsxs(_components.p, {\n        children: [\"After migrating, use the following RegExp to check for any additional\\ninstances of \", _jsx(_components.code, {\n          children: \"font\"\n        }), \" custom properties across all file types:\"]\n      }), _jsx(Code, {\n        code: {\n          title: 'Check RegExp for hardcoded font custom properties across all file types',\n          code: (String.raw)`(?:--p-font-size-300|--p-font-size-400)(?![\\w-])`\n        }\n      })]\n    }), \"\\n\", _jsx(CollapsibleDetails, {\n      summary: \"‚û°Ô∏è Token replacement mappings for step 3\",\n      children: _jsxs(_components.table, {\n        children: [_jsx(_components.thead, {\n          children: _jsxs(_components.tr, {\n            children: [_jsx(_components.th, {\n              children: \"Deprecated Token\"\n            }), _jsx(_components.th, {\n              children: \"Replacement Value\"\n            })]\n          })\n        }), _jsxs(_components.tbody, {\n          children: [_jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-font-size-300\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-font-size-500\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-font-size-400\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-font-size-600\"\n              })\n            })]\n          })]\n        })]\n      })\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"font-migration-step-4\",\n      children: \"Font migration step 4\"\n    }), \"\\n\", _jsx(Code, {\n      code: {\n        title: 'Polaris Migrator codemod for step 4',\n        className: 'language-bash',\n        code: (String.raw)`npx @shopify/polaris-migrator v12-styles-replace-custom-property-font \"**/*.{css,scss}\" --step=4`\n      }\n    }), \"\\n\", _jsxs(CollapsibleDetails, {\n      summary: \"‚úÖ Post-migration RegExp validation for step 4\",\n      children: [_jsxs(_components.p, {\n        children: [\"After migrating, use the following RegExp to check for any additional\\ninstances of \", _jsx(_components.code, {\n          children: \"font\"\n        }), \" custom properties across all file types:\"]\n      }), _jsx(Code, {\n        code: {\n          title: 'Check RegExp for hardcoded font custom properties across all file types',\n          code: (String.raw)`(?:--p-font-size-75|--p-font-size-200)(?![\\w-])`\n        }\n      })]\n    }), \"\\n\", _jsx(CollapsibleDetails, {\n      summary: \"‚û°Ô∏è Token replacement mappings for step 4\",\n      children: _jsxs(_components.table, {\n        children: [_jsx(_components.thead, {\n          children: _jsxs(_components.tr, {\n            children: [_jsx(_components.th, {\n              children: \"Deprecated Token\"\n            }), _jsx(_components.th, {\n              children: \"Replacement Value\"\n            })]\n          })\n        }), _jsxs(_components.tbody, {\n          children: [_jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-font-size-75\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-font-size-300\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-font-size-200\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-font-size-400\"\n              })\n            })]\n          })]\n        })]\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"shadow\",\n      children: \"Shadow\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"To replace deprecated \", _jsx(_components.code, {\n        children: \"shadow\"\n      }), \" custom properties, you can run the \", _jsx(_components.a, {\n        href: \"/tools/polaris-migrator#v12-styles-replace-custom-property-shadow\",\n        children: \"v12-styles-replace-custom-property-shadow\"\n      }), \" migration then validate with RegExp. Please reference the \", _jsx(_components.a, {\n        href: \"#migration-workflow\",\n        children: \"recommended migration workflow\"\n      }), \" section below for additional migration support.\"]\n    }), \"\\n\", _jsx(CollapsibleDetails, {\n      summary: \"üí° Migration example\",\n      children: _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-diff\",\n          children: \"- box-shadow: var(--p-shadow-xs);\\n+ box-shadow: var(--p-shadow-100);\\n\"\n        })\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"üîî Stepped migration\"\n      }), \": The shadow migration needs to be run in \", _jsx(_components.strong, {\n        children: \"2\"\n      }), \" sequential steps due to context dependent manual migrations.\"]\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"shadow-migration-step-1\",\n      children: \"Shadow migration step 1\"\n    }), \"\\n\", _jsx(Code, {\n      code: {\n        title: 'Polaris Migrator codemod for step 1',\n        className: 'language-bash',\n        code: (String.raw)`npx @shopify/polaris-migrator v12-styles-replace-custom-property-shadow \"**/*.{css,scss}\"`\n      }\n    }), \"\\n\", _jsxs(CollapsibleDetails, {\n      summary: \"‚úÖ Post-migration RegExp validation for step 1\",\n      children: [_jsxs(_components.p, {\n        children: [\"After migrating, use the following RegExp to check for any additional\\ninstances of \", _jsx(_components.code, {\n          children: \"shadow\"\n        }), \" custom properties across all file types:\"]\n      }), _jsx(Code, {\n        code: {\n          title: 'Check RegExp for hardcoded font custom properties across all file types',\n          code: (String.raw)`(?:--p-shadow-inset-lg|--p-shadow-inset-md|--p-shadow-inset-sm|--p-shadow-none|--p-shadow-xs|--p-shadow-sm|--p-shadow-md|--p-shadow-lg|--p-shadow-xl|--p-shadow-2xl|--p-shadow-bevel-experimental|--p-shadow-card-sm-experimental|--p-shadow-card-md-experimental|--p-shadow-card-lg-experimental|--p-shadow-button-experimental|--p-shadow-button-hover-experimental|--p-shadow-button-disabled-experimental|--p-shadow-button-primary-strong-experimental|--p-shadow-button-primary-strong-inset-experimental|--p-shadow-button-primary-strong-hover-experimental|--p-shadow-border-inset-experimental)(?![\\w-])`\n        }\n      }), _jsx(\"p\", {\n        children: _jsx(_components.p, {\n          children: \"Only replace instances flagged by the RegExp below if they are values listed\\nin the replacement map for this step (see table below):\"\n        })\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Box shadow=\"...\" /> prop`,\n          code: (String.raw)`<Box[^>\\w](?:[^>]|\\n)*?shadow`\n        }\n      })]\n    }), \"\\n\", _jsx(CollapsibleDetails, {\n      summary: \"‚û°Ô∏è Token replacement mappings for step 1\",\n      children: _jsxs(_components.table, {\n        children: [_jsx(_components.thead, {\n          children: _jsxs(_components.tr, {\n            children: [_jsx(_components.th, {\n              children: \"Deprecated Token\"\n            }), _jsx(_components.th, {\n              children: \"Replacement Value\"\n            })]\n          })\n        }), _jsxs(_components.tbody, {\n          children: [_jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-shadow-inset-lg\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-shadow-inset-200\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-shadow-inset-md\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-shadow-inset-200\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-shadow-inset-sm\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-shadow-inset-100\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-shadow-none\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-shadow-0\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-shadow-xs\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-shadow-100\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-shadow-sm\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-shadow-200\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-shadow-md\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-shadow-300\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-shadow-lg\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-shadow-400\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-shadow-xl\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-shadow-500\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-shadow-2xl\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-shadow-600\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-shadow-bevel-experimental\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-shadow-bevel-100\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-shadow-card-sm-experimental\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-shadow-100\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-shadow-card-md-experimental\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-shadow-200\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-shadow-card-lg-experimental\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-shadow-300\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-shadow-button-experimental\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-shadow-button\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-shadow-button-hover-experimental\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-shadow-button-hover\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-shadow-button-disabled-experimental\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"inset 0 0 0 1px rgba(227, 227, 227, 1)\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-shadow-button-primary-strong-experimental\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-shadow-button-primary\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-shadow-button-primary-strong-inset-experimental\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-shadow-button-primary-inset\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-shadow-button-primary-strong-hover-experimental\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-shadow-button-primary-hover\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-shadow-border-inset-experimental\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-shadow-border-inset\"\n              })\n            })]\n          })]\n        })]\n      })\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"shadow-migration-step-2\",\n      children: \"Shadow migration step 2\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The following tokens need to be manually migrated because their values are context dependent:\"\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Deprecated Token\"\n          }), _jsx(_components.th, {\n            children: \"Replacement Value\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"--p-shadow-button-primary-experimental\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.code, {\n              children: \"--p-shadow-button-primary-critical\"\n            }), _jsx(\"br\", {}), _jsx(_components.code, {\n              children: \"--p-shadow-button-primary-success\"\n            })]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"--p-shadow-button-primary-hover-experimental\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.code, {\n              children: \"--p-shadow-button-primary-critical-hover\"\n            }), _jsx(\"br\", {}), _jsx(_components.code, {\n              children: \"--p-shadow-button-primary-success-hover\"\n            })]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"--p-shadow-button-inset-experimental\"\n            })\n          }), _jsxs(_components.td, {\n            children: [_jsx(_components.code, {\n              children: \"--p-shadow-button-primary-critical-inset\"\n            }), _jsx(\"br\", {}), _jsx(_components.code, {\n              children: \"--p-shadow-button-primary-success-inset\"\n            })]\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsxs(CollapsibleDetails, {\n      summary: \"‚úÖ Post-migration RegExp validation\",\n      children: [_jsxs(_components.p, {\n        children: [\"After migrating, use the following RegExp to check for any additional\\ninstances of \", _jsx(_components.code, {\n          children: \"shadow\"\n        }), \" custom properties across all file types:\"]\n      }), _jsx(Code, {\n        code: {\n          title: 'Check RegExp for hardcoded font custom properties across all file types',\n          code: (String.raw)`(?:--p-shadow-button-primary-experimental|--p-shadow-button-primary-hover-experimental|--p-shadow-button-inset-experimental)(?![\\w-])`\n        }\n      }), _jsx(\"p\", {\n        children: _jsx(_components.p, {\n          children: \"Only replace instances flagged by the RegExp below if they are values listed\\nin the replacement map for this step (see table below):\"\n        })\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Box shadow=\"...\" /> prop`,\n          code: (String.raw)`<Box[^>\\w](?:[^>]|\\n)*?shadow`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <ShadowBevel boxShadow=\"...\" /> prop`,\n          code: (String.raw)`<ShadowBevel[^>\\w](?:[^>]|\\n)*?boxShadow`\n        }\n      })]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"space\",\n      children: \"Space\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"To replace deprecated \", _jsx(_components.code, {\n        children: \"space\"\n      }), \" custom properties, you can run the \", _jsx(_components.a, {\n        href: \"/tools/polaris-migrator#v12-styles-replace-custom-property-space\",\n        children: \"v12-styles-replace-custom-property-space\"\n      }), \" migration then validate with RegExp. Please reference the \", _jsx(_components.a, {\n        href: \"#migration-workflow\",\n        children: \"recommended migration workflow\"\n      }), \" section below for additional migration support.\"]\n    }), \"\\n\", _jsx(CollapsibleDetails, {\n      summary: \"üí° Migration example\",\n      children: _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-diff\",\n          children: \"- padding: var(--p-space-1);\\n+ padding: var(--p-space-100);\\n\"\n        })\n      })\n    }), \"\\n\", _jsx(Code, {\n      code: {\n        title: 'polaris-migrator codemod',\n        className: 'language-bash',\n        code: (String.raw)`npx @shopify/polaris-migrator v12-styles-replace-custom-property-space \"**/*.{css,scss}\"`\n      }\n    }), \"\\n\", _jsxs(CollapsibleDetails, {\n      summary: \"‚úÖ Post-migration RegExp validation\",\n      children: [_jsxs(_components.p, {\n        children: [\"After migrating, use the following RegExp to check for any additional\\ninstances of \", _jsx(_components.code, {\n          children: \"space\"\n        }), \" custom properties across all file types:\"]\n      }), _jsx(Code, {\n        code: {\n          title: 'Check RegExp for hardcoded font custom properties across all file types',\n          code: (String.raw)`(?:--p-space-05|--p-space-1|--p-space-1_5-experimental|--p-space-2|--p-space-3|--p-space-4|--p-space-5|--p-space-6|--p-space-8|--p-space-10|--p-space-12|--p-space-16 |--p-space-20 |--p-space-24|--p-space-28 |--p-space-32)(?![\\w-])`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Tooltip padding=\"...\" /> prop`,\n          code: (String.raw)`<Tooltip[^>\\w](?:[^>]|\\n)*?padding`\n        }\n      }), _jsx(\"p\", {\n        children: _jsxs(_components.p, {\n          children: [_jsx(_components.strong, {\n            children: \"‚ö†Ô∏è Important\"\n          }), \": The RegExp you use here will depend on if you've run\\ncomponent migrations. If you have not then use \", _jsx(_components.code, {\n            children: \"HorizontalGrid\"\n          }), \" if you have\\nthen use \", _jsx(_components.code, {\n            children: \"InlineGrid\"\n          }), \".\"]\n        })\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <HorizontalGrid gap=\"...\" /> prop`,\n          code: (String.raw)`<HorizontalGrid[^>\\w](?:[^>]|\\n)*?gap`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <InlineGrid gap=\"...\" /> prop`,\n          code: (String.raw)`<InlineGrid[^>\\w](?:[^>]|\\n)*?gap`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Box padding=\"...\" /> prop`,\n          code: (String.raw)`<Box[^>\\w](?:[^>]|\\n)*?padding`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Box paddingBlockStart=\"...\" /> prop`,\n          code: (String.raw)`<Box[^>\\w](?:[^>]|\\n)*?paddingBlockStart`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Box paddingBlockEnd=\"...\" /> prop`,\n          code: (String.raw)`<Box[^>\\w](?:[^>]|\\n)*?paddingBlockEnd`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Box paddingInlineStart=\"...\" /> prop`,\n          code: (String.raw)`<Box[^>\\w](?:[^>]|\\n)*?paddingInlineStart`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Box paddingInlineEnd=\"...\" /> prop`,\n          code: (String.raw)`<Box[^>\\w](?:[^>]|\\n)*?paddingInlineEnd`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Box insetBlockStart=\"...\" /> prop`,\n          code: (String.raw)`<Box[^>\\w](?:[^>]|\\n)*?insetBlockStart`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Box insetBlockEnd=\"...\" /> prop`,\n          code: (String.raw)`<Box[^>\\w](?:[^>]|\\n)*?insetBlockEnd`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Box insetInlineStart=\"...\" /> prop`,\n          code: (String.raw)`<Box[^>\\w](?:[^>]|\\n)*?insetInlineStart`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Box insetInlineEnd=\"...\" /> prop`,\n          code: (String.raw)`<Box[^>\\w](?:[^>]|\\n)*?insetInlineEnd`\n        }\n      }), _jsx(\"p\", {\n        children: _jsxs(_components.p, {\n          children: [_jsx(_components.strong, {\n            children: \"‚ö†Ô∏è Important\"\n          }), \": The RegExp you use here will depend on if you've run\\ncomponent migrations. If you have not then use \", _jsx(_components.code, {\n            children: \"VerticalStack\"\n          }), \" if you have\\nthen use \", _jsx(_components.code, {\n            children: \"BlockStack\"\n          }), \".\"]\n        })\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <VerticalStack gap=\"...\" /> prop`,\n          code: (String.raw)`<VerticalStack[^>\\w](?:[^>]|\\n)*?gap`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <BlockStack gap=\"...\" /> prop`,\n          code: (String.raw)`<BlockStack[^>\\w](?:[^>]|\\n)*?gap`\n        }\n      }), _jsx(\"p\", {\n        children: _jsxs(_components.p, {\n          children: [_jsx(_components.strong, {\n            children: \"‚ö†Ô∏è Important\"\n          }), \": The RegExp you use here will depend on if you've run\\ncomponent migrations. If you have not then use \", _jsx(_components.code, {\n            children: \"HorizontalStack\"\n          }), \" if you have\\nthen use \", _jsx(_components.code, {\n            children: \"InlineStack\"\n          }), \".\"]\n        })\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <HorizontalStack gap=\"...\" /> prop`,\n          code: (String.raw)`<HorizontalStack[^>\\w](?:[^>]|\\n)*?gap`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <InlineStack gap=\"...\" /> prop`,\n          code: (String.raw)`<InlineStack[^>\\w](?:[^>]|\\n)*?gap`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Choice bleed=\"...\" /> prop`,\n          code: (String.raw)`<Choice[^>\\w](?:[^>]|\\n)*?bleed`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Choice bleedBlockStart=\"...\" /> prop`,\n          code: (String.raw)`<Choice[^>\\w](?:[^>]|\\n)*?bleedBlockStart`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Choice bleedBlockEnd=\"...\" /> prop`,\n          code: (String.raw)`<Choice[^>\\w](?:[^>]|\\n)*?bleedBlockEnd`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Choice bleedInlineStart=\"...\" /> prop`,\n          code: (String.raw)`<Choice[^>\\w](?:[^>]|\\n)*?bleedInlineStart`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Choice bleedInlineEnd=\"...\" /> prop`,\n          code: (String.raw)`<Choice[^>\\w](?:[^>]|\\n)*?bleedInlineEnd`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <RadioButton bleed=\"...\" /> prop`,\n          code: (String.raw)`<RadioButton[^>\\w](?:[^>]|\\n)*?bleed`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <RadioButton bleedBlockStart=\"...\" /> prop`,\n          code: (String.raw)`<RadioButton[^>\\w](?:[^>]|\\n)*?bleedBlockStart`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <RadioButton bleedBlockEnd=\"...\" /> prop`,\n          code: (String.raw)`<RadioButton[^>\\w](?:[^>]|\\n)*?bleedBlockEnd`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <RadioButton bleedInlineStart=\"...\" /> prop`,\n          code: (String.raw)`<RadioButton[^>\\w](?:[^>]|\\n)*?bleedInlineStart`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <RadioButton bleedInlineEnd=\"...\" /> prop`,\n          code: (String.raw)`<RadioButton[^>\\w](?:[^>]|\\n)*?bleedInlineEnd`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Checkbox bleed=\"...\" /> prop`,\n          code: (String.raw)`<Checkbox[^>\\w](?:[^>]|\\n)*?bleed`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Checkbox bleedBlockStart=\"...\" /> prop`,\n          code: (String.raw)`<Checkbox[^>\\w](?:[^>]|\\n)*?bleedBlockStart`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Checkbox bleedBlockEnd=\"...\" /> prop`,\n          code: (String.raw)`<Checkbox[^>\\w](?:[^>]|\\n)*?bleedBlockEnd`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Checkbox bleedInlineStart=\"...\" /> prop`,\n          code: (String.raw)`<Checkbox[^>\\w](?:[^>]|\\n)*?bleedInlineStart`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Checkbox bleedInlineEnd=\"...\" /> prop`,\n          code: (String.raw)`<Checkbox[^>\\w](?:[^>]|\\n)*?bleedInlineEnd`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Stack gap=\"...\" /> prop`,\n          code: (String.raw)`<Stack[^>\\w](?:[^>]|\\n)*?gap`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Grid gap=\"...\" /> prop`,\n          code: (String.raw)`<Grid[^>\\w](?:[^>]|\\n)*?gap`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Grid gapX=\"...\" /> prop`,\n          code: (String.raw)`<Grid[^>\\w](?:[^>]|\\n)*?gapX`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Grid gapY=\"...\" /> prop`,\n          code: (String.raw)`<Grid[^>\\w](?:[^>]|\\n)*?gapY`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Card padding=\"...\" /> prop`,\n          code: (String.raw)`<Card[^>\\w](?:[^>]|\\n)*?padding`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Bleed marginInline=\"...\" /> prop`,\n          code: (String.raw)`<Bleed[^>\\w](?:[^>]|\\n)*?marginInline`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Bleed marginBlock=\"...\" /> prop`,\n          code: (String.raw)`<Bleed[^>\\w](?:[^>]|\\n)*?marginBlock`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Bleed marginBlockStart=\"...\" /> prop`,\n          code: (String.raw)`<Bleed[^>\\w](?:[^>]|\\n)*?marginBlockStart`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Bleed marginBlockEnd=\"...\" /> prop`,\n          code: (String.raw)`<Bleed[^>\\w](?:[^>]|\\n)*?marginBlockEnd`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Bleed marginInlineStart=\"...\" /> prop`,\n          code: (String.raw)`<Bleed[^>\\w](?:[^>]|\\n)*?marginInlineStart`\n        }\n      }), _jsx(Code, {\n        code: {\n          className: 'language-regex',\n          title: `Check RegExp for outdated <Bleed marginInlineEnd=\"...\" /> prop`,\n          code: (String.raw)`<Bleed[^>\\w](?:[^>]|\\n)*?marginInlineEnd`\n        }\n      })]\n    }), \"\\n\", _jsx(CollapsibleDetails, {\n      summary: \"‚û°Ô∏è Token replacement mappings\",\n      children: _jsxs(_components.table, {\n        children: [_jsx(_components.thead, {\n          children: _jsxs(_components.tr, {\n            children: [_jsx(_components.th, {\n              children: \"Deprecated Token\"\n            }), _jsx(_components.th, {\n              children: \"Replacement Value\"\n            })]\n          })\n        }), _jsxs(_components.tbody, {\n          children: [_jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-space-05\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-space-050\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-space-1\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-space-100\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-space-1_5-experimental\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-space-150\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-space-2\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-space-200\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-space-3\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-space-300\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-space-4\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-space-400\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-space-5\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-space-500\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-space-6\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-space-600\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-space-8\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-space-800\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-space-10\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-space-1000\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-space-12\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-space-1200\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-space-16\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-space-1600\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-space-20\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-space-2000\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-space-24\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-space-2400\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-space-28\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-space-2800\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-space-32\"\n              })\n            }), _jsx(_components.td, {\n              children: _jsx(_components.code, {\n                children: \"--p-space-3200\"\n              })\n            })]\n          })]\n        })]\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"shopifypolaris-tokens-updates\",\n      children: [_jsx(_components.code, {\n        children: \"@shopify/polaris-tokens\"\n      }), \" updates\"]\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"renames\",\n      children: \"Renames\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"getCustomPropertyNames\"\n        }), \" renamed to \", _jsx(_components.code, {\n          children: \"getThemeVarNames\"\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"createVar\"\n        }), \" renamed to \", _jsx(_components.code, {\n          children: \"createVarName\"\n        })]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"deprecations\",\n      children: \"Deprecations\"\n    }), \"\\n\", _jsx(_components.h5, {\n      id: \"deprecated-utilities\",\n      children: \"Deprecated Utilities\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"If you are using these utilities, feel free to copy them from v11 into your own codebase.\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"createExact\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"createMetadata\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"getKeyframeNames\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"getUnit\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"isKeyOf\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"rem\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"removeMetadata\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"toEm\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"tokensToRems\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h5, {\n      id: \"deprecated-types\",\n      children: \"Deprecated Types\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"BreakpointsAliasDirectionMediaConditions\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"BreakpointsMediaConditions\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"MetaBreakpointsTokenGroup\"\n        })\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"Tokens\"\n        }), \" (replaced by \", _jsx(_components.code, {\n          children: \"Theme\"\n        }), \")\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h5, {\n      id: \"deprecated-all-json-exports\",\n      children: \"Deprecated all JSON exports\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"@shopify/polaris-tokens/json/border.json\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"@shopify/polaris-tokens/json/breakpoints.json\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"@shopify/polaris-tokens/json/color.json\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"@shopify/polaris-tokens/json/font.json\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"@shopify/polaris-tokens/json/height.json\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"@shopify/polaris-tokens/json/motion.json\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"@shopify/polaris-tokens/json/shadow.json\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"@shopify/polaris-tokens/json/space.json\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"@shopify/polaris-tokens/json/text.json\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"@shopify/polaris-tokens/json/width.json\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"@shopify/polaris-tokens/json/zIndex.json\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"If you are using these exports, update the implementation to import \", _jsx(_components.code, {\n        children: \"themes\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"JSON.stringify\"\n      }), \" the theme you need.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-diff\",\n        children: \"- const color = require('@shopify/polaris-tokens/json/color.json');\\n+ const {themes} = require('@shopify/polaris-tokens');\\n+ const color = JSON.stringify(themes.light.color);\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.h5, {\n      id: \"tokens-object\",\n      children: [_jsx(_components.code, {\n        children: \"tokens\"\n      }), \" object\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Instead of importing \", _jsx(_components.code, {\n        children: \"tokens\"\n      }), \" directly you should use the \", _jsx(_components.code, {\n        children: \"useTheme\"\n      }), \" hook when you have to access token values. If you must access the tokens directly, you can import \", _jsx(_components.code, {\n        children: \"tokens\"\n      }), \" -> \", _jsx(_components.code, {\n        children: \"defaultTheme\"\n      }), \" from \", _jsx(_components.code, {\n        children: \"@shopify/polaris-tokens\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-diff\",\n        children: \"- import {tokens} from '@shopify/polaris-tokens';\\n+ import {useTheme} from '@shopify/polaris';\\n\\n+ const theme = useTheme();\\n\\n- tokens.space['1'];\\n+ theme.space['100'];\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"manual-updates-and-fixes\",\n      children: \"Manual updates and fixes\"\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"a-new-web-font\",\n      children: \"A new web font\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The new design language comes with a web font called \", _jsx(_components.a, {\n        href: \"https://github.com/rsms/inter\",\n        children: \"Inter\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Polaris references this font but does not load it. Your app will need to load the font, otherwise it will fallback to the user's system font. You can load this font from Shopify by adding the following to your app's \", _jsx(_components.code, {\n        children: \"<head>\"\n      }), \":\"]\n    }), \"\\n\", \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-html\",\n        children: \"<link\\n  rel=\\\"preconnect\\\"\\n  href=\\\"https://cdn.shopify.com/\\\"\\n/>\\n<link\\n  rel=\\\"stylesheet\\\"\\n  href=\\\"https://cdn.shopify.com/static/fonts/inter/inter.css\\\"\\n/>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"icons\",\n      children: \"Icons\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Major and minor icon sizes are now identical.\\nYou may need to update custom icons in your app as they may look much larger than Polaris icons now.\\nAll icons still maintain the 20x20 viewbox.\"\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"dividers\",\n      children: \"Dividers\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"We removed dividers across Polaris components, most noticeably in \", _jsx(_components.a, {\n        href: \"/components/layout-and-structure/page\",\n        children: _jsx(_components.code, {\n          children: \"Page\"\n        })\n      }), \" and \", _jsx(_components.a, {\n        href: \"/components/deprecated/legacy-card\",\n        children: _jsx(_components.code, {\n          children: \"LegacyCard\"\n        })\n      }), \".\\nWe now recommend using spacing to create a visual hierarchy.\\nIf you must use a divider, use the \", _jsx(_components.a, {\n        href: \"/components/layout-and-structure/divider\",\n        children: _jsx(_components.code, {\n          children: \"Divider\"\n        })\n      }), \" component to add them back in where needed.\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"buttons-beside-inputs\",\n      children: \"Buttons beside inputs\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Default buttons have decreased in height and no longer match the height of some inputs, namely \", _jsx(_components.a, {\n        href: \"/components/selection-and-input/text-field\",\n        children: _jsx(_components.code, {\n          children: \"TextField\"\n        })\n      }), \" and \", _jsx(_components.a, {\n        href: \"/components/selection-and-input/select\",\n        children: _jsx(_components.code, {\n          children: \"Select\"\n        })\n      }), \".\\nTo update a button's height to match the new height of input fields, use the large size by using the \", _jsx(_components.code, {\n        children: \"large\"\n      }), \" size variant of \", _jsx(_components.a, {\n        href: \"/components/actions/button\",\n        children: _jsx(_components.code, {\n          children: \"Button\"\n        })\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-diff\",\n        children: \"- <TextField connectedRight={<Button icon={DeleteMajor} />} />\\n+ <TextField connectedRight={<Button icon={DeleteMajor} size=\\\"large\\\" />} />\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"legacycard\",\n      children: \"LegacyCard\"\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"heading-size\",\n      children: \"Heading size\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.a, {\n        href: \"/components/deprecated/legacy-card\",\n        children: _jsx(_components.code, {\n          children: \"LegacyCard\"\n        })\n      }), \" now enforces that \", _jsx(_components.code, {\n        children: \"h1\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"h2\"\n      }), \" content uses the \", _jsx(_components.code, {\n        children: \"Text\"\n      }), \" \", _jsx(_components.code, {\n        children: \"headingSm\"\n      }), \" variant (\", _jsx(_components.code, {\n        children: \"--p-font-size-325\"\n      }), \").\\nIf you want to use custom heading sizes, please refactor \", _jsx(_components.a, {\n        href: \"/components/deprecated/legacy-card\",\n        children: _jsx(_components.code, {\n          children: \"LegacyCard\"\n        })\n      }), \" to \", _jsx(_components.a, {\n        href: \"/components/layout-and-structure/card\",\n        children: _jsx(_components.code, {\n          children: \"Card\"\n        })\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"spacing-and-visual-hierarchy\",\n      children: \"Spacing and visual hierarchy\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.a, {\n        href: \"/components/deprecated/legacy-card\",\n        children: _jsx(_components.code, {\n          children: \"LegacyCard\"\n        })\n      }), \" now has much tighter spacing and does not have dividers between sections and subsections.\\nThis may result in some visual hierarchy/padding issues depending on how your cards are composed.\\nYou can resolve this in a number of ways:\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.em, {\n          children: \"recommended\"\n        }), \" ‚Äì Use \", _jsx(_components.a, {\n          href: \"/components/layout-and-structure/card\",\n          children: _jsx(_components.code, {\n            children: \"Card\"\n          })\n        }), \" and \", _jsx(_components.a, {\n          href: \"/components/layout-and-structure/block-stack\",\n          children: _jsx(_components.code, {\n            children: \"BlockStack\"\n          })\n        }), \" to compose a new card layout\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Remove any custom content spacing wrappers and use \", _jsx(_components.code, {\n          children: \"<LegacyCard.Section />\"\n        }), \", \", _jsx(_components.code, {\n          children: \"<LegacyCard.Header />\"\n        }), \", or \", _jsx(_components.code, {\n          children: \"<LegacyCard.Section flush />\"\n        }), \" instead.\\nIssues involving a lack of top or bottom padding on the card is likely caused by this.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Update all custom content padding using \", _jsx(_components.code, {\n          children: \"--p-space-500\"\n        }), \" to use \", _jsx(_components.code, {\n          children: \"--p-space-400\"\n        }), \".\\nThis includes content wrapped in a \", _jsx(_components.a, {\n          href: \"/components/deprecated/legacy-stack\",\n          children: _jsx(_components.code, {\n            children: \"LegacyStack\"\n          })\n        }), \" component.\", \"\\n\", _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-diff\",\n            children: \"- spacing='loose'\\n+ spacing={undefined}\\n\"\n          })\n        }), \"\\n\", \"or for \", _jsx(_components.a, {\n          href: \"/components/layout-and-structure/inline-stack\",\n          children: _jsx(_components.code, {\n            children: \"InlineStack\"\n          })\n        }), \"\\n\", _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-diff\",\n            children: \"- gap='5'\\n+ gap='4'\\n\"\n          })\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Add back dividers using \", _jsx(_components.a, {\n          href: \"/components/layout-and-structure/divider\",\n          children: _jsx(_components.code, {\n            children: \"Divider\"\n          })\n        }), \" where needed\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"As a last resort, you can add space with \", _jsx(_components.a, {\n          href: \"/components/layout-and-structure/box\",\n          children: _jsx(_components.code, {\n            children: \"Box\"\n          })\n        }), \" or remove space with \", _jsx(_components.a, {\n          href: \"/components/layout-and-structure/bleed\",\n          children: _jsx(_components.code, {\n            children: \"Bleed\"\n          })\n        }), \".\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"z-index\",\n      children: \"Z-Index\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The new design language introduces a shadow bevel in numerous components.\\nThe following component's children cannot be above the bevel's \", _jsx(_components.code, {\n        children: \"z-index\"\n      }), \" elevation:\"]\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Component\"\n          }), _jsxs(_components.th, {\n            children: [\"Bevel z-index\", _jsx(\"br\", {}), _jsx(_components.em, {\n              children: \"(children cannot be above this)\"\n            })]\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"Card\"\n          }), _jsx(_components.td, {\n            children: \"32\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"LegacyCard\"\n          }), _jsx(_components.td, {\n            children: \"101\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"Popover\"\n          }), _jsx(_components.td, {\n            children: \"2\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"TooltipOverlay\"\n          }), _jsx(_components.td, {\n            children: \"1\"\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"custom-elements\",\n      children: \"Custom elements\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Custom elements that were styled to look like the previous Polaris design language will need to be updated.\\nTake the opportunity to put custom styles and components on mainline Polaris using our \", _jsx(_components.a, {\n        href: \"/components\",\n        children: \"components\"\n      }), \" and \", _jsx(_components.a, {\n        href: \"/tokens/color\",\n        children: \"tokens\"\n      }), \".\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"title":"Migrating from v11 to v12","description":"Polaris v12.0.0 prop replacement, removal of components, renamed components, and token changes.","navTitle":"v12","icon":"ColorsMajor","collapsibleTOC":true,"order":1},"scope":{"__remarkNextMdxImporter":{}}},"seoDescription":"Getting started","editPageLinkPath":"/polaris.shopify.com/content/version-guides/migrating-from-v11-to-v12.mdx","isContentPage":true,"showTOC":false,"collapsibleTOC":true},"__N_SSG":true}