{"pageProps":{"mdx":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h3: \"h3\",\n    p: \"p\",\n    code: \"code\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(\"p\", {\n      id: \"usage\",\n      role: \"heading\",\n      \"aria-level\": \"2\",\n      children: \"Usage in Media Queries\"\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"sass-variables\",\n      children: \"Sass variables\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"A transform takes the above values and generates Sass variables (which can be\\nused in media conditions) for each breakpoint in \", _jsx(_components.code, {\n        children: \"up\"\n      }), \", \", _jsx(_components.code, {\n        children: \"down\"\n      }), \", and \", _jsx(_components.code, {\n        children: \"only\"\n      }), \" directions.\\nWhile we currently support \", _jsx(_components.code, {\n        children: \"down\"\n      }), \" media conditions, we encourage developers to\\nadopt a mobile first strategy and use \", _jsx(_components.code, {\n        children: \"up\"\n      }), \" wherever possible.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Example of generated output for \", _jsx(_components.code, {\n        children: \"breakpoints-md\"\n      }), \":\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-scss\",\n        children: \"@media #{$p-breakpoints-md-up} {/*...*/}\\n@media #{$p-breakpoints-md-down} {/*...*/}\\n@media #{$p-breakpoints-md-only} {/*...*/}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"To use these Sass variables you will need to import the \", _jsx(_components.code, {\n        children: \"media-queries.scss\"\n      }), \"\\nfile from \", _jsx(_components.code, {\n        children: \"@shopify/polaris-tokens\"\n      }), \" in your project:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-scss\",\n        children: \"@import 'path/to/node_modules/@shopify/polaris-tokens/dist/scss/media-queries';\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"media-query-variables\",\n      children: \"Media query variables\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"A collection of all Sass variables for applying responsive styles at a given breakpoint alias.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-scss\",\n        children: \"$p-breakpoints-xs-up: '(min-width: 0em)';\\n$p-breakpoints-xs-down: '(max-width: -0.0025em)';\\n$p-breakpoints-xs-only: '(min-width: 0em) and (max-width: 30.6225em)';\\n\\n$p-breakpoints-sm-up: '(min-width: 30.625em)';\\n$p-breakpoints-sm-down: '(max-width: 30.6225em)';\\n$p-breakpoints-sm-only: '(min-width: 30.625em) and (max-width: 47.9975em)';\\n\\n$p-breakpoints-md-up: '(min-width: 48em)';\\n$p-breakpoints-md-down: '(max-width: 47.9975em)';\\n$p-breakpoints-md-only: '(min-width: 48em) and (max-width: 64.9975em)';\\n\\n$p-breakpoints-lg-up: '(min-width: 65em)';\\n$p-breakpoints-lg-down: '(max-width: 64.9975em)';\\n$p-breakpoints-lg-only: '(min-width: 65em) and (max-width: 89.9975em)';\\n\\n$p-breakpoints-xl-up: '(min-width: 90em)';\\n$p-breakpoints-xl-down: '(max-width: 89.9975em)';\\n$p-breakpoints-xl-only: '(min-width: 90em)';\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"__remarkNextMdxImporter":{}}}},"__N_SSG":true}